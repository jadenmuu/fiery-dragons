[1mdiff --git a/.idea/.gitignore b/.idea/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 13566b8..0000000[m
[1m--- a/.idea/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-# Default ignored files[m
[31m-/shelf/[m
[31m-/workspace.xml[m
[31m-# Editor-based HTTP Client requests[m
[31m-/httpRequests/[m
[31m-# Datasource local storage ignored files[m
[31m-/dataSources/[m
[31m-/dataSources.local.xml[m
[1mdiff --git a/.idea/CL_Monday06pm_Team304.iml b/.idea/CL_Monday06pm_Team304.iml[m
[1mdeleted file mode 100644[m
[1mindex 3c1530f..0000000[m
[1m--- a/.idea/CL_Monday06pm_Team304.iml[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<module type="JAVA_MODULE" version="4">[m
[31m-  <component name="NewModuleRootManager" inherit-compiler-output="true">[m
[31m-    <exclude-output />[m
[31m-    <content url="file://$MODULE_DIR$">[m
[31m-      <sourceFolder url="file://$MODULE_DIR$/Project/Sprint Three/fiery-dragons/src" isTestSource="false" />[m
[31m-    </content>[m
[31m-    <orderEntry type="inheritedJdk" />[m
[31m-    <orderEntry type="sourceFolder" forTests="false" />[m
[31m-    <orderEntry type="library" exported="" name="lib" level="project" />[m
[31m-  </component>[m
[31m-</module>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/artifacts/CL_Monday06pm_Team304_jar.xml b/.idea/artifacts/CL_Monday06pm_Team304_jar.xml[m
[1mdeleted file mode 100644[m
[1mindex aa5c14a..0000000[m
[1m--- a/.idea/artifacts/CL_Monday06pm_Team304_jar.xml[m
[1m+++ /dev/null[m
[36m@@ -1,53 +0,0 @@[m
[31m-<component name="ArtifactManager">[m
[31m-  <artifact type="jar" name="CL_Monday06pm_Team304:jar">[m
[31m-    <output-path>$PROJECT_DIR$/out/artifacts/CL_Monday06pm_Team304_jar</output-path>[m
[31m-    <root id="archive" name="CL_Monday06pm_Team304.jar">[m
[31m-      <element id="module-output" name="CL_Monday06pm_Team304" />[m
[31m-      <element id="module-output" name="fiery-dragons" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib/1.8.10/kotlin-stdlib-1.8.10.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/22-ea+11/javafx-swing-22-ea+11-win.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/github/almasb/fxgl/17.3/fxgl-17.3.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-common/1.8.10/kotlin-stdlib-common-1.8.10.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-web/22-ea+11/javafx-web-22-ea+11-win.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/gluonhq/attach/storage/4.0.17/storage-4.0.17.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/jetbrains/annotations/13.0/annotations-13.0.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.14.2/jackson-databind-2.14.2.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/eu/hansolo/tilesfx/11.48/tilesfx-11.48.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx-swt.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx.web.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx.base.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx.fxml.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx.media.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx.swing.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx.controls.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="C:/Program Files/javafx-sdk-22/lib/javafx.graphics.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.14.2/jackson-core-2.14.2.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/gluonhq/attach/util/4.0.17/util-4.0.17.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-base/22-ea+11/javafx-base-22-ea+11-win.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/22-ea+11/javafx-fxml-22-ea+11.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.14.2/jackson-annotations-2.14.2.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/github/almasb/fxgl-entity/17.3/fxgl-entity-17.3.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/github/almasb/fxgl-gameplay/17.3/fxgl-gameplay-17.3.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/22-ea+11/javafx-graphics-22-ea+11-win.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-web/22-ea+11/javafx-web-22-ea+11.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/gluonhq/attach/audio/4.0.17/audio-4.0.17.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/22-ea+11/javafx-controls-22-ea+11.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-base/22-ea+11/javafx-base-22-ea+11.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-media/22-ea+11/javafx-media-22-ea+11-win.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/github/almasb/fxgl-core/17.3/fxgl-core-17.3.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/github/almasb/fxgl-scene/17.3/fxgl-scene-17.3.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/22-ea+11/javafx-fxml-22-ea+11-win.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/controlsfx/controlsfx/11.1.2/controlsfx-11.1.2.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/22-ea+11/javafx-controls-22-ea+11-win.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/22-ea+11/javafx-graphics-22-ea+11.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/kordamp/ikonli/ikonli-core/12.3.1/ikonli-core-12.3.1.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/net/synedra/validatorfx/0.4.0/validatorfx-0.4.0.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/gluonhq/attach/lifecycle/4.0.17/lifecycle-4.0.17.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-swing/22-ea+11/javafx-swing-22-ea+11.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/openjfx/javafx-media/22-ea+11/javafx-media-22-ea+11.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/org/kordamp/ikonli/ikonli-javafx/12.3.1/ikonli-javafx-12.3.1.jar" path-in-jar="/" />[m
[31m-      <element id="extracted-dir" path="$MAVEN_REPOSITORY$/com/github/almasb/fxgl-io/17.3/fxgl-io-17.3.jar" path-in-jar="/" />[m
[31m-      <element id="dir-copy" path="C:/Program Files/javafx-sdk-22/lib" />[m
[31m-    </root>[m
[31m-  </artifact>[m
[31m-</component>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/compiler.xml b/.idea/compiler.xml[m
[1mdeleted file mode 100644[m
[1mindex 1d9b200..0000000[m
[1m--- a/.idea/compiler.xml[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="CompilerConfiguration">[m
[31m-    <annotationProcessing>[m
[31m-      <profile name="Maven default annotation processors profile" enabled="true">[m
[31m-        <sourceOutputDir name="target/generated-sources/annotations" />[m
[31m-        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />[m
[31m-        <outputRelativeToContentRoot value="true" />[m
[31m-        <module name="fiery-dragons" />[m
[31m-      </profile>[m
[31m-    </annotationProcessing>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/encodings.xml b/.idea/encodings.xml[m
[1mdeleted file mode 100644[m
[1mindex 2dbae82..0000000[m
[1m--- a/.idea/encodings.xml[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="Encoding">[m
[31m-    <file url="file://$PROJECT_DIR$/Project/Sprint Four/fiery-dragons/src/main/java" charset="UTF-8" />[m
[31m-    <file url="file://$PROJECT_DIR$/Project/Sprint Four/fiery-dragons/src/main/resources" charset="UTF-8" />[m
[31m-    <file url="file://$PROJECT_DIR$/Project/Sprint Three/fiery-dragons/src/main/java" charset="UTF-8" />[m
[31m-    <file url="file://$PROJECT_DIR$/Project/Sprint Three/fiery-dragons/src/main/resources" charset="UTF-8" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml[m
[1mdeleted file mode 100644[m
[1mindex 712ab9d..0000000[m
[1m--- a/.idea/jarRepositories.xml[m
[1m+++ /dev/null[m
[36m@@ -1,20 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="RemoteRepositoriesConfiguration">[m
[31m-    <remote-repository>[m
[31m-      <option name="id" value="central" />[m
[31m-      <option name="name" value="Central Repository" />[m
[31m-      <option name="url" value="https://repo.maven.apache.org/maven2" />[m
[31m-    </remote-repository>[m
[31m-    <remote-repository>[m
[31m-      <option name="id" value="central" />[m
[31m-      <option name="name" value="Maven Central repository" />[m
[31m-      <option name="url" value="https://repo1.maven.org/maven2" />[m
[31m-    </remote-repository>[m
[31m-    <remote-repository>[m
[31m-      <option name="id" value="jboss.community" />[m
[31m-      <option name="name" value="JBoss Community repository" />[m
[31m-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />[m
[31m-    </remote-repository>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/libraries/lib.xml b/.idea/libraries/lib.xml[m
[1mdeleted file mode 100644[m
[1mindex 62a63b9..0000000[m
[1m--- a/.idea/libraries/lib.xml[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-<component name="libraryTable">[m
[31m-  <library name="lib">[m
[31m-    <CLASSES>[m
[31m-      <root url="file://C:/Program Files/javafx-sdk-22/lib" />[m
[31m-      <root url="file://C:/Program Files/javafx-sdk-22.0.1/lib" />[m
[31m-    </CLASSES>[m
[31m-    <JAVADOC />[m
[31m-    <SOURCES />[m
[31m-    <jarDirectory url="file://C:/Program Files/javafx-sdk-22.0.1/lib" recursive="false" />[m
[31m-    <jarDirectory url="file://C:/Program Files/javafx-sdk-22/lib" recursive="false" />[m
[31m-  </library>[m
[31m-</component>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mdeleted file mode 100644[m
[1mindex b59c4fd..0000000[m
[1m--- a/.idea/misc.xml[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="ExternalStorageConfigurationManager" enabled="true" />[m
[31m-  <component name="MavenProjectsManager">[m
[31m-    <option name="originalFiles">[m
[31m-      <list>[m
[31m-        <option value="$PROJECT_DIR$/Project/Sprint Two/fiery-dragons/pom.xml" />[m
[31m-        <option value="$PROJECT_DIR$/Project/Sprint Three/fiery-dragons/pom.xml" />[m
[31m-        <option value="$PROJECT_DIR$/Project/Sprint Four/fiery-dragons/pom.xml" />[m
[31m-      </list>[m
[31m-    </option>[m
[31m-  </component>[m
[31m-  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">[m
[31m-    <output url="file://$PROJECT_DIR$/out" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml[m
[1mdeleted file mode 100644[m
[1mindex 2b63946..0000000[m
[1m--- a/.idea/uiDesigner.xml[m
[1m+++ /dev/null[m
[36m@@ -1,124 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="Palette2">[m
[31m-    <group name="Swing">[m
[31m-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="Button" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="RadioButton" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="CheckBox" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="Label" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">[m
[31m-          <preferred-size width="150" height="-1" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">[m
[31m-          <preferred-size width="150" height="-1" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">[m
[31m-          <preferred-size width="150" height="-1" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">[m
[31m-          <preferred-size width="200" height="200" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">[m
[31m-          <preferred-size width="200" height="200" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">[m
[31m-          <preferred-size width="-1" height="20" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />[m
[31m-      </item>[m
[31m-    </group>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mdeleted file mode 100644[m
[1mindex 35eb1dd..0000000[m
[1m--- a/.idea/vcs.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="VcsDirectoryMappings">[m
[31m-    <mapping directory="" vcs="Git" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/Project/.gitkeep b/Project/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/.gitignore b/Project/Sprint Four/fiery-dragons/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 5ff6309..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/.gitignore[m	
[1m+++ /dev/null[m
[36m@@ -1,38 +0,0 @@[m
[31m-target/[m
[31m-!.mvn/wrapper/maven-wrapper.jar[m
[31m-!**/src/main/**/target/[m
[31m-!**/src/test/**/target/[m
[31m-[m
[31m-### IntelliJ IDEA ###[m
[31m-.idea/modules.xml[m
[31m-.idea/jarRepositories.xml[m
[31m-.idea/compiler.xml[m
[31m-.idea/libraries/[m
[31m-*.iws[m
[31m-*.iml[m
[31m-*.ipr[m
[31m-[m
[31m-### Eclipse ###[m
[31m-.apt_generated[m
[31m-.classpath[m
[31m-.factorypath[m
[31m-.project[m
[31m-.settings[m
[31m-.springBeans[m
[31m-.sts4-cache[m
[31m-[m
[31m-### NetBeans ###[m
[31m-/nbproject/private/[m
[31m-/nbbuild/[m
[31m-/dist/[m
[31m-/nbdist/[m
[31m-/.nb-gradle/[m
[31m-build/[m
[31m-!**/src/main/**/build/[m
[31m-!**/src/test/**/build/[m
[31m-[m
[31m-### VS Code ###[m
[31m-.vscode/[m
[31m-[m
[31m-### Mac OS ###[m
[31m-.DS_Store[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/.idea/.gitignore b/Project/Sprint Four/fiery-dragons/.idea/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 13566b8..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/.idea/.gitignore[m	
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-# Default ignored files[m
[31m-/shelf/[m
[31m-/workspace.xml[m
[31m-# Editor-based HTTP Client requests[m
[31m-/httpRequests/[m
[31m-# Datasource local storage ignored files[m
[31m-/dataSources/[m
[31m-/dataSources.local.xml[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/.idea/encodings.xml b/Project/Sprint Four/fiery-dragons/.idea/encodings.xml[m
[1mdeleted file mode 100644[m
[1mindex aa00ffa..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/.idea/encodings.xml[m	
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="Encoding">[m
[31m-    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />[m
[31m-    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/.idea/misc.xml b/Project/Sprint Four/fiery-dragons/.idea/misc.xml[m
[1mdeleted file mode 100644[m
[1mindex 0b16187..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/.idea/misc.xml[m	
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="ExternalStorageConfigurationManager" enabled="true" />[m
[31m-  <component name="MavenProjectsManager">[m
[31m-    <option name="originalFiles">[m
[31m-      <list>[m
[31m-        <option value="$PROJECT_DIR$/pom.xml" />[m
[31m-      </list>[m
[31m-    </option>[m
[31m-  </component>[m
[31m-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">[m
[31m-    <output url="file://$PROJECT_DIR$/out" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/.idea/uiDesigner.xml b/Project/Sprint Four/fiery-dragons/.idea/uiDesigner.xml[m
[1mdeleted file mode 100644[m
[1mindex 2b63946..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/.idea/uiDesigner.xml[m	
[1m+++ /dev/null[m
[36m@@ -1,124 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="Palette2">[m
[31m-    <group name="Swing">[m
[31m-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="Button" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="RadioButton" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="CheckBox" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />[m
[31m-        <initial-values>[m
[31m-          <property name="text" value="Label" />[m
[31m-        </initial-values>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">[m
[31m-          <preferred-size width="150" height="-1" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">[m
[31m-          <preferred-size width="150" height="-1" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">[m
[31m-          <preferred-size width="150" height="-1" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">[m
[31m-          <preferred-size width="150" height="50" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">[m
[31m-          <preferred-size width="200" height="200" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">[m
[31m-          <preferred-size width="200" height="200" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">[m
[31m-          <preferred-size width="-1" height="20" />[m
[31m-        </default-constraints>[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />[m
[31m-      </item>[m
[31m-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">[m
[31m-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />[m
[31m-      </item>[m
[31m-    </group>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/.mvn/wrapper/maven-wrapper.jar b/Project/Sprint Four/fiery-dragons/.mvn/wrapper/maven-wrapper.jar[m
[1mdeleted file mode 100644[m
[1mindex c1dd12f..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/.mvn/wrapper/maven-wrapper.jar and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/.mvn/wrapper/maven-wrapper.properties b/Project/Sprint Four/fiery-dragons/.mvn/wrapper/maven-wrapper.properties[m
[1mdeleted file mode 100644[m
[1mindex 40ca015..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/.mvn/wrapper/maven-wrapper.properties[m	
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.8.5/apache-maven-3.8.5-bin.zip[m
[31m-wrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/docs/Sprint 3 Documentation.pdf b/Project/Sprint Four/fiery-dragons/docs/Sprint 3 Documentation.pdf[m
[1mdeleted file mode 100644[m
[1mindex 7466d57..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/docs/Sprint 3 Documentation.pdf[m	
[1m+++ /dev/null[m
[36m@@ -1,381 +0,0 @@[m
[31m-    FIT3077 Software Engineering:[m
[31m-         Architecture and Design[m
[31m-                    Sprint 3[m
[31m-[m
[31m-                              Team Hardworkers[m
[31m-[m
[31m-Prepared by Kevin Tran, Glenn Kurniawan, Jaden Mu and William[m
[31m-                                        Phan[m
[31m-Contributor Analytics[m
[31m-[m
[31m-Note:[m
[31m-The UML Class Diagram is in a separate document to prevent clutter.[m
[31m-         Review of Sprint 2 Software Prototypes[m
[31m-[m
[31m-         Introduction[m
[31m-[m
[31m-         The review of a detailed Sprint 2 tech-based software prototype submitted by one of our[m
[31m-         team members took place in Sprint 3. Therefore, the review was to appraise for the[m
[31m-         strengths and weaknesses of each of the prototypes by some predefined criteria and metrics[m
[31m-         and then determine the best approach that will be gone with in ensuring that the[m
[31m-         development of the game continues in Sprint 3. The criteria were the Completeness of the[m
[31m-         solution direction proposed, the Rationale for the solution direction chosen, the[m
[31m-         Understandability of the solution direction, the Extensibility of the solution direction, Quality[m
[31m-         of source code in writing, and the Aesthetics of the user interface.[m
[31m-[m
[31m-         Assessment Criteria Used[m
[31m-[m
[31m-         For each solution direction proposed by our team members, we used the following[m
[31m-         assessment criteria/rubric to assess their tech-based software prototype.[m
[31m-[m
[31m-Metrics            100%                      80-99%                     50-79%                 <50%[m
[31m-[m
[31m-Completeness       All functionalities from  Most functionalities       Some essential         The solution lacks[m
[31m-of the Solution    the requirements are      are implemented, but       functionalities are    many required[m
[31m-Direction          fully implemented and     a few are missing or       missing or not fully   functionalities.[m
[31m-                   working correctly.        incomplete.                functional.[m
[31m-[m
[31m-Rationale          Solution rationale is     Solution rationale         Reasoning for the      The rationale is[m
[31m-Behind the         thoroughly justified,     aligns well with           solution direction is  unclear or does not[m
[31m-Chosen Solution    demonstrating strong      requirements but lacks     not fully convincing,  align with the given[m
[31m-Direction          alignment with            comprehensive              with minor             requirements.[m
[31m-                   requirements.             reasoning.                 deviations from the[m
[31m-                                                                        requirements.[m
[31m-[m
[31m-Understandabilit   The design is clear,      Mostly easy to             Some parts are         The design is overly[m
[31m-y of the Solution  easy to follow, and well  understand but             challenging to         complex or lacks[m
[31m-Direction          documented.               requires clarification in  follow or are          documentation.[m
[31m-                                             some areas.                undocumented.[m
[31m-[m
[31m-Extensibility of   Highly modular, with      Modular in most areas      Several tightly        Monolithic[m
[31m-the Solution       well encapsulated and     but has minor tight        coupled or             architecture, tightly[m
[31m-Direction          loosely coupled           couplings or hard          monolithic             coupled[m
[31m-                   components.               coded dependencies.        components hinder      dependencies, and[m
[31m-                                                                        extensibility.         hard coded logic.[m
[31m-[m
[31m-Aesthetics of      Visually attractive,      Pleasant visuals,          Acceptable design      Unintuitive or[m
[31m-the User           intuitive to use, and     mostly intuitive, but      but lacks consistent   unattractive design[m
[31m-Interface          provides a consistent     requires refinement for    or engaging            hinders[m
[31m-                   experience.               engagement.                visuals.               engagement.[m
[31m-Completeness of the Solution Direction[m
[31m-[m
[31m-Criteria: To what extent are all key functionalities covered in the design?[m
[31m-Metrics: Count the number of required features implemented vs.missing.[m
[31m-Scores:[m
[31m-Kevin: 100%[m
[31m-Glenn: 100%[m
[31m-Jaden: 100%[m
[31m-[m
[31m-On reviewing the prototypes, it could be seen that all the team members who submitted the[m
[31m-prototypes—Kevin, Glenn, and Jaden—had achieved 100% completeness of the solution[m
[31m-direction. The functionality accomplished by the prototypes specified all requirements[m
[31m-necessary for realising the implemented functionalities of the initial board setup and chit card[m
[31m-flipping, following the Sprint Two requirements, and the seamlessness of the solutions[m
[31m-demonstrated how well they represented understanding of the project goals and being able[m
[31m-to translate those requirements into working software.[m
[31m-[m
[31m-Rationale Behind the Chosen Solution Direction[m
[31m-[m
[31m-Criteria: How well does the solution direction align with functional appropriateness and[m
[31m-requirements?[m
[31m-Metrics: Quality of justification provided for chosen approaches, aligning with requirements.[m
[31m-Scores:[m
[31m-Kevin: Good[m
[31m-Glenn: Good[m
[31m-Jaden: Excellent[m
[31m-[m
[31m-The justifications of the solution direction chosen have different grades and alignment with[m
[31m-the requirements. Kevin's prototype was able to address requirements well, but full and[m
[31m-extensive reasoning lacked for some parts of his design rationale. The prototype developed[m
[31m-by Glenn was in most parts well guided and justified. However, there was no code for the[m
[31m-prototype to give full support for its further extensions. The prototype from Jaden justified the[m
[31m-solution rationale fully, showing a strong alignment with the requirements and[m
[31m-forward-looking architecture. Jaden's approach in catering to both current and future[m
[31m-requirements was a sign of a total comprehension of gameplay dynamics.[m
[31m-[m
[31m-Understandability of the Solution Direction[m
[31m-[m
[31m-Criteria: Is the design easy to understand and recognise as appropriate for the problem at[m
[31m-hand?[m
[31m-Metrics: Assess design simplicity, logical structure, and documentation quality.[m
[31m-Scores:[m
[31m-Kevin: Satisfactory[m
[31m-Glenn: Good[m
[31m-Jaden: Excellent[m
[31m-[m
[31m-With respect to the solution direction, the key feature is understandability for collaboration[m
[31m-and further development. The prototype developed by Kevin was easily understandable[m
[31m-apart from a few places where more clarification was required. Some of the points regarding[m
[31m-design considerations taken by Kevin were difficult to make, and he had not given them with[m
[31m-his prototype. However, the prototype created by Glenn was well documented and[m
[31m-understandable, but had minor inconsistencies in its naming conventions. The prototype built[m
[31m-by Jaden was clear, understandable, and extremely full in its documentation. The logic[m
[31m-structure and good practices within the prototype that Jaden built made it easily understood[m
[31m-by other members who will step in for further contributions.[m
[31m-[m
[31m-Extensibility of the Solution Direction[m
[31m-[m
[31m-Criteria: How well does the solution accommodate future modifications or extensions for[m
[31m-Sprint 4?[m
[31m-Metrics: Evaluate modularity, adherence to OOP principles, and dependency management.[m
[31m-Scores:[m
[31m-Kevin: Satisfactory[m
[31m-Glenn: Good[m
[31m-Jaden: Good[m
[31m-[m
[31m-Extensibility is the quality required to be able to incorporate future changes and, farther,[m
[31m-additions to the game. For the bigger parts of Kevin's prototype, they were all modular, but[m
[31m-there were very many tight couplings and hard-coded dependencies for the implementation[m
[31m-of his features. With this, his base of code would certainly not be extensible to sprints in the[m
[31m-future. Although Glenn's prototype followed the good principles of object-oriented[m
[31m-programming, less use of hard-coded values would have made the code flexible, such as the[m
[31m-player tokens. Jaden's prototype was highly modular just by its structure for a future[m
[31m-modification. Adhering to the key principles of software design and anticipating requirements[m
[31m-to a very large extent made the solution offered by Jaden extensible. Especially given the[m
[31m-multiple scenes and controllers. However, the presence of hard-coded ImageViews reduced[m
[31m-the extensibility of the solution.[m
[31m-[m
[31m-Quality of the Written Source Code[m
[31m-[m
[31m-Criteria: Does the code adhere to coding standards and maintain good practices?[m
[31m-Metrics: Evaluate standards adherence (naming conventions, formatting) and reliance on[m
[31m-antipatterns (e.g., downcasts).[m
[31m-Scores:[m
[31m-Kevin: Good[m
[31m-Glenn: Excellent[m
[31m-Jaden: Excellent[m
[31m-[m
[31m-The written source code quality is directly proportional to the maintainability and scalability of[m
[31m-the software. Though Kevin's prototype followed coding standards and was often well[m
[31m-formatted and free from anti-patterns, many inconsistencies in his coding practices such as[m
[31m-naming were observed, but many parts of the code were of high quality. The prototype[m
[31m-written by Glenn followed an extremely high-level standard strictly and was well[m
[31m-documented. Much like Glenn’s prototype, Jaden's prototype was filled with a commitment to[m
[31m-best coding practices that assure high maintainability and consistency. The code cleanliness,[m
[31m-the comments, and adherence to industry standards in prototyping were outstanding in[m
[31m-Jaden's prototype.[m
[31m-[m
[31m-Aesthetics of the User Interface[m
[31m-[m
[31m-Criteria: Is the user interface visually appealing and user friendly?[m
[31m-Metrics: Evaluate visual design principles, user experience, and engagement level.[m
[31m-Scores:[m
[31m-Kevin: Good[m
[31m-Glenn: Good[m
[31m-Jaden: Excellent[m
[31m-[m
[31m-The user interface for a player should be attractive and intuitive, leading to a fun and[m
[31m-engaging experience. As we had created a high fidelity Figma, the GUI across prototypes[m
[31m-were quite consistent. Kevin's prototype was visually designed and largely intuitive but could[m
[31m-have been improved by additional scenes and a larger board size to fully engage users.[m
[31m-Glenn's prototype presented pleasing surroundings that were user-friendly, although there[m
[31m-could have been an improvement in the resizing of the windows and better button[m
[31m-consistency. Jaden's prototype was excellent in the design interface, intuitive navigation, and[m
[31m-user completion priorities. Overall, Jaden's prototype was visually stunning, with much[m
[31m-emphasis on all the basic visual design principles and associated accessibility[m
[31m-considerations to end up with an outcome that is very engaging.[m
[31m-[m
[31m-Conclusion[m
[31m-[m
[31m-After a careful review and evaluation of all the strengths and weaknesses of each[m
[31m-tech-based software prototype made during Sprint 2, we decided to use Jaden’s codebase[m
[31m-for Sprint 3. While all the prototypes were complete in the direction of solution; the prototype[m
[31m-made by Jaden got its distinction from its thorough justification and level of understandability,[m
[31m-extensibility, and quality of code. However, for Sprint 3, we will be incorporating Glenn's[m
[31m-method of getting ImageViews.[m
[31m-[m
[31m-Recommendation[m
[31m-[m
[31m-Therefore we decided to use Jaden's prototype for Sprint 3 and later integrate ImageView[m
[31m-methods from Glenn's prototype while making sure that strict coding standards are adhered[m
[31m-to. This will assist in ensuring prototypes get a robust, maintainable, and user-friendly[m
[31m-solution for the Fiery Dragon game. Ultimately, the collaborative effort and insights drawn[m
[31m-from this review process drive the success in Game Development by the Fiery Dragon in[m
[31m-Sprint 3 and beyond.[m
[31m-CRC Cards[m
[31m-[m
[31m-*red text indicates rejection of alternatives[m
[31m-UML Class Diagram[m
[31m-[m
[31m-https://lucid.app/lucidchart/536ff827-db1b-45bf-8c80-bd0a54001654/edit?viewport_loc=-6747%2C-1558%2C8175%2C4191%2C4[m
[31m-QqweW9Y95aV&invitationId=inv_d5037eee-faea-4caf-9794-db0240bac5a0[m
[31m-   JAR File Execution Instructions[m
[31m-[m
[31m-Operating System Compatibility[m
[31m-[m
[31m-Windows 7/8/10/11[m
[31m-[m
[31m-Step 1: Install Oracle JDK[m
[31m-[m
[31m-If the exact version of the Oracle JDK has already been installed, disregard this step.[m
[31m-    ● Download and install version 22.0.1 of Oracle JDK from here.[m
[31m-[m
[31m-Step 2: Install JavaFX SDK[m
[31m-[m
[31m-If the exact version of the Oracle JDK has already been installed, disregard this step.[m
[31m-    ● Download and install version 22.0.1 of JavaFX SDK from here.[m
[31m-[m
[31m-Step 3: Set Up Environment Variable[m
[31m-[m
[31m-If the Environment Variable has already been set up, disregard this step.[m
[31m-    ● Add the JDK to PATH by setting the Path variable to the bin folder of the newly[m
[31m-         installed Java JDK version 22.0.1.[m
[31m-              ○ Search for ‘Environment Variables’ in the Windows search bar and select[m
[31m-                   “Edit the system environment variables”.[m
[31m-              ○ In the System Properties window, click on the “Environment Variables” button.[m
[31m-              ○ Under System Variables, find and select the ‘Path’ variable, then click on[m
[31m-                   “Edit”.[m
[31m-              ○ Click “New” and add the path to the bin folder of your JDK installation.[m
[31m-[m
[31m-Step 4: Run the Application[m
[31m-[m
[31m-    ● Open up Command Prompt from the Windows search bar.[m
[31m-    ● Use the following command to run the JavaFX JAR application. Replace <path of[m
[31m-[m
[31m-         JavaFX SDK directory> with the actual path where the JavaFX SDK was[m
[31m-         extracted to, and <path of JAR file> with the actual path to the downloaded[m
[31m-         JavaFX JAR file. Ensure to wrap both paths with quotation marks ("").[m
[31m-[m
[31m-              ○ For example, "C:\Program Files\javafx-sdk-22.0.1\lib" and[m
[31m-                   "C:\Users\Jaden\CL_Monday06pm_Team304.jar" respectively.[m
[31m-[m
[31m-java --module-path <path of JavaFX SDK directory>/lib --add-modules[m
[31m-javafx.controls,javafx.fxml -jar <path of JAR file>[m
[31m-Creating an Executable from Source[m
[31m-                      Code[m
[31m-[m
[31m-Operating System Compatibility[m
[31m-[m
[31m-Windows 7/8/10/11[m
[31m-[m
[31m-Step 1: Install IntelliJ IDEA[m
[31m-[m
[31m-    ● Download the appropriate version of Intellij IDEA for your operating system, following[m
[31m-         instructions from here.[m
[31m-[m
[31m-Step 2: Open Source Code in IntelliJ[m
[31m-[m
[31m-    ● Open the source code folder by:[m
[31m-              ○ Clicking “File” in the top left[m
[31m-              ○ “Open…” under the “File” dropdown[m
[31m-              ○ And selecting the path of the folder of the source code[m
[31m-[m
[31m-    ● As this application was created using IntelliJ, the executable can be created by:[m
[31m-              ○ Navigating to the “Build” section at the top of the IDE[m
[31m-              ○ Selecting “Build Artifacts”[m
[31m-              ○ Clicking on “Build” which will be within a drop down menu called “Action”.[m
[31m-        Generative AI Statement[m
[31m-[m
[31m-(The same images from Sprint Two were used for Sprint Three, thus we decided to import[m
[31m-the Generative AI Statement by Jaden for Sprint Three)[m
[31m-[m
[31m-Throughout Sprint Two, ChatGPT was used to generate images for the UI aspect of[m
[31m-the design using prompts. Similarly to Sprint One, a few elements of the game board[m
[31m-were used and the exact same images that were generated by AI were also used in[m
[31m-Sprint Two for my individual design, hence the date of the AI generation being in[m
[31m-March.[m
[31m-[m
[31m-Figma Link:[m
[31m-https://www.figma.com/file/L7CQVvrghPzbRYSiM9jSKe/Fiery-Dragons-Board?type=[m
[31m-design&node-id=0%3A1&mode=design&t=Mx9CVoi6nJSof88q-1[m
[31m-[m
[31m-I acknowledge the use of ChatGPT (https://chat.openai.com/) to generate images to[m
[31m-use for the UI Design of the Fiery Dragon game. The following prompts were entered[m
[31m-on 24 March 2024:[m
[31m-[m
[31m-    ● generate an image of a salamander, it will be used for a board game.[m
[31m-    ● generate an image of a bat, it will be used for a board game.[m
[31m-    ● generate an image of a baby dragon, it will be used for a board game.[m
[31m-    ● generate an image of a spider, it will be used for a board game.[m
[31m-    ● generate an image of a pirate dragon, it will be used for a board game.[m
[31m-    ● generate a picture that can be used on a circular token within a board game.[m
[31m-[m
[31m-         This picture should be a drawing of the entrance of a cave with a sign of a[m
[31m-         salamander on the outside.[m
[31m-    ● generate a picture that can be used on a circular token within a board game.[m
[31m-         This picture should be a drawing of the entrance of a cave with a sign of a bat[m
[31m-         on the outside.[m
[31m-    ● generate a picture that can be used on a circular token within a board game.[m
[31m-         This picture should be a drawing of the entrance of a cave with a sign of a[m
[31m-         baby dragon on the outside.[m
[31m-    ● generate a picture that can be used on a circular token within a board game.[m
[31m-         This picture should be a drawing of the entrance of a cave with a sign of a[m
[31m-         spider on the outside.[m
[31m-    ● for the board game Fiery Dragons, generate a photo of the different dragon[m
[31m-         tokens, one for each token. Make sure they are unique in colours and themes[m
[31m-         and not too realistic, used for a board game.[m
[31m-[m
[31m-The output from these prompts was used as the images to represent certain game[m
[31m-elements in the Fiery Dragon UI Design.[m
[31m-Additionally, Generate AI, specifically ChatGPT, was used to assist in developing[m
[31m-clear execution instructions for another person to run my JAR file. I had already[m
[31m-developed my own set of instructions but realised that it may have been lacking[m
[31m-depth and clarity and therefore asked ChatGPT to assist in making the instructions[m
[31m-more clear and concise. The following was the set of instructions created by me:[m
[31m-[m
[31m-Execution Instructions[m
[31m-Operating System: Windows 7/8/10/11[m
[31m-Download and install version 22.0.1 of Oracle JDK from here.[m
[31m-Download and install version 22.0.1 of JavaFX SDK from here.[m
[31m-Add the JDK to PATH by setting the Path variable to the bin folder of the newly installed Java[m
[31m-JDK version 22.0.1.[m
[31m-Open up Command Prompt from the Windows search bar.[m
[31m-Use the following command to run the JavaFX JAR application. Replace <path of JavaFX[m
[31m-SDK directory> (including < and >) with the actual path where the JavaFX SDK was[m
[31m-extracted to, and <path of JAR file> (including < and >) with the actual path to the[m
[31m-downloaded JavaFX JAR file. java --module-path <path of JavaFX SDK directory>/lib[m
[31m---add-modules javafx.controls,javafx.fxml -jar <path of JAR file>[m
[31m-Press enter on your keyboard and the application should load up[m
[31m-[m
[31m-I acknowledge the use of ChatGPT (https://chat.openai.com/) to assist in developing[m
[31m-a set of instructions to help others run the JAR executable of my design. The[m
[31m-following prompt was entered on 30 April 2024:[m
[31m-[m
[31m-    ● Use my current set of instructions to develop more concise and clear[m
[31m-         instructions so anyone viewing this for the first time can understand and follow[m
[31m-         along.[m
[31m-[m
[31m-         Execution Instructions[m
[31m-         Operating System: Windows 7/8/10/11[m
[31m-         Download and install version 22.0.1 of Oracle JDK from here.[m
[31m-         Download and install version 22.0.1 of JavaFX SDK from here.[m
[31m-         Add the JDK to PATH by setting the Path variable to the bin folder of the newly[m
[31m-         installed Java JDK version 22.0.1.[m
[31m-         Open up Command Prompt from the Windows search bar.[m
[31m-         Use the following command to run the JavaFX JAR application. Replace <path of[m
[31m-         JavaFX SDK directory> (including < and >) with the actual path where the JavaFX[m
[31m-         SDK was extracted to, and <path of JAR file> (including < and >) with the actual path[m
[31m-         to the downloaded JavaFX JAR file. java --module-path <path of JavaFX SDK[m
[31m-         directory>/lib --add-modules javafx.controls,javafx.fxml -jar <path of JAR file>[m
[31m-         Press enter on your keyboard and the application should load up[m
[31m-[m
[31m-The output from this prompt was used to represent the execution instructions[m
[31m-highlighted in the README.md file of my GitLab repository branch, and the next[m
[31m-page of this file.[m
[31m-Lastly, again, ChatGPT, was used to assist in my technical design, by asking it to[m
[31m-develop the mathematical calculations required to create arcs on my game board (to[m
[31m-show the Card and “squares” functionality on the game board. The Java class[m
[31m-named GameBoardSetup under the utils directory of my source code was mostly[m
[31m-created by ChatGPT, such as all the areas that pertained mathematical calculations[m
[31m-to work out a fittable “square” to fit on the game board, given the dimensions.[m
[31m-However, the utilisation of the class and all the logic surrounding the use of this class[m
[31m-was NOT assisted by Generative AI.[m
[31m-[m
[31m-I acknowledge the use of ChatGPT (https://chat.openai.com/) to assist in creating a[m
[31m-Java class named GameBoardSetup, which solely is responsible for dividing the[m
[31m-game board up into “squares” and showing it on the UI. The following prompts were[m
[31m-entered on 24 April 2024:[m
[31m-[m
[31m-    ● Given a circle, I want you to divide it into a certain number given. I am[m
[31m-         creating a circle in scene builder for a JavaFX application and I have attached[m
[31m-         a png of the dimensions including radius. So I want the method to, given an[m
[31m-         integer number, divide the circle up into the number. For example when 24 is[m
[31m-         given, divide the circle into 24. and then add a shape/imageview into each[m
[31m-         divided section[m
[31m-[m
[31m-                                                            (Dimensions of the circle)[m
[31m-[m
[31m-The output from this prompt was used to assist me solely in dividing the game board[m
[31m-up and showing it in my JavaFX application and not in any other aspects of my code[m
[31m-implementation.[m
[31m-[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/mvnw b/Project/Sprint Four/fiery-dragons/mvnw[m
[1mdeleted file mode 100644[m
[1mindex 8a8fb22..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/mvnw[m	
[1m+++ /dev/null[m
[36m@@ -1,316 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Licensed to the Apache Software Foundation (ASF) under one[m
[31m-# or more contributor license agreements.  See the NOTICE file[m
[31m-# distributed with this work for additional information[m
[31m-# regarding copyright ownership.  The ASF licenses this file[m
[31m-# to you under the Apache License, Version 2.0 (the[m
[31m-# "License"); you may not use this file except in compliance[m
[31m-# with the License.  You may obtain a copy of the License at[m
[31m-#[m
[31m-#    https://www.apache.org/licenses/LICENSE-2.0[m
[31m-#[m
[31m-# Unless required by applicable law or agreed to in writing,[m
[31m-# software distributed under the License is distributed on an[m
[31m-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[31m-# KIND, either express or implied.  See the License for the[m
[31m-# specific language governing permissions and limitations[m
[31m-# under the License.[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Maven Start Up Batch script[m
[31m-#[m
[31m-# Required ENV vars:[m
[31m-# ------------------[m
[31m-#   JAVA_HOME - location of a JDK home dir[m
[31m-#[m
[31m-# Optional ENV vars[m
[31m-# -----------------[m
[31m-#   M2_HOME - location of maven2's installed home dir[m
[31m-#   MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[31m-#     e.g. to debug Maven itself, use[m
[31m-#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[31m-#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-if [ -z "$MAVEN_SKIP_RC" ] ; then[m
[31m-[m
[31m-  if [ -f /usr/local/etc/mavenrc ] ; then[m
[31m-    . /usr/local/etc/mavenrc[m
[31m-  fi[m
[31m-[m
[31m-  if [ -f /etc/mavenrc ] ; then[m
[31m-    . /etc/mavenrc[m
[31m-  fi[m
[31m-[m
[31m-  if [ -f "$HOME/.mavenrc" ] ; then[m
[31m-    . "$HOME/.mavenrc"[m
[31m-  fi[m
[31m-[m
[31m-fi[m
[31m-[m
[31m-# OS specific support.  $var _must_ be set to either true or false.[m
[31m-cygwin=false;[m
[31m-darwin=false;[m
[31m-mingw=false[m
[31m-case "`uname`" in[m
[31m-  CYGWIN*) cygwin=true ;;[m
[31m-  MINGW*) mingw=true;;[m
[31m-  Darwin*) darwin=true[m
[31m-    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home[m
[31m-    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html[m
[31m-    if [ -z "$JAVA_HOME" ]; then[m
[31m-      if [ -x "/usr/libexec/java_home" ]; then[m
[31m-        export JAVA_HOME="`/usr/libexec/java_home`"[m
[31m-      else[m
[31m-        export JAVA_HOME="/Library/Java/Home"[m
[31m-      fi[m
[31m-    fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ] ; then[m
[31m-  if [ -r /etc/gentoo-release ] ; then[m
[31m-    JAVA_HOME=`java-config --jre-home`[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$M2_HOME" ] ; then[m
[31m-  ## resolve links - $0 may be a link to maven's home[m
[31m-  PRG="$0"[m
[31m-[m
[31m-  # need this for relative symlinks[m
[31m-  while [ -h "$PRG" ] ; do[m
[31m-    ls=`ls -ld "$PRG"`[m
[31m-    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[31m-    if expr "$link" : '/.*' > /dev/null; then[m
[31m-      PRG="$link"[m
[31m-    else[m
[31m-      PRG="`dirname "$PRG"`/$link"[m
[31m-    fi[m
[31m-  done[m
[31m-[m
[31m-  saveddir=`pwd`[m
[31m-[m
[31m-  M2_HOME=`dirname "$PRG"`/..[m
[31m-[m
[31m-  # make it fully qualified[m
[31m-  M2_HOME=`cd "$M2_HOME" && pwd`[m
[31m-[m
[31m-  cd "$saveddir"[m
[31m-  # echo Using m2 at $M2_HOME[m
[31m-fi[m
[31m-[m
[31m-# For Cygwin, ensure paths are in UNIX format before anything is touched[m
[31m-if $cygwin ; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME=`cygpath --unix "$M2_HOME"`[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`[m
[31m-  [ -n "$CLASSPATH" ] &&[m
[31m-    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`[m
[31m-fi[m
[31m-[m
[31m-# For Mingw, ensure paths are in UNIX format before anything is touched[m
[31m-if $mingw ; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME="`(cd "$M2_HOME"; pwd)`"[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ]; then[m
[31m-  javaExecutable="`which javac`"[m
[31m-  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then[m
[31m-    # readlink(1) is not available as standard on Solaris 10.[m
[31m-    readLink=`which readlink`[m
[31m-    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then[m
[31m-      if $darwin ; then[m
[31m-        javaHome="`dirname \"$javaExecutable\"`"[m
[31m-        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"[m
[31m-      else[m
[31m-        javaExecutable="`readlink -f \"$javaExecutable\"`"[m
[31m-      fi[m
[31m-      javaHome="`dirname \"$javaExecutable\"`"[m
[31m-      javaHome=`expr "$javaHome" : '\(.*\)/bin'`[m
[31m-      JAVA_HOME="$javaHome"[m
[31m-      export JAVA_HOME[m
[31m-    fi[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVACMD" ] ; then[m
[31m-  if [ -n "$JAVA_HOME"  ] ; then[m
[31m-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[31m-      # IBM's JDK on AIX uses strange locations for the executables[m
[31m-      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[31m-    else[m
[31m-      JAVACMD="$JAVA_HOME/bin/java"[m
[31m-    fi[m
[31m-  else[m
[31m-    JAVACMD="`\\unset -f command; \\command -v java`"[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ ! -x "$JAVACMD" ] ; then[m
[31m-  echo "Error: JAVA_HOME is not defined correctly." >&2[m
[31m-  echo "  We cannot execute $JAVACMD" >&2[m
[31m-  exit 1[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ] ; then[m
[31m-  echo "Warning: JAVA_HOME environment variable is not set."[m
[31m-fi[m
[31m-[m
[31m-CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher[m
[31m-[m
[31m-# traverses directory structure from process work directory to filesystem root[m
[31m-# first directory with .mvn subdirectory is considered project base directory[m
[31m-find_maven_basedir() {[m
[31m-[m
[31m-  if [ -z "$1" ][m
[31m-  then[m
[31m-    echo "Path not specified to find_maven_basedir"[m
[31m-    return 1[m
[31m-  fi[m
[31m-[m
[31m-  basedir="$1"[m
[31m-  wdir="$1"[m
[31m-  while [ "$wdir" != '/' ] ; do[m
[31m-    if [ -d "$wdir"/.mvn ] ; then[m
[31m-      basedir=$wdir[m
[31m-      break[m
[31m-    fi[m
[31m-    # workaround for JBEAP-8937 (on Solaris 10/Sparc)[m
[31m-    if [ -d "${wdir}" ]; then[m
[31m-      wdir=`cd "$wdir/.."; pwd`[m
[31m-    fi[m
[31m-    # end of workaround[m
[31m-  done[m
[31m-  echo "${basedir}"[m
[31m-}[m
[31m-[m
[31m-# concatenates all lines of a file[m
[31m-concat_lines() {[m
[31m-  if [ -f "$1" ]; then[m
[31m-    echo "$(tr -s '\n' ' ' < "$1")"[m
[31m-  fi[m
[31m-}[m
[31m-[m
[31m-BASE_DIR=`find_maven_basedir "$(pwd)"`[m
[31m-if [ -z "$BASE_DIR" ]; then[m
[31m-  exit 1;[m
[31m-fi[m
[31m-[m
[31m-##########################################################################################[m
[31m-# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[31m-# This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[31m-##########################################################################################[m
[31m-if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Found .mvn/wrapper/maven-wrapper.jar"[m
[31m-    fi[m
[31m-else[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."[m
[31m-    fi[m
[31m-    if [ -n "$MVNW_REPOURL" ]; then[m
[31m-      jarUrl="$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"[m
[31m-    else[m
[31m-      jarUrl="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"[m
[31m-    fi[m
[31m-    while IFS="=" read key value; do[m
[31m-      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;[m
[31m-      esac[m
[31m-    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Downloading from: $jarUrl"[m
[31m-    fi[m
[31m-    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"[m
[31m-    if $cygwin; then[m
[31m-      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`[m
[31m-    fi[m
[31m-[m
[31m-    if command -v wget > /dev/null; then[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Found wget ... using wget"[m
[31m-        fi[m
[31m-        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[31m-            wget "$jarUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"[m
[31m-        else[m
[31m-            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"[m
[31m-        fi[m
[31m-    elif command -v curl > /dev/null; then[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Found curl ... using curl"[m
[31m-        fi[m
[31m-        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[31m-            curl -o "$wrapperJarPath" "$jarUrl" -f[m
[31m-        else[m
[31m-            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f[m
[31m-        fi[m
[31m-[m
[31m-    else[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Falling back to using Java to download"[m
[31m-        fi[m
[31m-        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"[m
[31m-        # For Cygwin, switch paths to Windows format before running javac[m
[31m-        if $cygwin; then[m
[31m-          javaClass=`cygpath --path --windows "$javaClass"`[m
[31m-        fi[m
[31m-        if [ -e "$javaClass" ]; then[m
[31m-            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[31m-                if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-                  echo " - Compiling MavenWrapperDownloader.java ..."[m
[31m-                fi[m
[31m-                # Compiling the Java class[m
[31m-                ("$JAVA_HOME/bin/javac" "$javaClass")[m
[31m-            fi[m
[31m-            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[31m-                # Running the downloader[m
[31m-                if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-                  echo " - Running MavenWrapperDownloader.java ..."[m
[31m-                fi[m
[31m-                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")[m
[31m-            fi[m
[31m-        fi[m
[31m-    fi[m
[31m-fi[m
[31m-##########################################################################################[m
[31m-# End of extension[m
[31m-##########################################################################################[m
[31m-[m
[31m-export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}[m
[31m-if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-  echo $MAVEN_PROJECTBASEDIR[m
[31m-fi[m
[31m-MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"[m
[31m-[m
[31m-# For Cygwin, switch paths to Windows format before running java[m
[31m-if $cygwin; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME=`cygpath --path --windows "$M2_HOME"`[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`[m
[31m-  [ -n "$CLASSPATH" ] &&[m
[31m-    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`[m
[31m-  [ -n "$MAVEN_PROJECTBASEDIR" ] &&[m
[31m-    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`[m
[31m-fi[m
[31m-[m
[31m-# Provide a "standardized" way to retrieve the CLI args that will[m
[31m-# work with both Windows and non-Windows executions.[m
[31m-MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"[m
[31m-export MAVEN_CMD_LINE_ARGS[m
[31m-[m
[31m-WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[31m-[m
[31m-exec "$JAVACMD" \[m
[31m-  $MAVEN_OPTS \[m
[31m-  $MAVEN_DEBUG_OPTS \[m
[31m-  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \[m
[31m-  "-Dmaven.home=${M2_HOME}" \[m
[31m-  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \[m
[31m-  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/mvnw.cmd b/Project/Sprint Four/fiery-dragons/mvnw.cmd[m
[1mdeleted file mode 100644[m
[1mindex 1d8ab01..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/mvnw.cmd[m	
[1m+++ /dev/null[m
[36m@@ -1,188 +0,0 @@[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-@REM Licensed to the Apache Software Foundation (ASF) under one[m
[31m-@REM or more contributor license agreements.  See the NOTICE file[m
[31m-@REM distributed with this work for additional information[m
[31m-@REM regarding copyright ownership.  The ASF licenses this file[m
[31m-@REM to you under the Apache License, Version 2.0 (the[m
[31m-@REM "License"); you may not use this file except in compliance[m
[31m-@REM with the License.  You may obtain a copy of the License at[m
[31m-@REM[m
[31m-@REM    https://www.apache.org/licenses/LICENSE-2.0[m
[31m-@REM[m
[31m-@REM Unless required by applicable law or agreed to in writing,[m
[31m-@REM software distributed under the License is distributed on an[m
[31m-@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[31m-@REM KIND, either express or implied.  See the License for the[m
[31m-@REM specific language governing permissions and limitations[m
[31m-@REM under the License.[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-@REM Maven Start Up Batch script[m
[31m-@REM[m
[31m-@REM Required ENV vars:[m
[31m-@REM JAVA_HOME - location of a JDK home dir[m
[31m-@REM[m
[31m-@REM Optional ENV vars[m
[31m-@REM M2_HOME - location of maven2's installed home dir[m
[31m-@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands[m
[31m-@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending[m
[31m-@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[31m-@REM     e.g. to debug Maven itself, use[m
[31m-@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[31m-@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-[m
[31m-@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'[m
[31m-@echo off[m
[31m-@REM set title of command window[m
[31m-title %0[m
[31m-@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'[m
[31m-@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%[m
[31m-[m
[31m-@REM set %HOME% to equivalent of $HOME[m
[31m-if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")[m
[31m-[m
[31m-@REM Execute a user defined script before this one[m
[31m-if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre[m
[31m-@REM check for pre script, once with legacy .bat ending and once with .cmd ending[m
[31m-if exist "%USERPROFILE%\mavenrc_pre.bat" call "%USERPROFILE%\mavenrc_pre.bat" %*[m
[31m-if exist "%USERPROFILE%\mavenrc_pre.cmd" call "%USERPROFILE%\mavenrc_pre.cmd" %*[m
[31m-:skipRcPre[m
[31m-[m
[31m-@setlocal[m
[31m-[m
[31m-set ERROR_CODE=0[m
[31m-[m
[31m-@REM To isolate internal variables from possible post scripts, we use another setlocal[m
[31m-@setlocal[m
[31m-[m
[31m-@REM ==== START VALIDATION ====[m
[31m-if not "%JAVA_HOME%" == "" goto OkJHome[m
[31m-[m
[31m-echo.[m
[31m-echo Error: JAVA_HOME not found in your environment. >&2[m
[31m-echo Please set the JAVA_HOME variable in your environment to match the >&2[m
[31m-echo location of your Java installation. >&2[m
[31m-echo.[m
[31m-goto error[m
[31m-[m
[31m-:OkJHome[m
[31m-if exist "%JAVA_HOME%\bin\java.exe" goto init[m
[31m-[m
[31m-echo.[m
[31m-echo Error: JAVA_HOME is set to an invalid directory. >&2[m
[31m-echo JAVA_HOME = "%JAVA_HOME%" >&2[m
[31m-echo Please set the JAVA_HOME variable in your environment to match the >&2[m
[31m-echo location of your Java installation. >&2[m
[31m-echo.[m
[31m-goto error[m
[31m-[m
[31m-@REM ==== END VALIDATION ====[m
[31m-[m
[31m-:init[m
[31m-[m
[31m-@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".[m
[31m-@REM Fallback to current working directory if not found.[m
[31m-[m
[31m-set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%[m
[31m-IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir[m
[31m-[m
[31m-set EXEC_DIR=%CD%[m
[31m-set WDIR=%EXEC_DIR%[m
[31m-:findBaseDir[m
[31m-IF EXIST "%WDIR%"\.mvn goto baseDirFound[m
[31m-cd ..[m
[31m-IF "%WDIR%"=="%CD%" goto baseDirNotFound[m
[31m-set WDIR=%CD%[m
[31m-goto findBaseDir[m
[31m-[m
[31m-:baseDirFound[m
[31m-set MAVEN_PROJECTBASEDIR=%WDIR%[m
[31m-cd "%EXEC_DIR%"[m
[31m-goto endDetectBaseDir[m
[31m-[m
[31m-:baseDirNotFound[m
[31m-set MAVEN_PROJECTBASEDIR=%EXEC_DIR%[m
[31m-cd "%EXEC_DIR%"[m
[31m-[m
[31m-:endDetectBaseDir[m
[31m-[m
[31m-IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig[m
[31m-[m
[31m-@setlocal EnableExtensions EnableDelayedExpansion[m
[31m-for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a[m
[31m-@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%[m
[31m-[m
[31m-:endReadAdditionalConfig[m
[31m-[m
[31m-SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"[m
[31m-set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"[m
[31m-set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[31m-[m
[31m-set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"[m
[31m-[m
[31m-FOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO ([m
[31m-    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B[m
[31m-)[m
[31m-[m
[31m-@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[31m-@REM This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[31m-if exist %WRAPPER_JAR% ([m
[31m-    if "%MVNW_VERBOSE%" == "true" ([m
[31m-        echo Found %WRAPPER_JAR%[m
[31m-    )[m
[31m-) else ([m
[31m-    if not "%MVNW_REPOURL%" == "" ([m
[31m-        SET DOWNLOAD_URL="%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"[m
[31m-    )[m
[31m-    if "%MVNW_VERBOSE%" == "true" ([m
[31m-        echo Couldn't find %WRAPPER_JAR%, downloading it ...[m
[31m-        echo Downloading from: %DOWNLOAD_URL%[m
[31m-    )[m
[31m-[m
[31m-    powershell -Command "&{"^[m
[31m-		"$webclient = new-object System.Net.WebClient;"^[m
[31m-		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^[m
[31m-		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^[m
[31m-		"}"^[m
[31m-		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^[m
[31m-		"}"[m
[31m-    if "%MVNW_VERBOSE%" == "true" ([m
[31m-        echo Finished downloading %WRAPPER_JAR%[m
[31m-    )[m
[31m-)[m
[31m-@REM End of extension[m
[31m-[m
[31m-@REM Provide a "standardized" way to retrieve the CLI args that will[m
[31m-@REM work with both Windows and non-Windows executions.[m
[31m-set MAVEN_CMD_LINE_ARGS=%*[m
[31m-[m
[31m-%MAVEN_JAVA_EXE% ^[m
[31m-  %JVM_CONFIG_MAVEN_PROPS% ^[m
[31m-  %MAVEN_OPTS% ^[m
[31m-  %MAVEN_DEBUG_OPTS% ^[m
[31m-  -classpath %WRAPPER_JAR% ^[m
[31m-  "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" ^[m
[31m-  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*[m
[31m-if ERRORLEVEL 1 goto error[m
[31m-goto end[m
[31m-[m
[31m-:error[m
[31m-set ERROR_CODE=1[m
[31m-[m
[31m-:end[m
[31m-@endlocal & set ERROR_CODE=%ERROR_CODE%[m
[31m-[m
[31m-if not "%MAVEN_SKIP_RC%"=="" goto skipRcPost[m
[31m-@REM check for post script, once with legacy .bat ending and once with .cmd ending[m
[31m-if exist "%USERPROFILE%\mavenrc_post.bat" call "%USERPROFILE%\mavenrc_post.bat"[m
[31m-if exist "%USERPROFILE%\mavenrc_post.cmd" call "%USERPROFILE%\mavenrc_post.cmd"[m
[31m-:skipRcPost[m
[31m-[m
[31m-@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'[m
[31m-if "%MAVEN_BATCH_PAUSE%"=="on" pause[m
[31m-[m
[31m-if "%MAVEN_TERMINATE_CMD%"=="on" exit %ERROR_CODE%[m
[31m-[m
[31m-cmd /C exit /B %ERROR_CODE%[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/pom.xml b/Project/Sprint Four/fiery-dragons/pom.xml[m
[1mdeleted file mode 100644[m
[1mindex 41b32ee..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/pom.xml[m	
[1m+++ /dev/null[m
[36m@@ -1,138 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project xmlns="http://maven.apache.org/POM/4.0.0"[m
[31m-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[31m-  <modelVersion>4.0.0</modelVersion>[m
[31m-[m
[31m-  <groupId>com.example</groupId>[m
[31m-  <artifactId>fiery-dragons</artifactId>[m
[31m-  <version>1.0-SNAPSHOT</version>[m
[31m-  <name>fiery-dragons</name>[m
[31m-[m
[31m-  <properties>[m
[31m-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>[m
[31m-    <junit.version>5.10.0</junit.version>[m
[31m-  </properties>[m
[31m-[m
[31m-  <dependencies>[m
[31m-    <dependency>[m
[31m-      <groupId>org.openjfx</groupId>[m
[31m-      <artifactId>javafx-controls</artifactId>[m
[31m-      <version>22-ea+11</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.openjfx</groupId>[m
[31m-      <artifactId>javafx-fxml</artifactId>[m
[31m-      <version>22-ea+11</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.openjfx</groupId>[m
[31m-      <artifactId>javafx-web</artifactId>[m
[31m-      <version>22-ea+11</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.openjfx</groupId>[m
[31m-      <artifactId>javafx-swing</artifactId>[m
[31m-      <version>22-ea+11</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.openjfx</groupId>[m
[31m-      <artifactId>javafx-media</artifactId>[m
[31m-      <version>22-ea+11</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.controlsfx</groupId>[m
[31m-      <artifactId>controlsfx</artifactId>[m
[31m-      <version>11.1.2</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>net.synedra</groupId>[m
[31m-      <artifactId>validatorfx</artifactId>[m
[31m-      <version>0.4.0</version>[m
[31m-      <exclusions>[m
[31m-        <exclusion>[m
[31m-          <groupId>org.openjfx</groupId>[m
[31m-          <artifactId>*</artifactId>[m
[31m-        </exclusion>[m
[31m-      </exclusions>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.kordamp.ikonli</groupId>[m
[31m-      <artifactId>ikonli-javafx</artifactId>[m
[31m-      <version>12.3.1</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>eu.hansolo</groupId>[m
[31m-      <artifactId>tilesfx</artifactId>[m
[31m-      <version>11.48</version>[m
[31m-      <exclusions>[m
[31m-        <exclusion>[m
[31m-          <groupId>org.openjfx</groupId>[m
[31m-          <artifactId>*</artifactId>[m
[31m-        </exclusion>[m
[31m-      </exclusions>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>com.github.almasb</groupId>[m
[31m-      <artifactId>fxgl</artifactId>[m
[31m-      <version>17.3</version>[m
[31m-      <exclusions>[m
[31m-        <exclusion>[m
[31m-          <groupId>org.openjfx</groupId>[m
[31m-          <artifactId>*</artifactId>[m
[31m-        </exclusion>[m
[31m-      </exclusions>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.json</groupId>[m
[31m-      <artifactId>json</artifactId>[m
[31m-      <version>20210307</version>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.junit.jupiter</groupId>[m
[31m-      <artifactId>junit-jupiter-api</artifactId>[m
[31m-      <version>${junit.version}</version>[m
[31m-      <scope>test</scope>[m
[31m-    </dependency>[m
[31m-    <dependency>[m
[31m-      <groupId>org.junit.jupiter</groupId>[m
[31m-      <artifactId>junit-jupiter-engine</artifactId>[m
[31m-      <version>${junit.version}</version>[m
[31m-      <scope>test</scope>[m
[31m-    </dependency>[m
[31m-  </dependencies>[m
[31m-[m
[31m-  <build>[m
[31m-    <plugins>[m
[31m-      <plugin>[m
[31m-        <groupId>org.apache.maven.plugins</groupId>[m
[31m-        <artifactId>maven-compiler-plugin</artifactId>[m
[31m-        <version>3.11.0</version>[m
[31m-        <configuration>[m
[31m-          <source>22</source>[m
[31m-          <target>22</target>[m
[31m-        </configuration>[m
[31m-      </plugin>[m
[31m-      <plugin>[m
[31m-        <groupId>org.openjfx</groupId>[m
[31m-        <artifactId>javafx-maven-plugin</artifactId>[m
[31m-        <version>0.0.8</version>[m
[31m-        <executions>[m
[31m-          <execution>[m
[31m-            <!-- Default configuration for running with: mvn clean javafx:run -->[m
[31m-            <id>default-cli</id>[m
[31m-            <configuration>[m
[31m-              <mainClass>com.example.fierydragons/com.example.fierydragons.FieryDragonsApplication</mainClass>[m
[31m-              <launcher>app</launcher>[m
[31m-              <jlinkZipName>app</jlinkZipName>[m
[31m-              <jlinkImageName>app</jlinkImageName>[m
[31m-              <noManPages>true</noManPages>[m
[31m-              <stripDebug>true</stripDebug>[m
[31m-              <noHeaderFiles>true</noHeaderFiles>[m
[31m-            </configuration>[m
[31m-          </execution>[m
[31m-        </executions>[m
[31m-      </plugin>[m
[31m-    </plugins>[m
[31m-  </build>[m
[31m-</project>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/ChitAction.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/ChitAction.java[m
[1mdeleted file mode 100644[m
[1mindex c710364..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/ChitAction.java[m	
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-package com.example.fierydragons;[m
[31m-[m
[31m-public interface ChitAction {[m
[31m-    void move(boolean playerInCave);[m
[31m-    void handleMismatch();[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/FieryDragonsApplication.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/FieryDragonsApplication.java[m
[1mdeleted file mode 100644[m
[1mindex 5acb007..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/FieryDragonsApplication.java[m	
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-package com.example.fierydragons;[m
[31m-[m
[31m-import javafx.application.Application;[m
[31m-import javafx.fxml.FXMLLoader;[m
[31m-import javafx.scene.Scene;[m
[31m-import javafx.stage.Stage;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * Main class responsible for launching the Fiery Dragons application.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class FieryDragonsApplication extends Application {[m
[31m-    /**[m
[31m-     * Entry point for launching the application.[m
[31m-     *[m
[31m-     * @param stage The primary stage for the application window.[m
[31m-     * @throws IOException If an error occurs while loading the FXML file.[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void start(Stage stage) throws IOException {[m
[31m-        FXMLLoader fxmlLoader = new FXMLLoader(FieryDragonsApplication.class.getResource("home-view.fxml"));[m
[31m-        Scene scene = new Scene(fxmlLoader.load(), 1366, 768);[m
[31m-        stage.setTitle("Fiery Dragons");[m
[31m-        stage.setScene(scene);[m
[31m-        stage.show();[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/GameStateObserver.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/GameStateObserver.java[m
[1mdeleted file mode 100644[m
[1mindex 4150329..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/GameStateObserver.java[m	
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-package com.example.fierydragons;[m
[31m-[m
[31m-/**[m
[31m- * Interface for observing changes in the game state.[m
[31m- * @author: Observer pattern implemented by @jaden[m
[31m- */[m
[31m-public interface GameStateObserver {[m
[31m-    /**[m
[31m-     * Method called to update the game state.[m
[31m-     */[m
[31m-    void updateGameState();[m
[31m-    void updatePowerUpImage();[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/Main.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/Main.java[m
[1mdeleted file mode 100644[m
[1mindex acdef0d..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/Main.java[m	
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-package com.example.fierydragons;[m
[31m-[m
[31m-/**[m
[31m- * Main class to launch the Fiery Dragons application.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class Main {[m
[31m-    /**[m
[31m-     * Main method to start the application.[m
[31m-     * @param args Command line arguments.[m
[31m-     */[m
[31m-    public static void main(String[] args) {[m
[31m-        FieryDragonsApplication.launch(FieryDragonsApplication.class, args);[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/BaseController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/BaseController.java[m
[1mdeleted file mode 100644[m
[1mindex 322d971..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/BaseController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import com.example.fierydragons.utils.SwitchScene;[m
[31m-[m
[31m-/**[m
[31m- * Abstract class  BaseController which serves as a base for other controllers in the application.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public abstract class BaseController {[m
[31m-    // Declare a protected instance of SwitchScene. This allows derived controllers to use it for switching scenes.[m
[31m-    protected SwitchScene switcher = new SwitchScene();[m
[31m-[m
[31m-    // Declare a protected Class object to hold the class type of the instance.[m
[31m-    protected Class<?> classInstance;[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for BaseController class[m
[31m-     */[m
[31m-    protected BaseController() {[m
[31m-        // Set the classInstance to the class type of the instance.[m
[31m-        this.classInstance = this.getClass();[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/ConfirmPlayerController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/ConfirmPlayerController.java[m
[1mdeleted file mode 100644[m
[1mindex 6952f6e..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/ConfirmPlayerController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,84 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXML;[m
[31m-import javafx.fxml.FXMLLoader;[m
[31m-import javafx.scene.Node;[m
[31m-import javafx.scene.Scene;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-import javafx.stage.Stage;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * Controller class for confirming the number of players before proceeding to enter player information.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class ConfirmPlayerController extends BaseController {[m
[31m-[m
[31m-    /** Variable to store the total number of players selected. */[m
[31m-    private int totalPlayerCount;[m
[31m-[m
[31m-    /** ImageView for two players. */[m
[31m-    @FXML[m
[31m-    private ImageView twoPlayers;[m
[31m-[m
[31m-    /** ImageView for three players. */[m
[31m-    @FXML[m
[31m-    private ImageView threePlayers;[m
[31m-[m
[31m-    /** ImageView for four players. */[m
[31m-    @FXML[m
[31m-    private ImageView fourPlayers;[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the "Yes" button click event.[m
[31m-     * @param event The ActionEvent object representing the button click event.[m
[31m-     * @throws IOException If an error occurs while loading the next scene.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onYesButtonClick(ActionEvent event) throws IOException {[m
[31m-        FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/fierydragons/enter-player-info-view.fxml"));[m
[31m-        Scene nextScene = new Scene(loader.load());[m
[31m-[m
[31m-        Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();[m
[31m-        window.setScene(nextScene);[m
[31m-[m
[31m-        SetPlayerInfoController controller = loader.getController();[m
[31m-        controller.setPlayerCount(this.totalPlayerCount);[m
[31m-[m
[31m-        window.show();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the "Back" button click event.[m
[31m-     * @param event The ActionEvent object representing the button click event.[m
[31m-     * @throws IOException If an error occurs while switching scenes.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onBackButtonClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass();[m
[31m-        switcher.switchScene(event, classInstance, "select-players-view.fxml");[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the controller with the number of players.[m
[31m-     * @param playerCount The total number of players selected.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    public void initialiseWithPlayerCount(int playerCount) {[m
[31m-        this.totalPlayerCount = playerCount;[m
[31m-[m
[31m-        switch (playerCount) {[m
[31m-            case 2:[m
[31m-                twoPlayers.setVisible(true);[m
[31m-                break;[m
[31m-            case 3:[m
[31m-                threePlayers.setVisible(true);[m
[31m-                break;[m
[31m-            case 4:[m
[31m-                fourPlayers.setVisible(true);[m
[31m-                break;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/GameBoardController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/GameBoardController.java[m
[1mdeleted file mode 100644[m
[1mindex f121e16..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/GameBoardController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,152 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import com.example.fierydragons.GameStateObserver;[m
[31m-import com.example.fierydragons.factories.ImageViewFactory;[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import com.example.fierydragons.services.*;[m
[31m-import com.example.fierydragons.utils.GameBoardSetup;[m
[31m-import javafx.fxml.FXML;[m
[31m-import javafx.scene.image.Image;[m
[31m-import javafx.scene.text.Text;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-import javafx.scene.layout.Pane;[m
[31m-[m
[31m-import java.util.List;[m
[31m-[m
[31m-/**[m
[31m- * Controller class for managing the game board UI and logic.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class GameBoardController extends BaseController implements GameStateObserver {[m
[31m-[m
[31m-    // FXML attributes[m
[31m-    @FXML[m
[31m-    private Pane circlePane; // Pane for displaying circles representing game board[m
[31m-    @FXML[m
[31m-    private ImageView currentPlayerToken; // ImageView representing the current player's token[m
[31m-    @FXML[m
[31m-    private ImageView playerCave; // ImageView representing the current player's cave[m
[31m-    @FXML[m
[31m-    private ImageView animalNeeded; // ImageView representing the needed animal for the current player[m
[31m-    @FXML[m
[31m-    private ImageView powerUpImage; // ImageView representing the needed animal for the current player[m
[31m-    @FXML[m
[31m-    private Text currentPlayerArea; // Text displaying current player information[m
[31m-    @FXML[m
[31m-    private ImageView shieldImage; // ImageView representing a player's Shield Power Up[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the controller and sets up necessary components.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void initialize() {[m
[31m-        int numChits = ChitManager.getInstance().getNumChits();[m
[31m-[m
[31m-        // Render all chits onto the game board.[m
[31m-        List<ImageView> chitViews = ImageViewFactory.populateChits(circlePane, numChits);[m
[31m-[m
[31m-        GameManager.getInstance().addObserver(this);[m
[31m-        ChitManager.getInstance().addObserver(this);[m
[31m-[m
[31m-        if (!GameManager.getInstance().isLoadGame()) {[m
[31m-            // Set Player turn order[m
[31m-            PlayerManager.getInstance().createPlayerTurnOrder();[m
[31m-[m
[31m-            // Initialise cards and squares[m
[31m-            int numCards = CardManager.getInstance().getNumOfCards();[m
[31m-            int numSquares = SquareManager.getInstance().getSquaresPerCard();[m
[31m-            CardManager.getInstance().createCards(numCards, numSquares);[m
[31m-            SquareManager.getInstance().setTotalSquares(numSquares * numCards);[m
[31m-            SquareManager.getInstance().setPowerUps();[m
[31m-[m
[31m-            // Full initialisation of chits[m
[31m-            ChitManager.getInstance().initialiseChitsToViews(chitViews);[m
[31m-        } else {[m
[31m-            // Game is loaded, only reattach event handlers.[m
[31m-            ChitManager.getInstance().initialiseChitsToViews(chitViews);[m
[31m-        }[m
[31m-[m
[31m-        // initialise the game board and information about the game[m
[31m-        initialiseGameBoard();[m
[31m-        initialiseGameInfo();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Save game[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onSaveGameButtonClick(){[m
[31m-        GameStateManager.getInstance().saveGame();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the game board layout.[m
[31m-     */[m
[31m-    private void initialiseGameBoard() {[m
[31m-        GameBoardSetup divider = new GameBoardSetup(circlePane, 328, 207, 325, 325);[m
[31m-        divider.initialiseBoard(SquareManager.getInstance().getTotalSquares());[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the game information.[m
[31m-     */[m
[31m-    private void initialiseGameInfo() {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-        Square currentSquare = currentPlayer.getCurrentSquare();[m
[31m-[m
[31m-        initialisePowerUpImage();[m
[31m-[m
[31m-        currentPlayerArea.setText("Current Player: " + currentPlayer.getPlayerName());[m
[31m-        currentPlayerArea.setStyle("-fx-font-size: 30px;");[m
[31m-[m
[31m-        if (currentPlayer.getCurrentCave().getPlayerOccupiedBy() == currentPlayer) {[m
[31m-            animalNeeded.setImage(currentPlayer.getCurrentCave().getAnimalType().getAnimalImage());[m
[31m-        } else {[m
[31m-            animalNeeded.setImage(currentSquare.getAnimalType().getAnimalImage());[m
[31m-        }[m
[31m-[m
[31m-        currentPlayerToken.setImage(currentPlayer.getDragonToken().getDragonImage());[m
[31m-        playerCave.setImage(currentPlayer.getStartingCave().getCaveImage());[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialise image for player power up[m
[31m-     */[m
[31m-    private void initialisePowerUpImage() {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-        if (currentPlayer.getAvailablePowerUp() != null) {[m
[31m-            powerUpImage.setImage(currentPlayer.getAvailablePowerUp().getPowerUpImage());[m
[31m-        } else {[m
[31m-            powerUpImage.setImage(null);[m
[31m-        }[m
[31m-[m
[31m-        if (currentPlayer.isHasShield()) {[m
[31m-            shieldImage.setImage(new Image(getClass().getResourceAsStream("/images/icons/shield.png")));[m
[31m-        } else {[m
[31m-            shieldImage.setImage(null);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Update the state of the Game.[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void updateGameState() {[m
[31m-        initialiseGameInfo();[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void updatePowerUpImage() {[m
[31m-        initialisePowerUpImage();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the click event for ending the turn.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void endTurn(){[m
[31m-        GameManager.getInstance().notifyNextTurn();[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/HomeController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/HomeController.java[m
[1mdeleted file mode 100644[m
[1mindex 0be261d..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/HomeController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,59 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import com.example.fierydragons.services.GameManager;[m
[31m-import com.example.fierydragons.services.GameStateManager;[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXML;[m
[31m-import javafx.scene.Node;[m
[31m-import javafx.stage.Stage;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * The HomeController class controls the home view of the application and handles button click events to navigate to other views.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class HomeController extends BaseController {[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the 'Start' button click event.[m
[31m-     * Changes the scene to the 'Select Players' view.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by the button click.[m
[31m-     * @throws IOException if an error occurs while loading the FXML file.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onStartButtonClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass(); // Store the current class type in classInstance for logging or future reference.[m
[31m-        switcher.switchScene(event, classInstance, "select-players-view.fxml"); // Use switcher to change the scene to the 'Select Players' view.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the "Load" button[m
[31m-     * @param event The ActionEvent generated by the button click.[m
[31m-     * @throws IOException if an error occurs while loading the FXML file.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onLoadGameButtonClick(ActionEvent event) throws IOException {[m
[31m-        Stage stage = (Stage)((Node)event.getSource()).getScene().getWindow();[m
[31m-        boolean loadSuccessful = GameStateManager.getInstance().loadGame(stage);[m
[31m-[m
[31m-        if (loadSuccessful) {[m
[31m-            GameManager.getInstance().setLoadGame(true);[m
[31m-            switcher.switchScene(event, classInstance, "main-game-board.fxml"); // Use switcher to change the scene to the Main Game Board.[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the 'Rules' button click event.[m
[31m-     * Changes the scene to the 'Rules' view.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by the button click.[m
[31m-     * @throws IOException if an error occurs while loading the FXML file.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onRulesButtonClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass(); // Store the current class type in classInstance.[m
[31m-        switcher.switchScene(event, classInstance, "rules-view.fxml"); // Use switcher to change the scene to the 'Rules' view.[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/MenuPopupController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/MenuPopupController.java[m
[1mdeleted file mode 100644[m
[1mindex 8e3c4e2..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/MenuPopupController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,38 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import javafx.application.Platform;[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXML;[m
[31m-import javafx.scene.control.Button;[m
[31m-import javafx.stage.Stage;[m
[31m-[m
[31m-/**[m
[31m- * The MenuPopupController class manages the menu popup in the game, allowing players to resume or quit.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class MenuPopupController extends BaseController {[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the event when the "Resume" button is clicked.[m
[31m-     * Closes the popup menu, resuming the game.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by clicking the "Resume" button.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onResumeButtonClick(ActionEvent event) {[m
[31m-        // This action resumes the game by closing the popup menu.[m
[31m-        ((Stage) (((Button) event.getSource()).getScene().getWindow())).close();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the event when the "Quit" button is clicked.[m
[31m-     * Exits the application completely.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by clicking the "Quit" button.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onQuitButtonClick(ActionEvent event) {[m
[31m-        // Exits the application completely.[m
[31m-        Platform.exit();[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/PlayerSelectionController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/PlayerSelectionController.java[m
[1mdeleted file mode 100644[m
[1mindex 5ea4205..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/PlayerSelectionController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,86 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXML;[m
[31m-import javafx.fxml.FXMLLoader;[m
[31m-import javafx.scene.Node;[m
[31m-import javafx.scene.Scene;[m
[31m-import javafx.stage.Stage;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * The PlayerSelectionController class handles the UI interactions for player selection.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class PlayerSelectionController extends BaseController {[m
[31m-[m
[31m-    /**[m
[31m-     * Triggered when the "Two Players" option is chosen.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by selecting the "Two Players" option.[m
[31m-     * @throws IOException If an error occurs while loading the player confirmation screen.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onSelectTwoPlayers(ActionEvent event) throws IOException {[m
[31m-        showPlayerConfirmationScreen(event, 2); // Calls the method to show the confirmation screen for two players.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Triggered when the "Three Players" option is chosen.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by selecting the "Three Players" option.[m
[31m-     * @throws IOException If an error occurs while loading the player confirmation screen.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onSelectThreePlayers(ActionEvent event) throws IOException {[m
[31m-        showPlayerConfirmationScreen(event, 3); // Calls the method to show the confirmation screen for three players.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Triggered when the "Four Players" option is chosen.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by selecting the "Four Players" option.[m
[31m-     * @throws IOException If an error occurs while loading the player confirmation screen.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onSelectFourPlayers(ActionEvent event) throws IOException {[m
[31m-        showPlayerConfirmationScreen(event, 4); // Calls the method to show the confirmation screen for four players.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the "Back" button click, navigating back to the home screen.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by clicking the "Back" button.[m
[31m-     * @throws IOException If an error occurs while switching to the home screen.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onBackButtonClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass(); // Updates classInstance with the current class.[m
[31m-        switcher.switchScene(event, classInstance, "home-view.fxml"); // Uses the switcher to change the scene to the home view.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Displays the player confirmation screen depending on the number of players selected.[m
[31m-     *[m
[31m-     * @param event       The ActionEvent generated by selecting the number of players.[m
[31m-     * @param playerCount The number of players selected.[m
[31m-     * @throws IOException If an error occurs while loading the player confirmation screen.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void showPlayerConfirmationScreen(ActionEvent event, int playerCount) throws IOException {[m
[31m-        // Load the FXML for the confirmation screen.[m
[31m-        FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/fierydragons/confirm-players-view.fxml"));[m
[31m-        Scene nextScene = new Scene(loader.load()); // Create a new scene with the loaded FXML.[m
[31m-[m
[31m-        // Get the current window and set the new scene.[m
[31m-        Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();[m
[31m-        window.setScene(nextScene);[m
[31m-[m
[31m-        // Get the controller for the next scene and initialise it with the selected player count.[m
[31m-        ConfirmPlayerController controller = loader.getController();[m
[31m-        controller.initialiseWithPlayerCount(playerCount);[m
[31m-[m
[31m-        window.show(); // Display the window with the new scene.[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/RulesController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/RulesController.java[m
[1mdeleted file mode 100644[m
[1mindex 44f7134..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/RulesController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,49 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXML;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * The RulesController class handles navigation within the rules sections of the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class RulesController extends BaseController {[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the action when the "Back" button is clicked on the first rules page.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by clicking the "Back" button.[m
[31m-     * @throws IOException If an error occurs while switching to the home view.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onBackButtonClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass(); // Update classInstance with the current class for consistency.[m
[31m-        switcher.switchScene(event, classInstance, "home-view.fxml"); // Navigate back to the home view.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the action when the "Next Page" button is clicked on the first rules page.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by clicking the "Next Page" button.[m
[31m-     * @throws IOException If an error occurs while switching to the second page of the rules.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onNextPageClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass(); // Update classInstance with the current class.[m
[31m-        switcher.switchScene(event, classInstance, "rules-page-2-view.fxml"); // Navigate to the second page of the rules.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the action when the "Previous Page" button is clicked on the second rules page.[m
[31m-     *[m
[31m-     * @param event The ActionEvent generated by clicking the "Previous Page" button.[m
[31m-     * @throws IOException If an error occurs while switching back to the first page of the rules.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onPageTwoPrevPageClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass(); // Update classInstance with the current class.[m
[31m-        switcher.switchScene(event, classInstance, "rules-view.fxml"); // Navigate back to the first page of the rules.[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/SetCardSquareInfoController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/SetCardSquareInfoController.java[m
[1mdeleted file mode 100644[m
[1mindex 0a93173..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/SetCardSquareInfoController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,84 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import com.example.fierydragons.services.CardManager;[m
[31m-import com.example.fierydragons.services.SquareManager;[m
[31m-import javafx.beans.binding.BooleanBinding;[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXML;[m
[31m-import javafx.scene.control.Button;[m
[31m-import javafx.scene.control.TextField;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * Controller class for setting the card and square information for the game.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class SetCardSquareInfoController extends BaseController {[m
[31m-[m
[31m-    // volcanoCard input[m
[31m-    @FXML[m
[31m-    private TextField cardField;[m
[31m-[m
[31m-    // squares per card input[m
[31m-    @FXML[m
[31m-    private TextField squareField;[m
[31m-[m
[31m-    // confirm button[m
[31m-    @FXML[m
[31m-    private Button confirmButton;[m
[31m-[m
[31m-    /**[m
[31m-     * Initializes the controller class.[m
[31m-     * Sets up bindings and default values for the text fields.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void initialize() {[m
[31m-        // Create a boolean binding for when both text fields are empty[m
[31m-        BooleanBinding bothFieldsEmpty = cardField.textProperty().isEmpty()[m
[31m-                .and(squareField.textProperty().isEmpty());[m
[31m-[m
[31m-        // Bind the disable property of the confirm button to the boolean binding[m
[31m-        confirmButton.disableProperty().bind(bothFieldsEmpty);[m
[31m-[m
[31m-        // Set prompt texts for the TextField and DatePicker.[m
[31m-        cardField.setPromptText("Enter the number of Cards for the Game");[m
[31m-        cardField.setText("8"); // set default value[m
[31m-[m
[31m-        squareField.setPromptText("Enter the number of Squares per Card");[m
[31m-        squareField.setText("3"); // set default value[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Event handler for the confirm button click.[m
[31m-     * Sets the number of cards and squares per card in the game managers.[m
[31m-     * Switches the scene to the main game board.[m
[31m-     *[m
[31m-     * @param event The ActionEvent triggered by the button click.[m
[31m-     * @throws IOException If there is an error switching the scene.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onConfirmButtonClick(ActionEvent event) throws IOException {[m
[31m-        int numOfCards = Integer.parseInt(cardField.getText());[m
[31m-        int numOfSquares = Integer.parseInt(squareField.getText());[m
[31m-[m
[31m-        CardManager.getInstance().setNumOfCards(numOfCards);[m
[31m-        SquareManager.getInstance().setSquaresPerCard(numOfSquares);[m
[31m-[m
[31m-        switcher.switchScene(event, this.getClass(), "main-game-board.fxml");[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Event handler for the back button click.[m
[31m-     * Switches the scene to the enter player info view.[m
[31m-     *[m
[31m-     * @param event The ActionEvent triggered by the button click.[m
[31m-     * @throws IOException If there is an error switching the scene.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onBackButtonClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass();[m
[31m-        switcher.switchScene(event, classInstance, "enter-player-info-view.fxml");[m
[31m-    }[m
[31m-[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/SetPlayerInfoController.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/SetPlayerInfoController.java[m
[1mdeleted file mode 100644[m
[1mindex 3c18654..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/controllers/SetPlayerInfoController.java[m	
[1m+++ /dev/null[m
[36m@@ -1,96 +0,0 @@[m
[31m-package com.example.fierydragons.controllers;[m
[31m-[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import javafx.beans.binding.Bindings;[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXML;[m
[31m-import javafx.scene.control.Button;[m
[31m-import javafx.scene.control.DatePicker;[m
[31m-import javafx.scene.control.TextField;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-import java.time.LocalDate;[m
[31m-[m
[31m-/**[m
[31m- * The SetPlayerInfoController class is responsible for setting up player information including names and dates of birth.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class SetPlayerInfoController extends BaseController {[m
[31m-[m
[31m-    private int totalPlayerCount; // Holds the total number of players to be set up.[m
[31m-[m
[31m-    private static int currentPlayer = 1; // Static variable to keep track of which player's info is being entered.[m
[31m-[m
[31m-    @FXML[m
[31m-    private TextField textField; // TextField for entering player names.[m
[31m-[m
[31m-    @FXML[m
[31m-    private DatePicker dobField; // DatePicker for entering player dates of birth.[m
[31m-[m
[31m-    @FXML[m
[31m-    private Button confirmButton; // Button to confirm the entry of each player's info.[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises SetPlayerInfoController.[m
[31m-     * Sets up bindings and prompt texts.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void initialize() {[m
[31m-        // Disable the confirm button if the text field is empty or the date of birth is not set.[m
[31m-        confirmButton.disableProperty().bind(textField.textProperty().isEmpty());[m
[31m-        confirmButton.disableProperty().bind(Bindings.createBooleanBinding([m
[31m-                        () -> dobField.getValue() == null,[m
[31m-                        dobField.valueProperty()[m
[31m-                )[m
[31m-        );[m
[31m-        // Set prompt texts for the TextField and DatePicker.[m
[31m-        textField.setPromptText("Enter Player " + currentPlayer + " Name");[m
[31m-        dobField.setPromptText("Enter Player " + currentPlayer + " Date of Birth");[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles clicks on the confirm button.[m
[31m-     * @param event The ActionEvent generated by clicking the "Confirm" button.[m
[31m-     * @throws IOException If an error occurs during navigation to the main game board.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onConfirmButtonClick(ActionEvent event) throws IOException {[m
[31m-        String playerName = textField.getText();[m
[31m-        LocalDate dateOfBirth = dobField.getValue();[m
[31m-[m
[31m-        // Adds a new player using the PlayerManager service.[m
[31m-        PlayerManager.getInstance().createPlayer(playerName, dateOfBirth);[m
[31m-[m
[31m-        // Check if more players need to be configured.[m
[31m-        if (currentPlayer < totalPlayerCount) {[m
[31m-            currentPlayer++; // Increment to set up the next player.[m
[31m-            textField.clear(); // Clear the text field for the next player's name.[m
[31m-            dobField.setValue(null); // Clear the date picker for the next player's date of birth.[m
[31m-            // Update prompt texts with the current player's index.[m
[31m-            textField.setPromptText("Enter Player " + currentPlayer + " Name");[m
[31m-            dobField.setPromptText("Enter Player " + currentPlayer + " Date of Birth");[m
[31m-        } else {[m
[31m-            currentPlayer = 1; // Reset the player index.[m
[31m-            switcher.switchScene(event, this.getClass(), "enter-card-square-info-view.fxml"); // Navigate to the card and square info view.[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles clicks on the back button.[m
[31m-     * @param event The ActionEvent generated by clicking the "Back" button.[m
[31m-     * @throws IOException If an error occurs during navigation back to the player selection view.[m
[31m-     */[m
[31m-    @FXML[m
[31m-    private void onBackButtonClick(ActionEvent event) throws IOException {[m
[31m-        classInstance = getClass();[m
[31m-        switcher.switchScene(event, classInstance, "select-players-view.fxml"); // Navigate back to the select player view.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the total number of players as determined by the previous selection.[m
[31m-     * @param playerCount The total number of players.[m
[31m-     */[m
[31m-    public void setPlayerCount(int playerCount) {[m
[31m-        this.totalPlayerCount = playerCount;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/CardFactory.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/CardFactory.java[m
[1mdeleted file mode 100644[m
[1mindex 9d28434..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/CardFactory.java[m	
[1m+++ /dev/null[m
[36m@@ -1,102 +0,0 @@[m
[31m-package com.example.fierydragons.factories;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.*;[m
[31m-import com.example.fierydragons.models.cards.VolcanoCard;[m
[31m-import com.example.fierydragons.services.CaveManager;[m
[31m-import com.example.fierydragons.utils.CardConfiguration;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Arrays;[m
[31m-import java.util.List;[m
[31m-import java.util.Random;[m
[31m-[m
[31m-/**[m
[31m- * The CardFactory class creates instances of VolcanoCard objects.[m
[31m- * @author: @william implemented creation of Volcano cards using factory method[m
[31m- */[m
[31m-public class CardFactory {[m
[31m-    /**[m
[31m-     * Creates an array of VolcanoCard objects based on the specified parameters.[m
[31m-     *[m
[31m-     * @param totalCards  The total number of cards to create.[m
[31m-     * @param numSquares  The number of squares on the card.[m
[31m-     * @param numPlayers  The number of players in the game.[m
[31m-     * @return An array of VolcanoCard objects.[m
[31m-     */[m
[31m-    public static VolcanoCard[] createCards(int totalCards, int numSquares, int numPlayers) {[m
[31m-        VolcanoCard[] cards = new VolcanoCard[totalCards];[m
[31m-        Animal[][] cardConfigurations = generateCardConfigurations(totalCards, numSquares);[m
[31m-        boolean[] cutCardIndicators = CardConfiguration.generateCutCardIndicators(numPlayers, totalCards);[m
[31m-[m
[31m-        for (int i = 0; i < totalCards; i++) {[m
[31m-            Animal[] configuration = cardConfigurations[i];[m
[31m-            boolean isCut = cutCardIndicators[i];[m
[31m-[m
[31m-            VolcanoCard card = createVolcanoCard(configuration, isCut);[m
[31m-[m
[31m-            if (isCut) {[m
[31m-                CaveManager.getInstance().setCavesToCutCard(card);[m
[31m-            }[m
[31m-[m
[31m-            cards[i] = card;[m
[31m-        }[m
[31m-[m
[31m-        return cards;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Creates a VolcanoCard object with the specified configuration and cut indicator.[m
[31m-     *[m
[31m-     * @param configuration The configuration of animal types on the card.[m
[31m-     * @param isCut         Indicates whether the card is cut or not.[m
[31m-     * @return A VolcanoCard object.[m
[31m-     */[m
[31m-    private static VolcanoCard createVolcanoCard(Animal[] configuration, boolean isCut) {[m
[31m-        return new VolcanoCard(configuration, isCut);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Generates configurations for multiple VolcanoCard objects based on the specified parameters.[m
[31m-     *[m
[31m-     * @param totalCards The total number of cards to generate configurations for.[m
[31m-     * @param numSquares The number of squares on each card.[m
[31m-     * @return A 2D array containing configurations for multiple cards.[m
[31m-     */[m
[31m-    /**[m
[31m-     * Generates configurations for multiple VolcanoCard objects based on the specified parameters.[m
[31m-     *[m
[31m-     * @param totalCards The total number of cards to generate configurations for.[m
[31m-     * @param numSquares The number of squares on each card.[m
[31m-     * @return A 2D array containing configurations for multiple cards.[m
[31m-     */[m
[31m-    private static Animal[][] generateCardConfigurations(int totalCards, int numSquares) {[m
[31m-        if (totalCards == 8 && numSquares == 3) {[m
[31m-            return CardConfiguration.shuffleCardConfigurations();[m
[31m-        }[m
[31m-[m
[31m-        Animal[][] cardConfigurations = new Animal[totalCards][numSquares];[m
[31m-        Random random = new Random();[m
[31m-[m
[31m-        for (int i = 0; i < totalCards; i++) {[m
[31m-            List<Animal> availableAnimals = new ArrayList<>(Arrays.asList(ANIMAL_TYPES));[m
[31m-[m
[31m-            for (int j = 0; j < numSquares; j++) {[m
[31m-                if (availableAnimals.isEmpty()) {[m
[31m-                    availableAnimals = new ArrayList<>(Arrays.asList(ANIMAL_TYPES));[m
[31m-                }[m
[31m-[m
[31m-                int animalIndex = random.nextInt(availableAnimals.size());[m
[31m-                cardConfigurations[i][j] = availableAnimals.get(animalIndex);[m
[31m-                availableAnimals.remove(animalIndex);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        return cardConfigurations;[m
[31m-    }[m
[31m-[m
[31m-    /** Array containing all possible animal types for card configuration */[m
[31m-    private static final Animal[] ANIMAL_TYPES = {[m
[31m-            new BabyDragon(), new Bat(), new Salamander(), new Spider()[m
[31m-    };[m
[31m-[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/CaveFactory.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/CaveFactory.java[m
[1mdeleted file mode 100644[m
[1mindex d1e2866..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/CaveFactory.java[m	
[1m+++ /dev/null[m
[36m@@ -1,71 +0,0 @@[m
[31m-package com.example.fierydragons.factories;[m
[31m-[m
[31m-import com.example.fierydragons.models.caves.*;[m
[31m-[m
[31m-import java.util.List;[m
[31m-import java.util.ArrayList;[m
[31m-[m
[31m-/**[m
[31m- * A factory class responsible for creating and managing instances of different types of caves.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class CaveFactory {[m
[31m-[m
[31m-    /**[m
[31m-     * A list to store all created cave instances.[m
[31m-     */[m
[31m-    public static List<Cave> caves = new ArrayList<>();[m
[31m-[m
[31m-    /**[m
[31m-     * Creates or retrieves a cave instance based on the given type.[m
[31m-     *[m
[31m-     * @param type The type of cave to create or retrieve.[m
[31m-     * @return The cave instance corresponding to the given type.[m
[31m-     * @throws IllegalArgumentException If the given cave type is unknown.[m
[31m-     */[m
[31m-    public static Cave createCave(String type) {[m
[31m-        // Check if a cave of the given type already exists in the list[m
[31m-        for (Cave cave : caves) {[m
[31m-            if (cave.getCaveType().equals(type)) {[m
[31m-                return cave;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        // Create a new cave instance based on the given type[m
[31m-        Cave newCave;[m
[31m-        switch (type) {[m
[31m-            case "Salamander":[m
[31m-                newCave = new SalamanderCave();[m
[31m-                break;[m
[31m-            case "Bat":[m
[31m-                newCave = new BatCave();[m
[31m-                break;[m
[31m-            case "Spider":[m
[31m-                newCave = new SpiderCave();[m
[31m-                break;[m
[31m-            case "Baby Dragon":[m
[31m-                newCave = new BabyDragonCave();[m
[31m-                break;[m
[31m-            default:[m
[31m-                throw new IllegalArgumentException("Unknown cave type: " + type);[m
[31m-        }[m
[31m-[m
[31m-        // Add the new cave instance to the list and return it[m
[31m-        caves.add(newCave);[m
[31m-        return newCave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises a list of caves with different types.[m
[31m-     *[m
[31m-     * @return A list containing instances of different cave types.[m
[31m-     */[m
[31m-    public static List<Cave> initialiseCaves() {[m
[31m-        List<Cave> caves = new ArrayList<>();[m
[31m-        caves.add(createCave("Salamander"));[m
[31m-        caves.add(createCave("Bat"));[m
[31m-        caves.add(createCave("Spider"));[m
[31m-        caves.add(createCave("Baby Dragon"));[m
[31m-        return caves;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/ChitFactory.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/ChitFactory.java[m
[1mdeleted file mode 100644[m
[1mindex de297d4..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/ChitFactory.java[m	
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-package com.example.fierydragons.factories;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.Animal;[m
[31m-import com.example.fierydragons.models.chits.*;[m
[31m-import com.example.fierydragons.services.AnimalManager;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-/**[m
[31m- * The ChitFactory class creates instances of Chit objects.[m
[31m- * @author: @william implemented creation of chit cards using factory method[m
[31m- */[m
[31m-public class ChitFactory {[m
[31m-    /**[m
[31m-     * Creates a chit with the specified animal type and count.[m
[31m-     *[m
[31m-     * @param animalType The type of animal associated with the chit.[m
[31m-     * @param count      The count of the chit.[m
[31m-     * @return A new Chit object.[m
[31m-     * @throws IllegalArgumentException if the animal type is invalid.[m
[31m-     */[m
[31m-    public static Chit createChit(Animal animalType, int count) {[m
[31m-        return switch (animalType.getName()) {[m
[31m-            case "Baby Dragon" -> new BabyDragonChit(count);[m
[31m-            case "Bat" -> new BatChit(count);[m
[31m-            case "Salamander" -> new SalamanderChit(count);[m
[31m-            case "Spider" -> new SpiderChit(count);[m
[31m-            case "Pirate Dragon" -> new PirateChit(count);[m
[31m-            case "Backward Dragon" -> new BackwardChit(count);[m
[31m-            default -> throw new IllegalArgumentException("Invalid chit type: " + animalType.getName());[m
[31m-        };[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Creates a Chit object from a JSONObject.[m
[31m-     *[m
[31m-     * @param json The JSONObject containing the chit data.[m
[31m-     * @return A new Chit object.[m
[31m-     */[m
[31m-    public static Chit fromJSON(JSONObject json) {[m
[31m-        String animalType = json.getString("animalType");[m
[31m-        int count = json.getInt("count");[m
[31m-        boolean isFlipped = json.getBoolean("isFlipped");[m
[31m-        Chit chit = createChit(AnimalManager.getInstance().getAnimalByName(animalType), count);[m
[31m-        chit.setFlipped(isFlipped);[m
[31m-[m
[31m-        return chit;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/DragonTypeFactory.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/DragonTypeFactory.java[m
[1mdeleted file mode 100644[m
[1mindex 0509e71..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/DragonTypeFactory.java[m	
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-package com.example.fierydragons.factories;[m
[31m-[m
[31m-import com.example.fierydragons.models.dragon_types.*;[m
[31m-[m
[31m-/**[m
[31m- * The DragonTypeFactory class creates instances of DragonType objects.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class DragonTypeFactory {[m
[31m-    /**[m
[31m-     * Gets a DragonType object based on the type name.[m
[31m-     * @param type The type name of the dragon.[m
[31m-     * @return A DragonType object corresponding to the given type.[m
[31m-     */[m
[31m-    public static DragonType getDragonType(String type) {[m
[31m-        if (type == null) {[m
[31m-            return null;[m
[31m-        }[m
[31m-[m
[31m-        // check type[m
[31m-        switch (type) {[m
[31m-            case "Fire":[m
[31m-                return new FireDragon();[m
[31m-            case "Ice":[m
[31m-                return new IceDragon();[m
[31m-            case "Earth":[m
[31m-                return new EarthDragon();[m
[31m-            case "Storm":[m
[31m-                return new StormDragon();[m
[31m-            default:[m
[31m-                throw new IllegalArgumentException("Unknown Dragon Type: " + type);[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/ImageViewFactory.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/ImageViewFactory.java[m
[1mdeleted file mode 100644[m
[1mindex 31c960b..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/ImageViewFactory.java[m	
[1m+++ /dev/null[m
[36m@@ -1,91 +0,0 @@[m
[31m-package com.example.fierydragons.factories;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-import javafx.scene.layout.Pane;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.List;[m
[31m-import java.util.Objects;[m
[31m-[m
[31m-/**[m
[31m- * The ImageViewFactory class creates instances of ImageViews to show pictures in GUI.[m
[31m- * @author: @william implemented creation of imageview factory method to represent chit cards, Jaden and Kevin made changes[m
[31m- */[m
[31m-public class ImageViewFactory {[m
[31m-    /** The radius of the inner circle where chits are placed */[m
[31m-    private static final double INNER_CIRCLE_RADIUS = 175.0;[m
[31m-    /** The x-coordinate of the center of the circle */[m
[31m-    private static final double CIRCLE_CENTER_X = 328.0;[m
[31m-    /** The y-coordinate of the center of the circle */[m
[31m-    private static final double CIRCLE_CENTER_Y = 328.0;[m
[31m-    /** Padding between chits */[m
[31m-    private static final double PADDING = 20.0;[m
[31m-[m
[31m-    /**[m
[31m-     * Populates chits on a circular pane.[m
[31m-     *[m
[31m-     * @param circlePane The pane where chits are placed.[m
[31m-     * @param numChits   The number of chits to be placed.[m
[31m-     * @return A list of ImageViews representing the placed chits.[m
[31m-     */[m
[31m-    public static List<ImageView> populateChits(Pane circlePane, int numChits) {[m
[31m-        List<ImageView> placedChits = new ArrayList<>();[m
[31m-        int numRows = (int) Math.ceil(Math.sqrt(numChits));[m
[31m-        int numCols = (int) Math.ceil((double) numChits / numRows);[m
[31m-[m
[31m-        // Calculate the dimensions for each cell[m
[31m-        double gridWidth = INNER_CIRCLE_RADIUS * 2 - PADDING * 2;[m
[31m-        double gridHeight = INNER_CIRCLE_RADIUS * 2 - PADDING * 2;[m
[31m-        double cellWidth = gridWidth / numCols;[m
[31m-        double cellHeight = gridHeight / numRows;[m
[31m-[m
[31m-        // Calculate the width and height of each chit[m
[31m-        double chitWidth = cellWidth - PADDING;[m
[31m-        double chitHeight = cellHeight - PADDING;[m
[31m-[m
[31m-        // Calculate the starting position for placing chits[m
[31m-        double startX = CIRCLE_CENTER_X - INNER_CIRCLE_RADIUS + PADDING + cellWidth / 2;[m
[31m-        double startY = CIRCLE_CENTER_Y - INNER_CIRCLE_RADIUS + PADDING + cellHeight / 2;[m
[31m-[m
[31m-        int count = 0;[m
[31m-        for (int row = 0; row < numRows; row++) {[m
[31m-            for (int col = 0; col < numCols; col++) {[m
[31m-                if (count >= numChits) {[m
[31m-                    break;[m
[31m-                }[m
[31m-[m
[31m-                double x = startX + col * cellWidth;[m
[31m-                double y = startY + row * cellHeight;[m
[31m-[m
[31m-                // Create and configure the chit ImageView[m
[31m-                ImageView chitView = createChitView(chitWidth, chitHeight);[m
[31m-                chitView.setLayoutX(x - chitWidth / 2);[m
[31m-                chitView.setLayoutY(y - chitHeight / 2);[m
[31m-                circlePane.getChildren().add(chitView);[m
[31m-                placedChits.add(chitView);[m
[31m-                count++;[m
[31m-            }[m
[31m-        }[m
[31m-        return placedChits;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Creates an ImageView for a chit with the specified width and height.[m
[31m-     *[m
[31m-     * @param chitWidth  The width of the chit ImageView.[m
[31m-     * @param chitHeight The height of the chit ImageView.[m
[31m-     * @return The created chit ImageView.[m
[31m-     */[m
[31m-    private static ImageView createChitView(double chitWidth, double chitHeight) {[m
[31m-        // Load the chit image from resources[m
[31m-        Image chitImage = new Image(Objects.requireNonNull(ImageViewFactory.class.getResourceAsStream("/images/chit/chit.png")));[m
[31m-        // Create the ImageView and configure its properties[m
[31m-        ImageView chitView = new ImageView(chitImage);[m
[31m-        chitView.setFitWidth(chitWidth);[m
[31m-        chitView.setFitHeight(chitHeight);[m
[31m-        chitView.setPreserveRatio(true);[m
[31m-        chitView.setPickOnBounds(true);[m
[31m-        return chitView;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/PowerUpFactory.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/PowerUpFactory.java[m
[1mdeleted file mode 100644[m
[1mindex 4478cbf..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/PowerUpFactory.java[m	
[1m+++ /dev/null[m
[36m@@ -1,37 +0,0 @@[m
[31m-package com.example.fierydragons.factories;[m
[31m-[m
[31m-import com.example.fierydragons.models.power_ups.PowerUp;[m
[31m-import com.example.fierydragons.models.power_ups.Shield;[m
[31m-import com.example.fierydragons.models.power_ups.SkipTurn;[m
[31m-import com.example.fierydragons.models.power_ups.SwapPlayer;[m
[31m-[m
[31m-import java.security.SecureRandom;[m
[31m-[m
[31m-/**[m
[31m- * Factory class to create instances of PowerUp with specific probabilities using SecureRandom.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class PowerUpFactory {[m
[31m-[m
[31m-    // random value[m
[31m-    private static final SecureRandom secureRandom = new SecureRandom();[m
[31m-[m
[31m-    /**[m
[31m-     * Generates a PowerUp instance based on defined probabilities using SecureRandom.[m
[31m-     * @return A PowerUp object which can be Shield, SkipTurn, or SwapPlayer.[m
[31m-     */[m
[31m-    public static PowerUp createPowerUp() {[m
[31m-        long seed = System.nanoTime(); // Use nanoTime() as seed for randomness[m
[31m-        secureRandom.setSeed(seed);[m
[31m-[m
[31m-        int probability = secureRandom.nextInt(100);  // Generate a number from 0 to 99[m
[31m-[m
[31m-        if (probability < 40) {  // 40% chance for Shield[m
[31m-            return new Shield();[m
[31m-        } else if (probability < 80) {  // 40% chance for SkipTurn[m
[31m-            return new SkipTurn();[m
[31m-        } else {  // 20% chance for SwapPlayer[m
[31m-            return new SwapPlayer();[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/SquareFactory.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/SquareFactory.java[m
[1mdeleted file mode 100644[m
[1mindex a57ad4c..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/factories/SquareFactory.java[m	
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-package com.example.fierydragons.factories;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.*;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-[m
[31m-import java.security.SecureRandom;[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.List;[m
[31m-[m
[31m-/**[m
[31m- * The SquareFactory class creates instances of Square objects.[m
[31m- * @author: @william implemented creation of square factory method to represent squares on the game board. Changes from Jaden, Kevin and Glenn.[m
[31m- */[m
[31m-public class SquareFactory {[m
[31m-    /** A secure random number generator. */[m
[31m-    private static final SecureRandom random = new SecureRandom();[m
[31m-    /** A list of available animal types. */[m
[31m-    private static final List<Animal> ANIMALS = new ArrayList<>() {{[m
[31m-        add(new BabyDragon());[m
[31m-        add(new Bat());[m
[31m-        add(new Salamander());[m
[31m-        add(new Spider());[m
[31m-    }};[m
[31m-[m
[31m-    /**[m
[31m-     * Creates a square with the specified attributes.[m
[31m-     *[m
[31m-     * @param isCut      Indicates whether the square is a cut square.[m
[31m-     * @param animalType The type of animal associated with the square.[m
[31m-     * @return A new Square object.[m
[31m-     */[m
[31m-    public static Square createSquare(boolean isCut, Animal animalType) {[m
[31m-        if (animalType == null) {[m
[31m-            animalType = getRandomAnimal();[m
[31m-        }[m
[31m-        return new Square(animalType, isCut);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Retrieves a random animal from the list of available animal types.[m
[31m-     *[m
[31m-     * @return A random Animal object.[m
[31m-     */[m
[31m-    private static Animal getRandomAnimal() {[m
[31m-        int index = random.nextInt(ANIMALS.size());[m
[31m-        return ANIMALS.get(index);[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/Game.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/Game.java[m
[1mdeleted file mode 100644[m
[1mindex d4dd471..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/Game.java[m	
[1m+++ /dev/null[m
[36m@@ -1,32 +0,0 @@[m
[31m-package com.example.fierydragons.models;[m
[31m-[m
[31m-/**[m
[31m- * Game class manages the state and the number of players in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class Game {[m
[31m-[m
[31m-    private int playerCount; // Number of players participating in the game.[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the game.[m
[31m-     */[m
[31m-    public Game() {[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the number of players participating in the game.[m
[31m-     * @return The number of players[m
[31m-     */[m
[31m-    public int getPlayerCount() {[m
[31m-        return playerCount;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the number of players participating in the game.[m
[31m-     * @param playerCount The number of players to set[m
[31m-     */[m
[31m-    public void setPlayerCount(int playerCount) {[m
[31m-        this.playerCount = playerCount;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/Player.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/Player.java[m
[1mdeleted file mode 100644[m
[1mindex 1cdd1ab..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/Player.java[m	
[1m+++ /dev/null[m
[36m@@ -1,216 +0,0 @@[m
[31m-package com.example.fierydragons.models;[m
[31m-[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.dragon_types.DragonType;[m
[31m-import com.example.fierydragons.models.power_ups.PowerUp;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import com.example.fierydragons.services.SquareManager;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-[m
[31m-import java.time.LocalDate;[m
[31m-[m
[31m-/**[m
[31m- * Player class manages the details of a player in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class Player {[m
[31m-[m
[31m-    private String playerName; // Name of the player.[m
[31m-    private LocalDate playerDob; // Date of birth of the player.[m
[31m-    private DragonType dragonToken; // Dragon token assigned to the player.[m
[31m-    private Cave startingCave; // Current cave assigned to the player.[m
[31m-    private Cave currentCave; // Current cave assigned to the player.[m
[31m-    private ImageView tokenImageView; // Image view of the player's token.[m
[31m-    private Square currentSquare; // Square where the player is currently located.[m
[31m-    private int currentSquareIndex;[m
[31m-    private int stepsTaken = 0; // Number of steps taken by the player.[m
[31m-    private PowerUp availablePowerUp = null; // a power up available to the player[m
[31m-    private boolean hasShield = false; // if the player has a shield power up active[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises a player with their name and date of birth.[m
[31m-     * @param name The name of the player[m
[31m-     * @param dateOfBirth The date of birth of the player[m
[31m-     */[m
[31m-    public Player(String name, LocalDate dateOfBirth) {[m
[31m-        setPlayerName(name);[m
[31m-        setPlayerDob(dateOfBirth);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the name of the player.[m
[31m-     * @return The name of the player[m
[31m-     */[m
[31m-    public String getPlayerName() {[m
[31m-        return playerName;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the name of the player.[m
[31m-     * @param playerName The name of the player to set[m
[31m-     */[m
[31m-    public void setPlayerName(String playerName) {[m
[31m-        this.playerName = playerName;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the date of birth of the player.[m
[31m-     * @return The date of birth of the player[m
[31m-     */[m
[31m-    public LocalDate getPlayerDob() {[m
[31m-        return playerDob;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the date of birth of the player.[m
[31m-     * @param playerDob The date of birth of the player to set[m
[31m-     */[m
[31m-    public void setPlayerDob(LocalDate playerDob) {[m
[31m-        this.playerDob = playerDob;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the dragon token assigned to the player.[m
[31m-     * @return The dragon token[m
[31m-     */[m
[31m-    public DragonType getDragonToken() {[m
[31m-        return dragonToken;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the dragon token assigned to the player.[m
[31m-     * @param dragonToken The dragon token to set[m
[31m-     */[m
[31m-    public void setDragonToken(DragonType dragonToken) {[m
[31m-        this.dragonToken = dragonToken;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the starting cave assigned to the player.[m
[31m-     * @return The starting cave[m
[31m-     */[m
[31m-    public Cave getCurrentCave() {[m
[31m-        return currentCave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the starting cave assigned to the player.[m
[31m-     * @param currentCave The starting cave to set[m
[31m-     */[m
[31m-    public void setCurrentCave(Cave currentCave) {[m
[31m-        this.currentCave = currentCave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the image view of the player's token.[m
[31m-     * @return The image view of the token[m
[31m-     */[m
[31m-    public ImageView getTokenImageView() {[m
[31m-        return tokenImageView;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the image view of the player's token.[m
[31m-     * @param tokenImageView The image view of the token to set[m
[31m-     */[m
[31m-    public void setTokenImageView(ImageView tokenImageView) {[m
[31m-        this.tokenImageView = tokenImageView;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the square where the player is currently located.[m
[31m-     * @return The current square[m
[31m-     */[m
[31m-    public Square getCurrentSquare() {[m
[31m-        return currentSquare;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the square where the player is currently located.[m
[31m-     * @param currentSquare The current square to set[m
[31m-     */[m
[31m-    public void setCurrentSquare(Square currentSquare) {[m
[31m-        this.currentSquare = currentSquare;[m
[31m-        setCurrentSquareIndex(SquareManager.getInstance().getBoardSquares().indexOf(currentSquare));[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the number of steps taken by the player.[m
[31m-     * @return The number of steps taken[m
[31m-     */[m
[31m-    public int getStepsTaken() {[m
[31m-        return stepsTaken;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the number of steps taken by the player.[m
[31m-     * @param stepsTaken The number of steps taken to set[m
[31m-     */[m
[31m-    public void setStepsTaken(int stepsTaken) {[m
[31m-        this.stepsTaken = stepsTaken;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the Player's starting cave.[m
[31m-     * @return starting Cave of the Player[m
[31m-     */[m
[31m-    public Cave getStartingCave() {[m
[31m-        return startingCave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the starting cave of the Player[m
[31m-     * @param startingCave of the player[m
[31m-     */[m
[31m-    public void setStartingCave(Cave startingCave) {[m
[31m-        this.startingCave = startingCave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the available Power Up[m
[31m-     * @return PowerUp available[m
[31m-     */[m
[31m-    public PowerUp getAvailablePowerUp() {[m
[31m-        return availablePowerUp;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for available Power Up[m
[31m-     * @param availablePowerUp of the Player[m
[31m-     */[m
[31m-    public void setAvailablePowerUp(PowerUp availablePowerUp) {[m
[31m-        this.availablePowerUp = availablePowerUp;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * If the Player has a Shield Power Up active[m
[31m-     * @return boolean true if the Player has a shield, false otherwise.[m
[31m-     */[m
[31m-    public boolean isHasShield() {[m
[31m-        return hasShield;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for hasShield[m
[31m-     * @param hasShield boolean to be set[m
[31m-     */[m
[31m-    public void setHasShield(boolean hasShield) {[m
[31m-        this.hasShield = hasShield;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for current Square Index[m
[31m-     * @return int of the Player's current Square Index[m
[31m-     */[m
[31m-    public int getCurrentSquareIndex() {[m
[31m-        return currentSquareIndex;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for current Square Index[m
[31m-     * @param currentSquareIndex to be set[m
[31m-     */[m
[31m-    public void setCurrentSquareIndex(int currentSquareIndex) {[m
[31m-        this.currentSquareIndex = currentSquareIndex;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Animal.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Animal.java[m
[1mdeleted file mode 100644[m
[1mindex 78515cf..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Animal.java[m	
[1m+++ /dev/null[m
[36m@@ -1,44 +0,0 @@[m
[31m-package com.example.fierydragons.models.animal_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This abstract class represents an animal.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public abstract class Animal {[m
[31m-    private String name; // The name of the animal[m
[31m-    private Image animalImage; // The image representing the animal[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the name of the animal.[m
[31m-     * @return The name of the animal.[m
[31m-     */[m
[31m-    public String getName() {[m
[31m-        return name;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the name of the animal.[m
[31m-     * @param name The name to set for the animal.[m
[31m-     */[m
[31m-    public void setName(String name) {[m
[31m-        this.name = name;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the image representing the animal.[m
[31m-     * @return The image representing the animal.[m
[31m-     */[m
[31m-    public Image getAnimalImage() {[m
[31m-        return animalImage;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the image representing the animal.[m
[31m-     * @param animalImage The image to set for the animal.[m
[31m-     */[m
[31m-    public void setAnimalImage(Image animalImage) {[m
[31m-        this.animalImage = animalImage;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/BabyDragon.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/BabyDragon.java[m
[1mdeleted file mode 100644[m
[1mindex 87fdef8..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/BabyDragon.java[m	
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-package com.example.fierydragons.models.animal_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a Baby Dragon.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class BabyDragon extends Animal {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a BabyDragon instance.[m
[31m-     */[m
[31m-    public BabyDragon() {[m
[31m-        // Set the name of the baby dragon[m
[31m-        this.setName("Baby Dragon");[m
[31m-[m
[31m-        // Set the image path for the baby dragon[m
[31m-        this.setAnimalImage(new Image(getClass().getResourceAsStream("/images/icons/baby_dragon.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/BackwardDragon.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/BackwardDragon.java[m
[1mdeleted file mode 100644[m
[1mindex 1ef0840..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/BackwardDragon.java[m	
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-package com.example.fierydragons.models.animal_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a BackwardDragon[m
[31m- * @author: Kevin[m
[31m- */[m
[31m-public class BackwardDragon extends Animal {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a BackwardDragon instance.[m
[31m-     */[m
[31m-    public BackwardDragon() {[m
[31m-        // Set the name of the BackwardDragon[m
[31m-        this.setName("Backward Dragon");[m
[31m-[m
[31m-        // Set the image path for the bat[m
[31m-        this.setAnimalImage(new Image(getClass().getResourceAsStream("/images/chit/backward.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Bat.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Bat.java[m
[1mdeleted file mode 100644[m
[1mindex 1ef8aed..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Bat.java[m	
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-package com.example.fierydragons.models.animal_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a Bat[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class Bat extends Animal {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a Bat instance.[m
[31m-     */[m
[31m-    public Bat() {[m
[31m-        // Set the name of the bat[m
[31m-        this.setName("Bat");[m
[31m-[m
[31m-        // Set the image path for the bat[m
[31m-        this.setAnimalImage(new Image(getClass().getResourceAsStream("/images/icons/bat.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/PirateDragon.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/PirateDragon.java[m
[1mdeleted file mode 100644[m
[1mindex ff85e56..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/PirateDragon.java[m	
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-package com.example.fierydragons.models.animal_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a Pirate Dragon.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class PirateDragon extends Animal {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a PirateDragon instance.[m
[31m-     */[m
[31m-    public PirateDragon() {[m
[31m-        // Set the name of the pirate dragon[m
[31m-        this.setName("Pirate Dragon");[m
[31m-[m
[31m-        // Set the image for the pirate dragon[m
[31m-        this.setAnimalImage(new Image(getClass().getResourceAsStream("/images/icons/pirate_dragon.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Salamander.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Salamander.java[m
[1mdeleted file mode 100644[m
[1mindex 9127535..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Salamander.java[m	
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-package com.example.fierydragons.models.animal_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a Salamander.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class Salamander extends Animal {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a Salamander instance.[m
[31m-     */[m
[31m-    public Salamander() {[m
[31m-        // Set the name of the salamander[m
[31m-        this.setName("Salamander");[m
[31m-[m
[31m-        // Set the image path for the salamander[m
[31m-        this.setAnimalImage(new Image(getClass().getResourceAsStream("/images/icons/salamander.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Spider.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Spider.java[m
[1mdeleted file mode 100644[m
[1mindex 626fead..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/animal_types/Spider.java[m	
[1m+++ /dev/null[m
[36m@@ -1,21 +0,0 @@[m
[31m-package com.example.fierydragons.models.animal_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a Spider.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class Spider extends Animal {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a Spider instance.[m
[31m-     */[m
[31m-    public Spider() {[m
[31m-        // Set the name of the spider[m
[31m-        this.setName("Spider");[m
[31m-[m
[31m-        // Set the image path for the spider[m
[31m-        this.setAnimalImage(new Image(getClass().getResourceAsStream("/images/icons/spider.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/cards/VolcanoCard.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/cards/VolcanoCard.java[m
[1mdeleted file mode 100644[m
[1mindex 7e04d6e..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/cards/VolcanoCard.java[m	
[1m+++ /dev/null[m
[36m@@ -1,136 +0,0 @@[m
[31m-package com.example.fierydragons.models.cards;[m
[31m-[m
[31m-import com.example.fierydragons.factories.SquareFactory;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import com.example.fierydragons.models.animal_types.Animal;[m
[31m-import com.example.fierydragons.services.SquareManager;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.List;[m
[31m-import java.util.Random;[m
[31m-[m
[31m-import org.json.JSONArray;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a volcano card used in the game. which holds squares[m
[31m- * @author: @jaden and @kevin implemented the creation of volcano cards[m
[31m- */[m
[31m-public class VolcanoCard {[m
[31m-    private List<Square> squares = new ArrayList<>(); // List of squares on the card[m
[31m-    private boolean isCutCard; // Indicates if this is a cut card[m
[31m-    private Square cutSquare; // The randomly chosen cut square[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor to initialise card squares with animal types and cut behavior.[m
[31m-     * @param animalTypes Array of animal types for the squares[m
[31m-     * @param isCutCard Indicates if this is a cut card[m
[31m-     */[m
[31m-    public VolcanoCard(Animal[] animalTypes, boolean isCutCard) {[m
[31m-        this.isCutCard = isCutCard;[m
[31m-[m
[31m-        // Create squares for the card[m
[31m-        for (Animal animalType : animalTypes) {[m
[31m-            Square newSquare = SquareFactory.createSquare(false, animalType);[m
[31m-            this.squares.add(newSquare);[m
[31m-            SquareManager.getInstance().addSquare(newSquare);[m
[31m-        }[m
[31m-[m
[31m-        // Initialise cut card behaviour if this is a cut card[m
[31m-        if (isCutCard) {[m
[31m-            initialiseCutCard();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    public VolcanoCard(List<Square> squares) {[m
[31m-        this.squares = squares;[m
[31m-[m
[31m-        for (Square square : squares) {[m
[31m-            SquareManager.getInstance().addSquare(square);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises a random square as a "Cut" square.[m
[31m-     */[m
[31m-    private void initialiseCutCard() {[m
[31m-        int randomIndex = new Random().nextInt(squares.size());[m
[31m-        Square randomSquare = squares.get(randomIndex);[m
[31m-        randomSquare.setSquareType("Cut");[m
[31m-        randomSquare.setCut(true);[m
[31m-        this.cutSquare = randomSquare;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Serialises this VolcanoCard to a JSON string.[m
[31m-     * @return JSON string representing this VolcanoCard.[m
[31m-     */[m
[31m-    public String toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        [m
[31m-        JSONArray squaresJson = new JSONArray();[m
[31m-        for (Square square : squares) {[m
[31m-            squaresJson.put(square.toJSON());[m
[31m-        }[m
[31m-        json.put("squares", squaresJson);[m
[31m-[m
[31m-        return json.toString();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Constructs a VolcanoCard from a JSON object.[m
[31m-     * @param json The JSON object representing a VolcanoCard.[m
[31m-     * @return A VolcanoCard instance.[m
[31m-     */[m
[31m-    public static VolcanoCard fromJSON(JSONObject json) {[m
[31m-        JSONArray squaresJson = json.getJSONArray("squares");[m
[31m-        List<Square> squares = new ArrayList<>();[m
[31m-[m
[31m-        for (int i = 0; i < squaresJson.length(); i++) {[m
[31m-            squares.add(Square.fromJSON(squaresJson.getJSONObject(i)));[m
[31m-        }[m
[31m-[m
[31m-        return new VolcanoCard(squares);[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Retrieves the list of squares on the card.[m
[31m-     * @return The list of squares on the card[m
[31m-     */[m
[31m-    public List<Square> getSquares() {[m
[31m-        return squares;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the list of squares on the card.[m
[31m-     * @param squares The list of squares to set[m
[31m-     */[m
[31m-    public void setSquares(List<Square> squares) {[m
[31m-        this.squares = squares;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Checks if the card is a cut card.[m
[31m-     * @return True if the card is a cut card, false otherwise[m
[31m-     */[m
[31m-    public boolean isCutCard() {[m
[31m-        return isCutCard;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets whether the card is a cut card or not.[m
[31m-     * @param isCutCard True if the card is a cut card, false otherwise[m
[31m-     */[m
[31m-    public void setCutCard(boolean isCutCard) {[m
[31m-        this.isCutCard = isCutCard;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Retrieves the randomly chosen cut square.[m
[31m-     * @return The randomly chosen cut square[m
[31m-     */[m
[31m-    public Square getCutSquare() {[m
[31m-        return cutSquare;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/BabyDragonCave.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/BabyDragonCave.java[m
[1mdeleted file mode 100644[m
[1mindex 400a1c8..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/BabyDragonCave.java[m	
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-package com.example.fierydragons.models.caves;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.BabyDragon;[m
[31m-import com.example.fierydragons.models.dragon_types.FireDragon;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a specific type of cave in the game for Baby Dragons.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class BabyDragonCave extends Cave {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a BabyDragonCave instance.[m
[31m-     */[m
[31m-    public BabyDragonCave() {[m
[31m-        // Set the cave's type[m
[31m-        this.setCaveType("Baby Dragon");[m
[31m-[m
[31m-        // Set the image for this cave[m
[31m-        this.setCaveImage(new Image(getClass().getResourceAsStream("/images/caves/babydragoncave.png")));[m
[31m-[m
[31m-        // Associate a Fire Dragon token with this cave[m
[31m-        this.setDragonToken(new FireDragon());[m
[31m-[m
[31m-        // Set the specific animal (Baby Dragon) type for this cave[m
[31m-        this.setAnimalType(new BabyDragon());[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/BatCave.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/BatCave.java[m
[1mdeleted file mode 100644[m
[1mindex 625bb0a..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/BatCave.java[m	
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-package com.example.fierydragons.models.caves;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.Bat;[m
[31m-import com.example.fierydragons.models.dragon_types.EarthDragon;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a specific type of cave in the game for Bats.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class BatCave extends Cave {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a BatCave instance.[m
[31m-     */[m
[31m-    public BatCave() {[m
[31m-        // Set the cave's type to "Bat"[m
[31m-        this.setCaveType("Bat");[m
[31m-[m
[31m-        // Set the image for this cave[m
[31m-        this.setCaveImage(new Image(getClass().getResourceAsStream("/images/caves/batcave.png")));[m
[31m-[m
[31m-        // Associate an Earth Dragon token with this cave[m
[31m-        this.setDragonToken(new EarthDragon());[m
[31m-[m
[31m-        // Set the specific animal type (Bat) for this cave[m
[31m-        this.setAnimalType(new Bat());[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/Cave.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/Cave.java[m
[1mdeleted file mode 100644[m
[1mindex a375fd4..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/Cave.java[m	
[1m+++ /dev/null[m
[36m@@ -1,140 +0,0 @@[m
[31m-package com.example.fierydragons.models.caves;[m
[31m-[m
[31m-import com.example.fierydragons.factories.CaveFactory;[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.animal_types.Animal;[m
[31m-import com.example.fierydragons.models.dragon_types.DragonType;[m
[31m-import com.example.fierydragons.services.DragonManager;[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import com.example.fierydragons.services.AnimalManager;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-/**[m
[31m- * This abstract class represents a cave in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public abstract class Cave {[m
[31m-    private String caveType; // Description of the cave type[m
[31m-    private Image caveImage; // Visual representation of the cave[m
[31m-    private DragonType dragonToken; // The dragon associated with this cave[m
[31m-    private Animal animalType; // The specific animal linked to this cave[m
[31m-    private Player playerOccupiedBy; // The player currently occupying the cave[m
[31m-[m
[31m-    // Method to convert Cave object to JSON[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        json.put("caveType", this.getCaveType());[m
[31m-        json.put("animalType", this.getAnimalType().getName()); // Assuming AnimalType has a getName() method[m
[31m-        json.put("dragonType", this.getDragonToken().getTypeName()); // Assuming DragonType has a getName() method[m
[31m-[m
[31m-        if (this.getPlayerOccupiedBy() != null) {[m
[31m-            json.put("playerOccupiedByName", this.getPlayerOccupiedBy().getPlayerName()); // Store player name[m
[31m-        } else {[m
[31m-            json.put("playerOccupiedByName", JSONObject.NULL);[m
[31m-        }[m
[31m-[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    // Method to create a Cave object from JSON[m
[31m-    public static Cave fromJSON(JSONObject json) {[m
[31m-        String caveType = json.getString("caveType");[m
[31m-        String animalName = json.getString("animalType");[m
[31m-        String dragonName = json.getString("dragonType");[m
[31m-        String playerName = json.optString("playerOccupiedByName");[m
[31m-[m
[31m-        Cave cave = CaveFactory.createCave(caveType); // Factory method to create a Cave based on Cave Type[m
[31m-        cave.setCaveType(caveType);[m
[31m-        cave.setAnimalType(AnimalManager.getInstance().getAnimalByName(animalName)); // Static method to find AnimalType by name[m
[31m-        cave.setDragonToken(DragonManager.getInstance().getDragonTypeByName(dragonName)); // Static method to find DragonType by name[m
[31m-[m
[31m-        if (playerName != null) {[m
[31m-            Player player = PlayerManager.getInstance().findPlayerByName(playerName);[m
[31m-            cave.setPlayerOccupiedBy(player);[m
[31m-        }[m
[31m-[m
[31m-        return cave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the cave image.[m
[31m-     * @return The visual representation of the cave[m
[31m-     */[m
[31m-    public Image getCaveImage() {[m
[31m-        return caveImage;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the cave image.[m
[31m-     * @param caveImage The image to set as the visual representation of the cave[m
[31m-     */[m
[31m-    public void setCaveImage(Image caveImage) {[m
[31m-        this.caveImage = caveImage;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the cave type description.[m
[31m-     * @return The description of the cave type[m
[31m-     */[m
[31m-    public String getCaveType() {[m
[31m-        return caveType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the cave type description.[m
[31m-     * @param caveType The description to set for the cave type[m
[31m-     */[m
[31m-    public void setCaveType(String caveType) {[m
[31m-        this.caveType = caveType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the dragon associated with the cave.[m
[31m-     * @return The dragon associated with the cave[m
[31m-     */[m
[31m-    public DragonType getDragonToken() {[m
[31m-        return dragonToken;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the dragon associated with the cave.[m
[31m-     * @param dragonToken The dragon to set as associated with the cave[m
[31m-     */[m
[31m-    public void setDragonToken(DragonType dragonToken) {[m
[31m-        this.dragonToken = dragonToken;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the animal type linked to the cave.[m
[31m-     * @return The specific animal linked to the cave[m
[31m-     */[m
[31m-    public Animal getAnimalType() {[m
[31m-        return animalType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the animal type linked to the cave.[m
[31m-     * @param animalType The animal to set as linked to the cave[m
[31m-     */[m
[31m-    public void setAnimalType(Animal animalType) {[m
[31m-        this.animalType = animalType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the player currently occupying the cave.[m
[31m-     * @return The player currently occupying the cave[m
[31m-     */[m
[31m-    public Player getPlayerOccupiedBy() {[m
[31m-        return playerOccupiedBy;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the player currently occupying the cave.[m
[31m-     * @param playerOccupiedBy The player to set as occupying the cave[m
[31m-     */[m
[31m-    public void setPlayerOccupiedBy(Player playerOccupiedBy) {[m
[31m-        this.playerOccupiedBy = playerOccupiedBy;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/SalamanderCave.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/SalamanderCave.java[m
[1mdeleted file mode 100644[m
[1mindex 64d00cc..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/SalamanderCave.java[m	
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-package com.example.fierydragons.models.caves;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.Salamander;[m
[31m-import com.example.fierydragons.models.dragon_types.IceDragon;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a specific type of cave in the game for Salamanders.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class SalamanderCave extends Cave {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a SalamanderCave instance.[m
[31m-     */[m
[31m-    public SalamanderCave() {[m
[31m-        // Set the cave's type to "Salamander"[m
[31m-        this.setCaveType("Salamander");[m
[31m-[m
[31m-        // Set the image for this cave[m
[31m-        this.setCaveImage(new Image(getClass().getResourceAsStream("/images/caves/salamandercave.png")));[m
[31m-[m
[31m-        // Associate an Ice Dragon token with this cave[m
[31m-        this.setDragonToken(new IceDragon());[m
[31m-[m
[31m-        // Set the specific animal type (Salamander) for this cave[m
[31m-        this.setAnimalType(new Salamander());[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/SpiderCave.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/SpiderCave.java[m
[1mdeleted file mode 100644[m
[1mindex 5c0252f..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/caves/SpiderCave.java[m	
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-package com.example.fierydragons.models.caves;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.Spider;[m
[31m-import com.example.fierydragons.models.dragon_types.StormDragon;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * This class represents a specific type of cave in the game for Spiders.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class SpiderCave extends Cave {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for creating a SpiderCave instance.[m
[31m-     */[m
[31m-    public SpiderCave() {[m
[31m-        // Set the cave's type to "Spider"[m
[31m-        this.setCaveType("Spider");[m
[31m-[m
[31m-        // Set the image for this cave[m
[31m-        this.setCaveImage(new Image(getClass().getResourceAsStream("/images/caves/spidercave.png")));[m
[31m-[m
[31m-        // Associate a Storm Dragon token with this cave[m
[31m-        this.setDragonToken(new StormDragon());[m
[31m-[m
[31m-        // Set the specific animal type (Spider) for this cave[m
[31m-        this.setAnimalType(new Spider());[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BabyDragonChit.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BabyDragonChit.java[m
[1mdeleted file mode 100644[m
[1mindex 9a7ca48..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BabyDragonChit.java[m	
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-package com.example.fierydragons.models.chits;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.BabyDragon;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * BabyDragonChit class extends Chit to specifically handle chits for Baby Dragons.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class BabyDragonChit extends Chit {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the BabyDragonChit with a specific count.[m
[31m-     * @param count The initial count for the chit[m
[31m-     */[m
[31m-    public BabyDragonChit(int count) {[m
[31m-        super(count); // Calls the superclass constructor to set the count.[m
[31m-        this.setAnimalType(new BabyDragon()); // Sets the animal type to Baby Dragon.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Overrides the getImage method to provide the specific image for Baby Dragon chits.[m
[31m-     * @return The image associated with the Baby Dragon chit[m
[31m-     */[m
[31m-    @Override[m
[31m-    public Image getImage() {[m
[31m-        String imagePath = "/images/chit/" + getCount() + "xBabyDragon.png"; // Constructs the image path.[m
[31m-        return new Image(getClass().getResourceAsStream(imagePath)); // Returns the image from the path.[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BackwardChit.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BackwardChit.java[m
[1mdeleted file mode 100644[m
[1mindex 38429ba..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BackwardChit.java[m	
[1m+++ /dev/null[m
[36m@@ -1,98 +0,0 @@[m
[31m-package com.example.fierydragons.models.chits;[m
[31m-[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.animal_types.BackwardDragon;[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import com.example.fierydragons.services.ChitManager;[m
[31m-import com.example.fierydragons.services.GameManager;[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import com.example.fierydragons.services.SquareManager;[m
[31m-import javafx.animation.KeyFrame;[m
[31m-import javafx.animation.Timeline;[m
[31m-import javafx.scene.image.Image;[m
[31m-import javafx.util.Duration;[m
[31m-[m
[31m-/**[m
[31m- * BackwardChit class extends Chit and handles Backward chits in the game.[m
[31m- */[m
[31m-public class BackwardChit extends Chit {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the BackwardChit with a specific count.[m
[31m-     * @param count The initial count for the chit[m
[31m-     */[m
[31m-    public BackwardChit(int count) {[m
[31m-        super(count); // Calls the superclass constructor to set the count.[m
[31m-        this.setAnimalType(new BackwardDragon()); // Sets the animal type to BackwardDragon.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Overrides the getImage method to provide the specific image for Backward chits.[m
[31m-     * @return The image associated with the Backward chit[m
[31m-     */[m
[31m-    @Override[m
[31m-    public Image getImage() {[m
[31m-        String imagePath = "/images/chit/backward.png"; // Constructs the image path for Backward chits.[m
[31m-        return new Image(getClass().getResourceAsStream(imagePath)); // Returns the image from the path.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Flipped chit does not match the current Square.[m
[31m-     * If the current player doesn't have a shield, their token is moved to an unoccupied cave.[m
[31m-     * If the current player has a shield, the shield is removed.[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void handleMismatch() {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-[m
[31m-        if (!currentPlayer.isHasShield()) {[m
[31m-            moveTokenToUnoccupiedCave();[m
[31m-        } else {[m
[31m-            currentPlayer.setHasShield(false);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Moves the current player's token to an unoccupied cave by moving backward on the board.[m
[31m-     */[m
[31m-    private void moveTokenToUnoccupiedCave() {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-        Square currentSquare = currentPlayer.getCurrentSquare();[m
[31m-[m
[31m-        int movementCounter = SquareManager.getInstance().getBoardSquares().indexOf(currentSquare);[m
[31m-        // Get the total number of squares on the board[m
[31m-        int totalSquares = SquareManager.getInstance().getBoardSquares().size();[m
[31m-[m
[31m-        // Adjust the loop to use Math.floorMod for backward movement[m
[31m-        for (int step = 0; step < totalSquares; step++) {[m
[31m-            // Calculate the index to check by wrapping around the board[m
[31m-            int indexToCheck = Math.floorMod(movementCounter - step, totalSquares);[m
[31m-            Square destinationSquare = SquareManager.getInstance().getBoardSquares().get(indexToCheck);[m
[31m-            Cave cave = destinationSquare.getCave();[m
[31m-[m
[31m-            if (cave != null && cave.getPlayerOccupiedBy() == null) {[m
[31m-                int steps = movementCounter - indexToCheck;[m
[31m-                if (steps < 0) {[m
[31m-                    steps += totalSquares; // Adjust steps to be positive[m
[31m-                }[m
[31m-                PlayerManager.getInstance().movePlayer(-steps);[m
[31m-[m
[31m-                // Move the Player into their cave after a delay[m
[31m-                Timeline timeline = new Timeline(new KeyFrame([m
[31m-                        Duration.millis(222 * (steps + 1)),[m
[31m-                        ae -> {[m
[31m-                            PlayerManager.getInstance().moveTokenInCave(currentPlayer);[m
[31m-                            currentPlayer.setCurrentCave(cave);[m
[31m-                            cave.setPlayerOccupiedBy(currentPlayer);[m
[31m-                            destinationSquare.setCurrentPlayer(null);[m
[31m-                            ChitManager.getInstance().notifyUpdateGameInfo();[m
[31m-                        }[m
[31m-                ));[m
[31m-                timeline.play();[m
[31m-[m
[31m-                break;[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BatChit.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BatChit.java[m
[1mdeleted file mode 100644[m
[1mindex 6af9ff3..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/BatChit.java[m	
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-package com.example.fierydragons.models.chits;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.Bat;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * BatChit class extends Chit to specifically handle chits for Bats.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class BatChit extends Chit {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the BatChit with a specific count.[m
[31m-     * @param count The initial count for the chit[m
[31m-     */[m
[31m-    public BatChit(int count) {[m
[31m-        super(count); // Calls the superclass constructor to set the count.[m
[31m-        this.setAnimalType(new Bat()); // Sets the animal type to Bat.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Overrides the getImage method to provide the specific image for Bat chits.[m
[31m-     * @return The image associated with the Bat chit[m
[31m-     */[m
[31m-    @Override[m
[31m-    public Image getImage() {[m
[31m-        String imagePath = "/images/chit/" + getCount() + "xBat.png"; // Constructs the image path for Bat chits.[m
[31m-        return new Image(getClass().getResourceAsStream(imagePath)); // Returns the image from the path.[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/Chit.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/Chit.java[m
[1mdeleted file mode 100644[m
[1mindex ef3780b..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/Chit.java[m	
[1m+++ /dev/null[m
[36m@@ -1,103 +0,0 @@[m
[31m-package com.example.fierydragons.models.chits;[m
[31m-[m
[31m-import com.example.fierydragons.ChitAction;[m
[31m-import com.example.fierydragons.models.animal_types.Animal;[m
[31m-import com.example.fierydragons.services.ChitManager;[m
[31m-import com.example.fierydragons.services.GameManager;[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import javafx.scene.image.Image;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-/**[m
[31m- * Abstract class Chit defines the core properties of Chit Cards used in Fiery Dragons.[m
[31m- * @author: Jaden and Kevin[m
[31m- */[m
[31m-public abstract class Chit implements ChitAction {[m
[31m-    private final int count; // The count of how many times the chit has been used[m
[31m-    private Animal animalType; // The type of animal associated with the chit[m
[31m-    private boolean isFlipped = false;[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor to initialise the chit with a count for the number of animals on the chit.[m
[31m-     * @param count The initial count for the chit[m
[31m-     */[m
[31m-    public Chit(int count) {[m
[31m-        this.count = count;[m
[31m-    }[m
[31m-[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        json.put("count", this.getCount());[m
[31m-        json.put("animalType", this.getAnimalType().getName());[m
[31m-        json.put("isFlipped", this.isFlipped());[m
[31m-[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void move(boolean playerInCave) {[m
[31m-        int stepsToMove = getCount();[m
[31m-[m
[31m-        if (playerInCave) {[m
[31m-            stepsToMove -= 1;[m
[31m-        }[m
[31m-[m
[31m-        PlayerManager.getInstance().movePlayer(stepsToMove);[m
[31m-        ChitManager.getInstance().notifyUpdateGameInfo();[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void handleMismatch() {[m
[31m-        GameManager.getInstance().endTurn();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the count of the chit.[m
[31m-     * @return The count of the chit[m
[31m-     */[m
[31m-    public int getCount() {[m
[31m-        return count;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the type of animal associated with the chit.[m
[31m-     * @return The type of animal associated with the chit[m
[31m-     */[m
[31m-    public Animal getAnimalType() {[m
[31m-        return animalType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the type of animal associated with the chit.[m
[31m-     * @param animalType The type of animal to associate with the chit[m
[31m-     */[m
[31m-    public void setAnimalType(Animal animalType) {[m
[31m-        this.animalType = animalType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * If a Chit is flipped or not[m
[31m-     * @return boolean True if Chit is flipped, false otherwise[m
[31m-     */[m
[31m-    public boolean isFlipped() {[m
[31m-        return isFlipped;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for isFlipped attribute[m
[31m-     * @param flipped boolean to be set[m
[31m-     */[m
[31m-    public void setFlipped(boolean flipped) {[m
[31m-        isFlipped = flipped;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Abstract method to retrieve the image associated with the chit.[m
[31m-     * Subclasses must implement this method to return the appropriate image.[m
[31m-     * @return The image associated with the chit[m
[31m-     */[m
[31m-    public abstract Image getImage();[m
[31m-}[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/PirateChit.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/PirateChit.java[m
[1mdeleted file mode 100644[m
[1mindex bd26e2f..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/PirateChit.java[m	
[1m+++ /dev/null[m
[36m@@ -1,50 +0,0 @@[m
[31m-package com.example.fierydragons.models.chits;[m
[31m-[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.animal_types.PirateDragon;[m
[31m-import com.example.fierydragons.services.ChitManager;[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * PirateChit class extends Chit and is madeA for Pirate Dragon chits in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class PirateChit extends Chit {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the PirateChit with a specific count.[m
[31m-     * @param count The initial count for the chit[m
[31m-     */[m
[31m-    public PirateChit(int count) {[m
[31m-        super(count); // Calls the superclass constructor to set the count.[m
[31m-        this.setAnimalType(new PirateDragon()); // Sets the animal type to Pirate Dragon.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Overrides the getImage method to provide the specific image for Pirate Dragon chits.[m
[31m-     * @return The image associated with the Pirate Dragon chit[m
[31m-     */[m
[31m-    @Override[m
[31m-    public Image getImage() {[m
[31m-        String imagePath = "/images/chit/" + getCount() + "xPirate.png"; // Constructs the image path for Pirate chits.[m
[31m-        return new Image(getClass().getResourceAsStream(imagePath)); // Returns the image from the path.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Flipped chit does not match the current Square.[m
[31m-     * If the current player doesn't have a shield, their token is moved backward by the count of the chit.[m
[31m-     * If the current player has a shield, the shield is removed.[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void handleMismatch() {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-[m
[31m-        if (!currentPlayer.isHasShield()) {[m
[31m-            PlayerManager.getInstance().movePlayer(-getCount()); // Move player backwards for Pirate Dragon[m
[31m-            ChitManager.getInstance().notifyUpdateGameInfo();[m
[31m-        } else {[m
[31m-            currentPlayer.setHasShield(false);[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/SalamanderChit.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/SalamanderChit.java[m
[1mdeleted file mode 100644[m
[1mindex d31e230..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/SalamanderChit.java[m	
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-package com.example.fierydragons.models.chits;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.Salamander;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * SalamanderChit class extends Chit and deals with Salamander chits in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class SalamanderChit extends Chit {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the SalamanderChit with a specific count.[m
[31m-     * @param count The initial count for the chit[m
[31m-     */[m
[31m-    public SalamanderChit(int count) {[m
[31m-        super(count); // Calls the superclass constructor to set the count.[m
[31m-        this.setAnimalType(new Salamander()); // Sets the animal type to Salamander.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Overrides the getImage method to provide the specific image for Salamander chits.[m
[31m-     * @return The image associated with the Salamander chit[m
[31m-     */[m
[31m-    @Override[m
[31m-    public Image getImage() {[m
[31m-        String imagePath = "/images/chit/" + getCount() + "xSalamander.png"; // Constructs the image path for Salamander chits.[m
[31m-        return new Image(getClass().getResourceAsStream(imagePath)); // Returns the image from the path.[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/SpiderChit.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/SpiderChit.java[m
[1mdeleted file mode 100644[m
[1mindex 3fd372a..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/chits/SpiderChit.java[m	
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-package com.example.fierydragons.models.chits;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.Spider;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * SpiderChit class extends Chit and is handles Spider chits in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class SpiderChit extends Chit {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the SpiderChit with a specific count.[m
[31m-     * @param count The initial count for the chit[m
[31m-     */[m
[31m-    public SpiderChit(int count) {[m
[31m-        super(count); // Calls the superclass constructor to set the count.[m
[31m-        this.setAnimalType(new Spider()); // Sets the animal type to Spider.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Overrides the getImage method to provide the specific image for Spider chits.[m
[31m-     * @return The image associated with the Spider chit[m
[31m-     */[m
[31m-    @Override[m
[31m-    public Image getImage() {[m
[31m-        String imagePath = "/images/chit/" + getCount() + "xSpider.png"; // Constructs the image path for Spider chits.[m
[31m-        return new Image(getClass().getResourceAsStream(imagePath)); // Returns the image from the path.[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/DragonType.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/DragonType.java[m
[1mdeleted file mode 100644[m
[1mindex cbe6ed5..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/DragonType.java[m	
[1m+++ /dev/null[m
[36m@@ -1,52 +0,0 @@[m
[31m-package com.example.fierydragons.models.dragon_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * Abstract class DragonType serves as a base for different dragon types in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public abstract class DragonType {[m
[31m-    private String typeName; // The name of the dragon type[m
[31m-    private Image dragonImage; // Visual representation of the dragon[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor to initialise the dragon type with a name.[m
[31m-     * @param typeName The name of the dragon type[m
[31m-     */[m
[31m-    public DragonType(String typeName) {[m
[31m-        this.typeName = typeName;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the name of the dragon type.[m
[31m-     * @return The name of the dragon type[m
[31m-     */[m
[31m-    public String getTypeName() {[m
[31m-        return typeName;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the name of the dragon type.[m
[31m-     * @param typeName The name of the dragon type to set[m
[31m-     */[m
[31m-    public void setTypeName(String typeName) {[m
[31m-        this.typeName = typeName;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Getter for the visual representation of the dragon.[m
[31m-     * @return The visual representation of the dragon[m
[31m-     */[m
[31m-    public Image getDragonImage() {[m
[31m-        return dragonImage;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Setter for the visual representation of the dragon.[m
[31m-     * @param dragonImage The image to set as the visual representation of the dragon[m
[31m-     */[m
[31m-    public void setDragonImage(Image dragonImage) {[m
[31m-        this.dragonImage = dragonImage;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/EarthDragon.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/EarthDragon.java[m
[1mdeleted file mode 100644[m
[1mindex 5c8b38b..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/EarthDragon.java[m	
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-package com.example.fierydragons.models.dragon_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * EarthDragon class extends DragonType, representing an Earth Dragon in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class EarthDragon extends DragonType {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the EarthDragon with the name "Earth" and sets its image.[m
[31m-     */[m
[31m-    public EarthDragon() {[m
[31m-        super("Earth"); // Initialises the dragon type as "Earth".[m
[31m-        // Sets the dragon image using a file located in the resources.[m
[31m-        this.setDragonImage(new Image(getClass().getResourceAsStream("/images/tokens/earth_dragon.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/FireDragon.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/FireDragon.java[m
[1mdeleted file mode 100644[m
[1mindex 6b732c3..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/FireDragon.java[m	
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-package com.example.fierydragons.models.dragon_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * FireDragon class extends DragonType, representing a Fire Dragon in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class FireDragon extends DragonType {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the FireDragon with the name "Fire" and sets its image.[m
[31m-     */[m
[31m-    public FireDragon() {[m
[31m-        super("Fire"); // Initialises the dragon type as "Fire".[m
[31m-        // Sets the dragon image using a file located in the resources.[m
[31m-        this.setDragonImage(new Image(getClass().getResourceAsStream("/images/tokens/fire_dragon.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/IceDragon.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/IceDragon.java[m
[1mdeleted file mode 100644[m
[1mindex ffaea76..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/IceDragon.java[m	
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-package com.example.fierydragons.models.dragon_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * IceDragon class extends DragonType, representing an Ice Dragon in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class IceDragon extends DragonType {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the IceDragon with the name "Ice" and sets its image.[m
[31m-     */[m
[31m-    public IceDragon() {[m
[31m-        super("Ice"); // Initialises the dragon type as "Ice".[m
[31m-        // Sets the dragon image using a file located in the resources.[m
[31m-        this.setDragonImage(new Image(getClass().getResourceAsStream("/images/tokens/ice_dragon.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/StormDragon.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/StormDragon.java[m
[1mdeleted file mode 100644[m
[1mindex 1737d37..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/dragon_types/StormDragon.java[m	
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-package com.example.fierydragons.models.dragon_types;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * StormDragon class extends DragonType, representing a Storm Dragon in the game.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class StormDragon extends DragonType {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor initialises the StormDragon with the name "Storm" and sets its image.[m
[31m-     */[m
[31m-    public StormDragon() {[m
[31m-        super("Storm"); // Initialises the dragon type as "Storm".[m
[31m-        // Sets the dragon image using a file located in the resources.[m
[31m-        this.setDragonImage(new Image(getClass().getResourceAsStream("/images/tokens/storm_dragon.png")));[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/PowerUp.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/PowerUp.java[m
[1mdeleted file mode 100644[m
[1mindex d01bf82..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/PowerUp.java[m	
[1m+++ /dev/null[m
[36m@@ -1,84 +0,0 @@[m
[31m-package com.example.fierydragons.models.power_ups;[m
[31m-[m
[31m-import javafx.scene.image.Image;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-/**[m
[31m- * The abstract PowerUp class represents a power-up in the game.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public abstract class PowerUp {[m
[31m-[m
[31m-    private String name; // name of the PowerUp[m
[31m-    private Image powerUpImage; // image of the power-up[m
[31m-[m
[31m-    /**[m
[31m-     * Abstract method to activate the power-up.[m
[31m-     * Subclasses must implement this method to provide the specific behavior of the power-up.[m
[31m-     */[m
[31m-    public abstract void activatePowerUp();[m
[31m-[m
[31m-    /**[m
[31m-     * Abstract method to deactivate the power-up.[m
[31m-     * Subclasses must implement this method to provide the specific behavior of the power-up.[m
[31m-     */[m
[31m-    public abstract void deactivatePowerUp();[m
[31m-[m
[31m-    /**[m
[31m-     * Converts the PowerUp object to a JSONObject representation.[m
[31m-     * @return A JSONObject representing the PowerUp object.[m
[31m-     */[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        json.put("type", this.getName()); // Identify the specific type of PowerUp[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Creates a PowerUp object from a JSONObject.[m
[31m-     * @param json The JSONObject containing the power-up data.[m
[31m-     * @return A PowerUp object of the specified type.[m
[31m-     * @throws IllegalArgumentException If the power-up type is unknown.[m
[31m-     */[m
[31m-    public static PowerUp fromJSON(JSONObject json) {[m
[31m-        String type = json.getString("type");[m
[31m-        return switch (type) {[m
[31m-            case "Shield" -> new Shield();[m
[31m-            case "Skip Turn" -> new SkipTurn();[m
[31m-            case "Swap Player" -> new SwapPlayer();[m
[31m-            default -> throw new IllegalArgumentException("Unknown PowerUp type");[m
[31m-        };[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the name of the power-up.[m
[31m-     * @return The name of the power-up.[m
[31m-     */[m
[31m-    public String getName() {[m
[31m-        return name;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the name of the power-up.[m
[31m-     * @param name The name of the power-up.[m
[31m-     */[m
[31m-    public void setName(String name) {[m
[31m-        this.name = name;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the image of the power-up.[m
[31m-     * @return The image of the power-up.[m
[31m-     */[m
[31m-    public Image getPowerUpImage() {[m
[31m-        return powerUpImage;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the image representation of the power-up.[m
[31m-     * @param powerUpImage The image representation of the power-up.[m
[31m-     */[m
[31m-    public void setPowerUpImage(Image powerUpImage) {[m
[31m-        this.powerUpImage = powerUpImage;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/Shield.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/Shield.java[m
[1mdeleted file mode 100644[m
[1mindex 30e45e6..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/Shield.java[m	
[1m+++ /dev/null[m
[36m@@ -1,37 +0,0 @@[m
[31m-package com.example.fierydragons.models.power_ups;[m
[31m-[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-/**[m
[31m- * The Shield class represents a power-up that provides a shield to the current player.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class Shield extends PowerUp {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for the Shield class.[m
[31m-     * Initialises the name and sets the image for the shield power-up.[m
[31m-     */[m
[31m-    public Shield() {[m
[31m-        this.setName("Shield");[m
[31m-        this.setPowerUpImage(new Image(getClass().getResourceAsStream("/images/icons/shield.png")));[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Activates the shield power-up for the current player.[m
[31m-     * Sets the hasShield flag to true for the current player.[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void activatePowerUp() {[m
[31m-        PlayerManager.getInstance().getCurrentPlayer().setHasShield(true);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Deactivates the shield power-up[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void deactivatePowerUp() {[m
[31m-[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/SkipTurn.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/SkipTurn.java[m
[1mdeleted file mode 100644[m
[1mindex 7219314..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/SkipTurn.java[m	
[1m+++ /dev/null[m
[36m@@ -1,41 +0,0 @@[m
[31m-package com.example.fierydragons.models.power_ups;[m
[31m-[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-import java.util.LinkedList;[m
[31m-[m
[31m-/**[m
[31m- * The SkipTurn class extends the PowerUp class and represents the Skip Turn power-up.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class SkipTurn extends PowerUp {[m
[31m-[m
[31m-    private LinkedList<Player> playerOrderList;[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for the SkipTurn class.[m
[31m-     */[m
[31m-    public SkipTurn() {[m
[31m-        this.setName("Skip Turn");[m
[31m-        this.setPowerUpImage(new Image(getClass().getResourceAsStream("/images/icons/skip_turn.png")));[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Activate SkipTurn PowerUp[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void activatePowerUp() {[m
[31m-        playerOrderList = PlayerManager.getInstance().getPlayers();[m
[31m-        PlayerManager.getInstance().skipNextPlayer();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Dectivate SkipTurn PowerUp[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void deactivatePowerUp() {[m
[31m-        PlayerManager.getInstance().setPlayers(playerOrderList);[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/SwapPlayer.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/SwapPlayer.java[m
[1mdeleted file mode 100644[m
[1mindex af788ea..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/power_ups/SwapPlayer.java[m	
[1m+++ /dev/null[m
[36m@@ -1,117 +0,0 @@[m
[31m-package com.example.fierydragons.models.power_ups;[m
[31m-[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import com.example.fierydragons.services.ChitManager;[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import com.example.fierydragons.services.SquareManager;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-import java.security.SecureRandom;[m
[31m-import java.util.LinkedList;[m
[31m-import java.util.stream.Collectors;[m
[31m-[m
[31m-/**[m
[31m- * The SwapPlayer class extends the PowerUp class and represents the Swap Player power-up.[m
[31m- * It allows the current player to swap positions with another player on the board.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class SwapPlayer extends PowerUp {[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor for the SwapPlayer class.[m
[31m-     * Initialises the name and sets the image for the Swap Player power-up.[m
[31m-     */[m
[31m-    public SwapPlayer() {[m
[31m-        this.setName("Swap Player");[m
[31m-        this.setPowerUpImage(new Image(getClass().getResourceAsStream("/images/icons/swap_player.png")));[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Activates the Swap Player power-up.[m
[31m-     * Swaps the positions of the current player and a randomly selected other player on the board.[m
[31m-     */[m
[31m-    public void activatePowerUp() {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-        LinkedList<Player> players = PlayerManager.getInstance().getPlayers();[m
[31m-[m
[31m-        // Filter out other players who are not the current player and are either not on a cave square,[m
[31m-        // or are on a cave square but the cave is not currently occupied by any player.[m
[31m-        LinkedList<Player> otherPlayers = players.stream()[m
[31m-                .filter(player -> !player.equals(currentPlayer)) // Exclude the current player[m
[31m-                .filter(player -> {[m
[31m-                    Square currentSquare = player.getCurrentSquare();[m
[31m-                    Cave cave = currentSquare.getCave();[m
[31m-                    return (cave == null || cave.getPlayerOccupiedBy() == null); // Include players not on cave squares or on cave squares not occupied by any player[m
[31m-                })[m
[31m-                .collect(Collectors.toCollection(LinkedList::new));[m
[31m-[m
[31m-        if (!otherPlayers.isEmpty()) {[m
[31m-            SecureRandom random = new SecureRandom();[m
[31m-            long seed = System.nanoTime(); // Use nanoTime() as seed for randomness[m
[31m-            random.setSeed(seed);[m
[31m-[m
[31m-            // Get a random player from the filtered list[m
[31m-            Player randomPlayer = otherPlayers.get(random.nextInt(otherPlayers.size()));[m
[31m-[m
[31m-            // swap player token positions[m
[31m-            PlayerManager.getInstance().swapTokenPositions(currentPlayer, randomPlayer);[m
[31m-[m
[31m-            // Perform the swap logic[m
[31m-            Square currentPlayerSquare = currentPlayer.getCurrentSquare();[m
[31m-            Square randomPlayerSquare = randomPlayer.getCurrentSquare();[m
[31m-[m
[31m-            // Swap both player's current square they are standing on[m
[31m-            currentPlayer.setCurrentSquare(randomPlayerSquare);[m
[31m-            randomPlayer.setCurrentSquare(currentPlayerSquare);[m
[31m-[m
[31m-            // Swap both square's currentPlayer attribute[m
[31m-            currentPlayerSquare.setCurrentPlayer(randomPlayer);[m
[31m-            randomPlayerSquare.setCurrentPlayer(currentPlayer);[m
[31m-[m
[31m-            ChitManager.getInstance().notifyUpdateGameInfo();[m
[31m-[m
[31m-            // update steps required to win the game (may require more or less steps now)[m
[31m-            int currentPlayerSquareIndex = SquareManager.getInstance().getBoardSquares().indexOf(currentPlayerSquare);[m
[31m-            int randomPlayerSquareIndex = SquareManager.getInstance().getBoardSquares().indexOf(randomPlayerSquare);[m
[31m-[m
[31m-            Cave currentPlayerStartingCave = currentPlayer.getStartingCave();[m
[31m-            Cave randomPlayerStartingCave = randomPlayer.getStartingCave();[m
[31m-[m
[31m-            int currentPlayerStartingCaveSquareIndex = 0;[m
[31m-            int randomPlayerStartingCaveSquareIndex = 0;[m
[31m-[m
[31m-            for (Square square : SquareManager.getInstance().getBoardSquares()) {[m
[31m-                if (square.getCave() == currentPlayerStartingCave) {[m
[31m-                    currentPlayerStartingCaveSquareIndex = SquareManager.getInstance().getBoardSquares().indexOf(square);[m
[31m-                } else if (square.getCave() == randomPlayerStartingCave) {[m
[31m-                    randomPlayerStartingCaveSquareIndex = SquareManager.getInstance().getBoardSquares().indexOf(square);[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            // calculations for steps taken[m
[31m-            currentPlayer.setStepsTaken(calculateNewStepsTaken(currentPlayerStartingCaveSquareIndex, randomPlayerSquareIndex));[m
[31m-            randomPlayer.setStepsTaken(calculateNewStepsTaken(randomPlayerStartingCaveSquareIndex, currentPlayerSquareIndex));[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Deactivate Swap Player power up[m
[31m-     */[m
[31m-    @Override[m
[31m-    public void deactivatePowerUp() {[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Calculates the new number of steps taken by a player after swapping positions.[m
[31m-     * @param oldIndex The index of the player's previous position on the board.[m
[31m-     * @param newIndex The index of the player's new position on the board.[m
[31m-     * @return The number of steps taken by the player after the position swap.[m
[31m-     */[m
[31m-    private int calculateNewStepsTaken(int oldIndex, int newIndex) {[m
[31m-        int totalSquares = SquareManager.getInstance().getTotalSquares();[m
[31m-        return Math.floorMod((newIndex - oldIndex), totalSquares);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/squares/Square.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/squares/Square.java[m
[1mdeleted file mode 100644[m
[1mindex 4944595..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/models/squares/Square.java[m	
[1m+++ /dev/null[m
[36m@@ -1,180 +0,0 @@[m
[31m-package com.example.fierydragons.models.squares;[m
[31m-[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.animal_types.Animal;[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.power_ups.PowerUp;[m
[31m-import com.example.fierydragons.services.AnimalManager;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-/**[m
[31m- * Square representing individual spaces within the game board and make up VolcanoCards.[m
[31m- * @author: Jaden and Kevin.[m
[31m- */[m
[31m-public class Square {[m
[31m-    private String squareType; // Type of square.[m
[31m-    private Animal animalType; // The type of animal associated with this square.[m
[31m-    private Player currentPlayer; // The player currently occupying this square.[m
[31m-    private Cave cave; // The cave associated with this square, if any.[m
[31m-    private boolean isCut; // Indicates if this square has a "cut".[m
[31m-    private PowerUp powerUp; // Power Up on a Square[m
[31m-[m
[31m-    /**[m
[31m-     * Constructor that initialises a square with an animal type and cut status.[m
[31m-     *[m
[31m-     * @param animalType The type of animal associated with the square.[m
[31m-     * @param isCut      Indicates if the square has a "cut".[m
[31m-     */[m
[31m-    public Square(Animal animalType, boolean isCut) {[m
[31m-        this.squareType = isCut ? "Cut" : "Normal"; // Determine square type based on cut status.[m
[31m-        this.animalType = animalType;[m
[31m-        this.isCut = isCut;[m
[31m-        this.powerUp = null;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Converts the Square object to a JSONObject representation.[m
[31m-     * @return A JSONObject representing the Square object.[m
[31m-     */[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        json.put("squareType", this.getSquareType());[m
[31m-        json.put("isCut", this.isCut());[m
[31m-        json.put("animalType", this.getAnimalType().getName());[m
[31m-[m
[31m-        if (this.getCave() != null) {[m
[31m-            json.put("cave", this.getCave().toJSON());[m
[31m-        } else {[m
[31m-            json.put("cave", JSONObject.NULL);[m
[31m-        }[m
[31m-[m
[31m-        if (this.getPowerUp() != null) {[m
[31m-            json.put("powerUp", this.getPowerUp().toJSON());[m
[31m-        } else {[m
[31m-            json.put("powerUp", JSONObject.NULL);[m
[31m-        }[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Creates a Square object from a JSONObject.[m
[31m-     * @param json The JSONObject containing the square data.[m
[31m-     * @return A Square object created from the JSONObject.[m
[31m-     */[m
[31m-    public static Square fromJSON(JSONObject json) {[m
[31m-        String squareType = json.getString("squareType");[m
[31m-        boolean isCut = json.getBoolean("isCut");[m
[31m-        Animal animalType = AnimalManager.getInstance().getAnimalByName(json.getString("animalType"));[m
[31m-[m
[31m-        Square square = new Square(animalType, isCut);[m
[31m-        square.setSquareType(squareType);[m
[31m-[m
[31m-        if (!json.isNull("cave")) {[m
[31m-            Cave cave = Cave.fromJSON(json.getJSONObject("cave"));[m
[31m-            square.setCave(cave);[m
[31m-        }[m
[31m-[m
[31m-        if (!json.isNull("powerUp")) {[m
[31m-            PowerUp powerUp = PowerUp.fromJSON(json.getJSONObject("powerUp"));[m
[31m-            square.setPowerUp(powerUp);[m
[31m-        }[m
[31m-[m
[31m-        return square;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the type of the square.[m
[31m-     * @return The type of the square.[m
[31m-     */[m
[31m-    public String getSquareType() {[m
[31m-        return squareType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the type of the square.[m
[31m-     * @param squareType The type to set.[m
[31m-     */[m
[31m-    public void setSquareType(String squareType) {[m
[31m-        this.squareType = squareType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the type of animal associated with the square.[m
[31m-     * @return The type of animal.[m
[31m-     */[m
[31m-    public Animal getAnimalType() {[m
[31m-        return animalType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the type of animal associated with the square.[m
[31m-     * @param animalType The type of animal to set.[m
[31m-     */[m
[31m-    public void setAnimalType(Animal animalType) {[m
[31m-        this.animalType = animalType;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the player currently occupying the square.[m
[31m-     * @return The current player.[m
[31m-     */[m
[31m-    public Player getCurrentPlayer() {[m
[31m-        return currentPlayer;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the player currently occupying the square.[m
[31m-     * @param currentPlayer The player to set.[m
[31m-     */[m
[31m-    public void setCurrentPlayer(Player currentPlayer) {[m
[31m-        this.currentPlayer = currentPlayer;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the cave associated with the square.[m
[31m-     * @return The associated cave.[m
[31m-     */[m
[31m-    public Cave getCave() {[m
[31m-        return cave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the cave associated with the square.[m
[31m-     * @param cave The cave to set.[m
[31m-     */[m
[31m-    public void setCave(Cave cave) {[m
[31m-        this.cave = cave;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Checks if the square has a cut or not.[m
[31m-     * @return True if the square is "cut", otherwise false.[m
[31m-     */[m
[31m-    public boolean isCut() {[m
[31m-        return isCut;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the cut status of the square.[m
[31m-     * @param isCut The cut status to set.[m
[31m-     */[m
[31m-    public void setCut(boolean isCut) {[m
[31m-        this.isCut = isCut;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the power-up associated with the square.[m
[31m-     * @return The power-up associated with the square.[m
[31m-     */[m
[31m-    public PowerUp getPowerUp() {[m
[31m-        return powerUp;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the power-up associated with the square.[m
[31m-     * @param powerUp The power-up to set.[m
[31m-     */[m
[31m-    public void setPowerUp(PowerUp powerUp) {[m
[31m-        this.powerUp = powerUp;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/AnimalManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/AnimalManager.java[m
[1mdeleted file mode 100644[m
[1mindex 40256fa..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/AnimalManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,59 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.*;[m
[31m-import java.util.HashMap;[m
[31m-import java.util.Map;[m
[31m-[m
[31m-/**[m
[31m- * The AnimalManager class manages the Animal instances in the game.[m
[31m- * It follows the singleton pattern to ensure only one instance is created.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class AnimalManager {[m
[31m-    private static AnimalManager instance;[m
[31m-    private final Map<String, Animal> animals = new HashMap<>();[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to prevent instantiation.[m
[31m-     * Initialises the animals map with default Animal instances.[m
[31m-     */[m
[31m-    private AnimalManager() {[m
[31m-        initialiseAnimals();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the singleton instance of AnimalManager.[m
[31m-     * If the instance doesn't exist, it creates a new one.[m
[31m-     *[m
[31m-     * @return The singleton instance of AnimalManager.[m
[31m-     */[m
[31m-    public static AnimalManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new AnimalManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the animals map with default Animal instances.[m
[31m-     * Each Animal type is associated with a specific name key.[m
[31m-     */[m
[31m-    private void initialiseAnimals() {[m
[31m-        animals.put("Bat", new Bat());[m
[31m-        animals.put("Salamander", new Salamander());[m
[31m-        animals.put("Spider", new Spider());[m
[31m-        animals.put("Baby Dragon", new BabyDragon());[m
[31m-        animals.put("Pirate Dragon", new PirateDragon());[m
[31m-        animals.put("Backward Dragon", new BackwardDragon());[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Retrieves an Animal instance by its name.[m
[31m-     *[m
[31m-     * @param name The name of the Animal to retrieve.[m
[31m-     * @return The Animal instance associated with the given name, or null if not found.[m
[31m-     */[m
[31m-    public Animal getAnimalByName(String name) {[m
[31m-        return animals.get(name);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/CardManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/CardManager.java[m
[1mdeleted file mode 100644[m
[1mindex 75ca0f7..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/CardManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,122 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.factories.CardFactory;[m
[31m-import com.example.fierydragons.models.cards.VolcanoCard;[m
[31m-import org.json.JSONArray;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Arrays;[m
[31m-import java.util.List;[m
[31m-[m
[31m-/**[m
[31m- * The CardManager class manages the handling of cards within the game.[m
[31m- * @author Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class CardManager {[m
[31m-[m
[31m-    // Singleton instance of the CardManager.[m
[31m-    private static CardManager instance;[m
[31m-    // List to hold all the VolcanoCards in the game.[m
[31m-    private List<VolcanoCard> cards;[m
[31m-    private int numOfCards;[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to prevent instantiation.[m
[31m-     */[m
[31m-    private CardManager() {}[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of CardManager.[m
[31m-     * @return The singleton instance of CardManager.[m
[31m-     */[m
[31m-    public static CardManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new CardManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Serializes the CardManager object to a JSONObject.[m
[31m-     * @return A JSONObject representing the CardManager.[m
[31m-     */[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        JSONArray cardsArray = new JSONArray();[m
[31m-[m
[31m-        // Serialize each card using its toJSON method[m
[31m-        for (VolcanoCard card : cards) {[m
[31m-            cardsArray.put(new JSONObject(card.toJSON()));[m
[31m-        }[m
[31m-[m
[31m-        json.put("cards", cardsArray);[m
[31m-        json.put("numOfCards", numOfCards);[m
[31m-[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Deserializes a JSONObject to a CardManager object.[m
[31m-     * @param json The JSONObject representing the CardManager.[m
[31m-     */[m
[31m-    public static void fromJSON(JSONObject json) {[m
[31m-        JSONArray cardsArray = json.getJSONArray("cards");[m
[31m-        List<VolcanoCard> loadedCards = new ArrayList<>();[m
[31m-[m
[31m-        // Deserialize each card from JSON[m
[31m-        for (int i = 0; i < cardsArray.length(); i++) {[m
[31m-            JSONObject cardJson = cardsArray.getJSONObject(i);[m
[31m-            VolcanoCard card = VolcanoCard.fromJSON(cardJson);[m
[31m-            loadedCards.add(card);[m
[31m-        }[m
[31m-[m
[31m-        // Reset the singleton instance with loaded cards[m
[31m-        instance = getInstance();[m
[31m-        instance.cards = loadedCards;[m
[31m-        instance.numOfCards = json.getInt("numOfCards");[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Creates cards based on the total number specified and configures them.[m
[31m-     * @param totalCards The total number of cards to create.[m
[31m-     * @param numSquares The number of squares per card.[m
[31m-     */[m
[31m-    public void createCards(int totalCards, int numSquares) {[m
[31m-        int numPlayers = PlayerManager.getInstance().getPlayers().size();[m
[31m-        VolcanoCard[] createdCards = CardFactory.createCards(totalCards, numSquares, numPlayers);[m
[31m-        cards = Arrays.asList(createdCards);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the list of cards.[m
[31m-     * @return The list of cards.[m
[31m-     */[m
[31m-    public List<VolcanoCard> getCards() {[m
[31m-        return cards;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the list of cards.[m
[31m-     * @param cards The list of cards to set.[m
[31m-     */[m
[31m-    public void setCards(List<VolcanoCard> cards) {[m
[31m-        this.cards = cards;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the number of cards.[m
[31m-     * @return The number of cards.[m
[31m-     */[m
[31m-    public int getNumOfCards() {[m
[31m-        return numOfCards;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the number of cards.[m
[31m-     * @param numOfCards The number of cards to set.[m
[31m-     */[m
[31m-    public void setNumOfCards(int numOfCards) {[m
[31m-        this.numOfCards = numOfCards;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/CaveManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/CaveManager.java[m
[1mdeleted file mode 100644[m
[1mindex 637ea04..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/CaveManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,97 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.factories.CaveFactory;[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.cards.VolcanoCard;[m
[31m-import com.example.fierydragons.models.caves.*;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import org.json.JSONArray;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-import java.security.SecureRandom;[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Collections;[m
[31m-import java.util.List;[m
[31m-[m
[31m-/**[m
[31m- * The CaveManager class manages the creation and handling of caves within the game.[m
[31m- * @author: @jaden and @will implemented the initialising and shuffling of caves[m
[31m- */[m
[31m-public class CaveManager {[m
[31m-    private static CaveManager instance;[m
[31m-    private List<Cave> caves;[m
[31m-[m
[31m-    private CaveManager() {[m
[31m-        caves = CaveFactory.initialiseCaves();[m
[31m-        shuffleCaves();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of CaveManager.[m
[31m-     * @return The singleton instance of CaveManager.[m
[31m-     */[m
[31m-    public static CaveManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new CaveManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Randomises the order of caves.[m
[31m-     */[m
[31m-    public void shuffleCaves() {[m
[31m-        SecureRandom random = new SecureRandom();[m
[31m-        long seed = System.nanoTime(); // Use nanoTime() as seed for randomness[m
[31m-        random.setSeed(seed);[m
[31m-        Collections.shuffle(caves, random);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Resets the caves to their initial state.[m
[31m-     */[m
[31m-    public void reset() {[m
[31m-        caves = CaveFactory.initialiseCaves();[m
[31m-        shuffleCaves();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Assigns a specific cave to a cut card based on the card's characteristics.[m
[31m-     * @param cutCard The cut card to assign a cave to.[m
[31m-     */[m
[31m-    public void setCavesToCutCard(VolcanoCard cutCard) {[m
[31m-        Square cutSquare = cutCard.getCutSquare();[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-        Cave randomCave = caves.remove(0);[m
[31m-        cutSquare.setCave(randomCave); // Set the cave to the chosen square[m
[31m-[m
[31m-        // if the player does not have a starting card, set one.[m
[31m-        if (currentPlayer.getStartingCave() == null) {[m
[31m-            currentPlayer.setStartingCave(randomCave);[m
[31m-            currentPlayer.setCurrentCave(randomCave);[m
[31m-            currentPlayer.setDragonToken(randomCave.getDragonToken());[m
[31m-            currentPlayer.setCurrentSquare(cutSquare);[m
[31m-            randomCave.setPlayerOccupiedBy(currentPlayer);[m
[31m-        }[m
[31m-[m
[31m-        PlayerManager.getInstance().getNextPlayer();[m
[31m-[m
[31m-        caves.add(randomCave);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the list of caves.[m
[31m-     * @return The list of caves.[m
[31m-     */[m
[31m-    public List<Cave> getCaves() {[m
[31m-        return caves;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the list of caves.[m
[31m-     * @param caves The list of caves to set.[m
[31m-     */[m
[31m-    public void setCaves(List<Cave> caves) {[m
[31m-        this.caves = caves;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/ChitManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/ChitManager.java[m
[1mdeleted file mode 100644[m
[1mindex aa7dcf1..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/ChitManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,314 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.GameStateObserver;[m
[31m-import com.example.fierydragons.factories.ChitFactory;[m
[31m-import com.example.fierydragons.factories.ImageViewFactory;[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.animal_types.*;[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.chits.*;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import javafx.event.Event;[m
[31m-import javafx.event.EventHandler;[m
[31m-import javafx.scene.image.Image;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-import org.json.JSONArray;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-import java.security.SecureRandom;[m
[31m-import java.util.*;[m
[31m-[m
[31m-/**[m
[31m- * The ChitManager class manages the handling of chits within the game.[m
[31m- * @author @jaden implemented the observer pattern for chit cards, @kevin implemented the shuffling and flipping of chits[m
[31m- */[m
[31m-public class ChitManager {[m
[31m-[m
[31m-    // EventHandler map to handle events (mouse clicks) on chits when player turn ends.[m
[31m-    private Map<ImageView, EventHandler<Event>> eventHandlerMap = new HashMap<>();[m
[31m-    // List to hold all chits in the game.[m
[31m-    private static ArrayList<Chit> chitDeck = new ArrayList<>();[m
[31m-    // Map to track the flipped state of each chit associated with an ImageView.[m
[31m-    private static HashMap<ImageView, Boolean> imageViewChitMap = new HashMap<>();[m
[31m-    // Singleton instance of ChitManager to ensure only one instance is created.[m
[31m-    private static ChitManager instance;[m
[31m-    // List of observers for the Game State.[m
[31m-    private ArrayList<GameStateObserver> observers = new ArrayList<>();[m
[31m-    private int numChits;[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to prevent instantiation, and to initialise the chit deck.[m
[31m-     */[m
[31m-    private ChitManager() {[m
[31m-        initialiseChitDeck();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the chit deck with different types of chits.[m
[31m-     */[m
[31m-    public void initialiseChitDeck() {[m
[31m-        chitDeck.add(ChitFactory.createChit(new BabyDragon(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new BabyDragon(), 2));[m
[31m-        chitDeck.add(ChitFactory.createChit(new BabyDragon(), 3));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Bat(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Bat(), 2));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Bat(), 3));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Salamander(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Salamander(), 2));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Salamander(), 3));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Spider(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Spider(), 2));[m
[31m-        chitDeck.add(ChitFactory.createChit(new Spider(), 3));[m
[31m-        chitDeck.add(ChitFactory.createChit(new PirateDragon(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new PirateDragon(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new PirateDragon(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new PirateDragon(), 2));[m
[31m-        chitDeck.add(ChitFactory.createChit(new PirateDragon(), 2));[m
[31m-        chitDeck.add(ChitFactory.createChit(new PirateDragon(), 2));[m
[31m-        chitDeck.add(ChitFactory.createChit(new BackwardDragon(), 1));[m
[31m-        chitDeck.add(ChitFactory.createChit(new BackwardDragon(), 1));[m
[31m-[m
[31m-        setNumChits(chitDeck.size());[m
[31m-[m
[31m-        shuffleChits();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of ChitManager.[m
[31m-     * @return The singleton instance of ChitManager.[m
[31m-     */[m
[31m-    public static ChitManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new ChitManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Serializes the ChitManager object to a JSONObject.[m
[31m-     * @return A JSONObject representing the ChitManager.[m
[31m-     */[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        JSONArray chitArray = new JSONArray();[m
[31m-[m
[31m-        for (Chit chit : chitDeck) {[m
[31m-            chitArray.put(chit.toJSON());[m
[31m-        }[m
[31m-[m
[31m-        json.put("chits", chitArray);[m
[31m-        json.put("numChits", this.numChits);[m
[31m-[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Deserializes a JSONObject to a ChitManager object.[m
[31m-     * @param json The JSONObject representing the ChitManager.[m
[31m-     */[m
[31m-    public static void fromJSON(JSONObject json) {[m
[31m-        JSONArray chitArray = json.getJSONArray("chits");[m
[31m-        ArrayList<Chit> chits = new ArrayList<>();[m
[31m-[m
[31m-        chitDeck.clear();[m
[31m-[m
[31m-        for (int i = 0; i < chitArray.length(); i++) {[m
[31m-            JSONObject chitJson = chitArray.getJSONObject(i);[m
[31m-            Chit chit = ChitFactory.fromJSON(chitJson);[m
[31m-            chits.add(chit);[m
[31m-        }[m
[31m-[m
[31m-        instance = getInstance();[m
[31m-        chitDeck = chits;[m
[31m-[m
[31m-        instance.setNumChits(json.getInt("numChits"));[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Adds a game state observer to the list of observers.[m
[31m-     * @param observer The observer to be added.[m
[31m-     */[m
[31m-    public void addObserver(GameStateObserver observer) {[m
[31m-        observers.add(observer);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Notifies all observers of a game state update.[m
[31m-     */[m
[31m-    public void notifyUpdateGameInfo() {[m
[31m-        for (GameStateObserver observer : observers) {[m
[31m-            observer.updateGameState();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Shuffles the chits in the deck to ensure randomness.[m
[31m-     */[m
[31m-    public void shuffleChits() {[m
[31m-        SecureRandom random = new SecureRandom();[m
[31m-        long seed = System.nanoTime(); // Use nanoTime() as seed for randomness[m
[31m-        random.setSeed(seed);[m
[31m-[m
[31m-        Collections.shuffle(chitDeck, random); // shuffle chits[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Assigns each ImageView to a chit and sets all chits to be un-flipped initially,[m
[31m-     * or reattaches event handlers if specified.[m
[31m-     * @param chitViews The list of ImageView objects to be associated with chits.[m
[31m-     */[m
[31m-    public void initialiseChitsToViews(List<ImageView> chitViews) {[m
[31m-        for (int i = 0; i < chitViews.size(); i++) {[m
[31m-            ImageView view = chitViews.get(i);[m
[31m-            Chit chit = chitDeck.get(i);[m
[31m-            view.setUserData(chit);[m
[31m-[m
[31m-            if (chit.isFlipped()) {[m
[31m-                view.setImage(chit.getImage());[m
[31m-                imageViewChitMap.put(view, true); // Marks the ImageView as un-flipped.[m
[31m-            } else {[m
[31m-                imageViewChitMap.put(view, false); // Marks the ImageView as un-flipped.[m
[31m-            }[m
[31m-[m
[31m-            EventHandler<javafx.event.Event> eventHandler = event -> flipChit(view);[m
[31m-            view.setOnMouseClicked(eventHandler);[m
[31m-            eventHandlerMap.put(view, eventHandler); // Store or restore the event handler[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Flips the chit to show its image or resets it to the default if already flipped.[m
[31m-     * @param view The ImageView representing the chit to be flipped.[m
[31m-     */[m
[31m-    public void flipChit(ImageView view) {[m
[31m-        Chit chit = (Chit) view.getUserData();[m
[31m-        boolean isFlipped = imageViewChitMap.get(view);[m
[31m-[m
[31m-        // if the Chit is not flipped over, flip it.[m
[31m-        if (!isFlipped) {[m
[31m-            view.setImage(chit.getImage()); // Sets the image to the chit's face.[m
[31m-            imageViewChitMap.put(view, true); // Marks the ImageView as flipped.[m
[31m-            chit.setFlipped(true);[m
[31m-            onChitFlip(chit);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Clears and reinitialise the chit deck and ImageView map for a new game.[m
[31m-     */[m
[31m-    public void reset() {[m
[31m-        chitDeck.clear(); // Clears the chit deck.[m
[31m-        initialiseChitDeck(); // Refills the chit deck.[m
[31m-        imageViewChitMap.clear(); // Clears the map of ImageViews.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Handles the effects to be executed when a chit is flipped.[m
[31m-     * @param chit The chit that has been flipped by the player.[m
[31m-     */[m
[31m-    public void onChitFlip(Chit chit) {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-        Square currentSquare = currentPlayer.getCurrentSquare();[m
[31m-        String chitAnimalName = chit.getAnimalType().getName();[m
[31m-[m
[31m-        // player in their cave[m
[31m-        Cave currentCave = currentSquare.getCave();[m
[31m-        if (currentCave != null && currentCave.getPlayerOccupiedBy() == currentPlayer) {[m
[31m-            if (currentCave.getAnimalType().getName().equals(chitAnimalName)) {[m
[31m-                chit.move(true);[m
[31m-            } else if (chitAnimalName.equals("Backward Dragon")) {[m
[31m-                notifyUpdateGameInfo();[m
[31m-            } else {[m
[31m-                GameManager.getInstance().endTurn();[m
[31m-            }[m
[31m-[m
[31m-        } else if (currentSquare.getAnimalType().getName().equals(chitAnimalName)) {[m
[31m-            chit.move(false);[m
[31m-        } else {[m
[31m-            chit.handleMismatch(); // Delegate to chit-specific mismatch handling[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Checks all chits to see if they are flipped over and if they are, un-flip them.[m
[31m-     */[m
[31m-    public void checkFlippedChits() {[m
[31m-        for (Map.Entry<ImageView, Boolean> entry : imageViewChitMap.entrySet()) {[m
[31m-            ImageView view = entry.getKey();[m
[31m-            boolean isFlipped = entry.getValue();[m
[31m-[m
[31m-            // If the chit is flipped, un-flip it[m
[31m-            if (isFlipped) {[m
[31m-                Chit chit = (Chit) view.getUserData();[m
[31m-                chit.setFlipped(false);[m
[31m-                view.setImage(new Image(getClass().getResourceAsStream("/images/chit/chit.png")));[m
[31m-                imageViewChitMap.put(view, false); // Mark the ImageView as unflipped[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Enables all chits to flip again.[m
[31m-     */[m
[31m-    public void enableChitFlipping() {[m
[31m-        for (Map.Entry<ImageView, EventHandler<javafx.event.Event>> entry : ChitManager.getInstance().eventHandlerMap.entrySet()) {[m
[31m-            entry.getKey().setOnMouseClicked(entry.getValue());[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the EventHandler map for chits.[m
[31m-     * @return The EventHandler map for chits.[m
[31m-     */[m
[31m-    public Map<ImageView, EventHandler<Event>> getEventHandlerMap() {[m
[31m-        return eventHandlerMap;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the EventHandler map for chits.[m
[31m-     * @param eventHandlerMap The EventHandler map for chits.[m
[31m-     */[m
[31m-    public void setEventHandlerMap(Map<ImageView, EventHandler<Event>> eventHandlerMap) {[m
[31m-        this.eventHandlerMap = eventHandlerMap;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the number of chits.[m
[31m-     * @return The number of chits.[m
[31m-     */[m
[31m-    public int getNumChits() {[m
[31m-        return numChits;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the number of chits.[m
[31m-     * @param numChits The number of chits.[m
[31m-     */[m
[31m-    public void setNumChits(int numChits) {[m
[31m-        this.numChits = numChits;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the chit deck.[m
[31m-     * @return The chit deck.[m
[31m-     */[m
[31m-    public static List<Chit> getChitDeck() {[m
[31m-        return chitDeck;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the ImageView-Chit map.[m
[31m-     * @return The ImageView-Chit map.[m
[31m-     */[m
[31m-    public static HashMap<ImageView, Boolean> getImageViewChitMap() {[m
[31m-        return imageViewChitMap;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the ImageView-Chit map.[m
[31m-     * @param imageViewChitMap The ImageView-Chit map.[m
[31m-     */[m
[31m-    public static void setImageViewChitMap(HashMap<ImageView, Boolean> imageViewChitMap) {[m
[31m-        ChitManager.imageViewChitMap = imageViewChitMap;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/DragonManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/DragonManager.java[m
[1mdeleted file mode 100644[m
[1mindex cc364f9..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/DragonManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,53 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.models.dragon_types.*;[m
[31m-[m
[31m-import java.util.HashMap;[m
[31m-import java.util.Map;[m
[31m-[m
[31m-/**[m
[31m- * The DragonManager class manages the different types of dragons in the Fiery Dragons game.[m
[31m- * It follows the Singleton pattern to ensure only one instance of the class exists.[m
[31m- * @author Jaden[m
[31m- */[m
[31m-public class DragonManager {[m
[31m-    private static DragonManager instance;[m
[31m-    private final Map<String, DragonType> dragonTypes = new HashMap<>();[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to prevent instantiation and to initialise the dragon types.[m
[31m-     */[m
[31m-    private DragonManager() {[m
[31m-        initialiseDragonTypes();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of DragonManager.[m
[31m-     * @return The singleton instance of DragonManager.[m
[31m-     */[m
[31m-    public static DragonManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new DragonManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the dragon types and adds them to the dragonTypes map.[m
[31m-     */[m
[31m-    private void initialiseDragonTypes() {[m
[31m-        dragonTypes.put("Earth", new EarthDragon());[m
[31m-        dragonTypes.put("Fire", new FireDragon());[m
[31m-        dragonTypes.put("Ice", new IceDragon());[m
[31m-        dragonTypes.put("Storm", new StormDragon());[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets a DragonType object by its name.[m
[31m-     * @param name The name of the dragon type.[m
[31m-     * @return The DragonType object corresponding to the given name.[m
[31m-     */[m
[31m-    public DragonType getDragonTypeByName(String name) {[m
[31m-        return dragonTypes.get(name);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/GameManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/GameManager.java[m
[1mdeleted file mode 100644[m
[1mindex 5730deb..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/GameManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,161 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.GameStateObserver;[m
[31m-import com.example.fierydragons.models.Game;[m
[31m-import javafx.application.Platform;[m
[31m-import javafx.scene.control.Alert;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Timer;[m
[31m-import java.util.TimerTask;[m
[31m-[m
[31m-/**[m
[31m- * GameManager class manages the game state and its related operations.[m
[31m- * @author @jaden implemented the win condition of GameManager[m
[31m- */[m
[31m-public class GameManager {[m
[31m-[m
[31m-    // Instance variable to hold the current game.[m
[31m-    private Game game;[m
[31m-    // Singleton instance of GameManager to ensure only one instance is created.[m
[31m-    private static GameManager instance;[m
[31m-    // List of observers for the Game State.[m
[31m-    private ArrayList<GameStateObserver> observers = new ArrayList<>();[m
[31m-    private boolean isLoadGame = false;[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to prevent instantiation, and to create a new game.[m
[31m-     */[m
[31m-    private GameManager() {[m
[31m-        game = new Game();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of GameManager.[m
[31m-     * @return The singleton instance of GameManager.[m
[31m-     */[m
[31m-    public static GameManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new GameManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Checks if a player has won the game.[m
[31m-     * @param stepsTaken The steps taken by the player.[m
[31m-     * @return True if the player has won, otherwise false.[m
[31m-     */[m
[31m-    public boolean checkWin(int stepsTaken) {[m
[31m-        return stepsTaken == (SquareManager.getInstance().getTotalSquares() + 1);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Displays an alert indicating that the game has been won.[m
[31m-     */[m
[31m-    public void winGame() {[m
[31m-        Platform.runLater(() -> {[m
[31m-            Alert alert = new Alert(Alert.AlertType.INFORMATION);[m
[31m-            alert.setTitle("Game Information");[m
[31m-            alert.setHeaderText(null);[m
[31m-            alert.setContentText("You've reached the end of the game board!");[m
[31m-            alert.showAndWait();  // Now safely inside Platform.runLater[m
[31m-        });[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Adds a GameStateObserver to the list of observers.[m
[31m-     * @param observer The observer to add.[m
[31m-     */[m
[31m-    public void addObserver(GameStateObserver observer) {[m
[31m-        observers.add(observer);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Notifies observers that the next turn is starting.[m
[31m-     */[m
[31m-    public void notifyNextTurn() {[m
[31m-        ChitManager.getInstance().checkFlippedChits();[m
[31m-        PlayerManager.getInstance().getNextPlayer();[m
[31m-        ChitManager.getInstance().enableChitFlipping();[m
[31m-[m
[31m-        for (GameStateObserver observer : observers) {[m
[31m-            observer.updateGameState();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Notifies observers that a power-up is active.[m
[31m-     */[m
[31m-    public void notifyPowerUpActive() {[m
[31m-        for (GameStateObserver observer : observers) {[m
[31m-            observer.updatePowerUpImage();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Displays a pop-up indicating that a player collision has occurred.[m
[31m-     */[m
[31m-    public void displayCollisionPopUp() {[m
[31m-        Alert alert = new Alert(Alert.AlertType.INFORMATION);[m
[31m-        alert.setTitle("Player Collision");[m
[31m-        alert.setHeaderText(null);[m
[31m-        alert.setContentText("That square contains a Player!");[m
[31m-        alert.showAndWait();[m
[31m-[m
[31m-        endTurn();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Ends the current player's turn after a delay.[m
[31m-     */[m
[31m-    public void endTurn() {[m
[31m-        // Disabling all chit flips.[m
[31m-        for (ImageView view : ChitManager.getInstance().getEventHandlerMap().keySet()) {[m
[31m-            view.setOnMouseClicked(null); // Remove the event handler[m
[31m-        }[m
[31m-[m
[31m-        Timer timer = new Timer();[m
[31m-        timer.schedule(new TimerTask() {[m
[31m-            @Override[m
[31m-            public void run() {[m
[31m-                Platform.runLater(() -> {[m
[31m-                    GameManager.getInstance().notifyNextTurn();[m
[31m-                });[m
[31m-            }[m
[31m-        }, 1500); // 1500-millisecond delay before next turn.[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Gets the current game.[m
[31m-     * @return The current Game.[m
[31m-     */[m
[31m-    public Game getGame() {[m
[31m-        return game;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the current game.[m
[31m-     * @param game The Game to be set.[m
[31m-     */[m
[31m-    public void setGame(Game game) {[m
[31m-        this.game = game;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Checks if it is a loaded game.[m
[31m-     * @return True if it is a loaded game, otherwise false.[m
[31m-     */[m
[31m-    public boolean isLoadGame() {[m
[31m-        return isLoadGame;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets whether it is a loaded game or not.[m
[31m-     * @param loadGame True if it is a loaded game, otherwise false.[m
[31m-     */[m
[31m-    public void setLoadGame(boolean loadGame) {[m
[31m-        isLoadGame = loadGame;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/GameStateManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/GameStateManager.java[m
[1mdeleted file mode 100644[m
[1mindex debbbfb..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/GameStateManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,108 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import javafx.scene.control.Alert;[m
[31m-import javafx.stage.FileChooser;[m
[31m-import javafx.stage.Stage;[m
[31m-import org.json.JSONObject;[m
[31m-import org.json.JSONTokener;[m
[31m-[m
[31m-import java.io.File;[m
[31m-import java.io.FileReader;[m
[31m-import java.io.FileWriter;[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * GameStateManager class manages the saving and loading of game states.[m
[31m- * @author: Jaden[m
[31m- */[m
[31m-public class GameStateManager {[m
[31m-[m
[31m-    private static GameStateManager instance;[m
[31m-    private int fileCount = 1;[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to prevent instantiation.[m
[31m-     */[m
[31m-    private GameStateManager() {[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of GameStateManager.[m
[31m-     * @return The singleton instance of GameStateManager.[m
[31m-     */[m
[31m-    public static GameStateManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new GameStateManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Saves the current game state to a JSON file.[m
[31m-     */[m
[31m-    public void saveGame() {[m
[31m-        // Collect game state data from various managers and objects[m
[31m-        JSONObject gameState = new JSONObject();[m
[31m-        gameState.put("playerManager", PlayerManager.getInstance().toJSON());[m
[31m-        gameState.put("cardManager", CardManager.getInstance().toJSON());[m
[31m-        gameState.put("chitManager", ChitManager.getInstance().toJSON());[m
[31m-        gameState.put("squareManager", SquareManager.getInstance().toJSON());[m
[31m-[m
[31m-        // Write the game state to a file[m
[31m-        try (FileWriter fileWriter = new FileWriter("game_save_" + fileCount + ".json")) {[m
[31m-            fileWriter.write(gameState.toString());[m
[31m-            fileCount++;[m
[31m-        } catch (IOException e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Loads a game state from a JSON file.[m
[31m-     * @param primaryStage The primary stage of the application.[m
[31m-     * @return True if the game state was loaded successfully, otherwise false.[m
[31m-     */[m
[31m-    public boolean loadGame(Stage primaryStage) {[m
[31m-        FileChooser fileChooser = new FileChooser();[m
[31m-        fileChooser.setTitle("Open Game Save File");[m
[31m-        fileChooser.getExtensionFilters().addAll([m
[31m-                new FileChooser.ExtensionFilter("JSON Files", "*.json"),[m
[31m-                new FileChooser.ExtensionFilter("All Files", "*.*")[m
[31m-        );[m
[31m-[m
[31m-        File selectedFile = fileChooser.showOpenDialog(primaryStage);[m
[31m-        if (selectedFile == null) {[m
[31m-            return false;[m
[31m-        }[m
[31m-[m
[31m-        // Read the game state from the selected file[m
[31m-        try (FileReader fileReader = new FileReader(selectedFile)) {[m
[31m-            JSONObject gameState = new JSONObject(new JSONTokener(fileReader));[m
[31m-[m
[31m-            CardManager.fromJSON(gameState.getJSONObject("cardManager"));[m
[31m-            SquareManager.fromJSON(gameState.getJSONObject("squareManager"));[m
[31m-            PlayerManager.fromJSON(gameState.getJSONObject("playerManager"));[m
[31m-            ChitManager.fromJSON(gameState.getJSONObject("chitManager"));[m
[31m-[m
[31m-            return true;[m
[31m-        } catch (Exception e) {[m
[31m-            e.printStackTrace();[m
[31m-            showAlert("Error Loading Game", "Failed to load the game: " + e.getMessage());[m
[31m-            return false;[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Displays an alert with the specified title and message.[m
[31m-     * @param title The title of the alert.[m
[31m-     * @param message The message of the alert.[m
[31m-     */[m
[31m-    private void showAlert(String title, String message) {[m
[31m-        Alert alert = new Alert(Alert.AlertType.ERROR);[m
[31m-        alert.setTitle(title);[m
[31m-        alert.setHeaderText(null);[m
[31m-        alert.setContentText(message);[m
[31m-        alert.showAndWait();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/PlayerManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/PlayerManager.java[m
[1mdeleted file mode 100644[m
[1mindex d217c49..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/PlayerManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,504 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.factories.DragonTypeFactory;[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.dragon_types.DragonType;[m
[31m-import com.example.fierydragons.models.power_ups.PowerUp;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import com.example.fierydragons.utils.GameBoardSetup;[m
[31m-[m
[31m-import javafx.animation.KeyFrame;[m
[31m-import javafx.animation.Timeline;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-import javafx.scene.transform.Rotate;[m
[31m-import javafx.util.Duration;[m
[31m-import org.json.JSONArray;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-import java.time.LocalDate;[m
[31m-import java.util.*;[m
[31m-[m
[31m-/**[m
[31m- * PlayerManager class manages the players and their actions in the game.[m
[31m- * @author @jaden implemented the initial creation of players, @glenn and @kevin implemented the movement of player tokens[m
[31m- * @glenn implemented the rotation of players on GUI.[m
[31m- */[m
[31m-public class PlayerManager {[m
[31m-[m
[31m-    // Current player in the game.[m
[31m-    private Player currentPlayer;[m
[31m-    // Singleton instance of PlayerManager to ensure only one instance is created.[m
[31m-    private static PlayerManager instance;[m
[31m-    // List to manage the turn order of players.[m
[31m-    private LinkedList<Player> players;[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to initialise players and available dragon types.[m
[31m-     */[m
[31m-    private PlayerManager() {[m
[31m-        this.players = new LinkedList<>();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of PlayerManager.[m
[31m-     * @return The singleton instance of PlayerManager.[m
[31m-     */[m
[31m-    public static PlayerManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new PlayerManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Serializes the PlayerManager object to a JSONObject.[m
[31m-     * @return A JSONObject representing the PlayerManager.[m
[31m-     */[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-        JSONArray playersArray = new JSONArray();[m
[31m-[m
[31m-        // Serialise each player's information[m
[31m-        for (Player player : players) {[m
[31m-            JSONObject playerJson = new JSONObject();[m
[31m-            playerJson.put("name", player.getPlayerName());[m
[31m-            playerJson.put("dob", player.getPlayerDob().toString());[m
[31m-            playerJson.put("dragonType", player.getDragonToken().getTypeName());[m
[31m-            playerJson.put("startingCave", player.getStartingCave().toJSON());[m
[31m-            playerJson.put("currentCave", player.getCurrentCave().toJSON());[m
[31m-            playerJson.put("currentSquareIndex", player.getCurrentSquareIndex());[m
[31m-            playerJson.put("stepsTaken", player.getStepsTaken());[m
[31m-            playerJson.put("hasShield", player.isHasShield());[m
[31m-[m
[31m-            PowerUp availablePowerUp = player.getAvailablePowerUp();[m
[31m-            if (availablePowerUp != null) {[m
[31m-                playerJson.put("availablePowerUp", availablePowerUp.toJSON());[m
[31m-            }[m
[31m-[m
[31m-            // Add the constructed player JSON object to the players array[m
[31m-            playersArray.put(playerJson);[m
[31m-        }[m
[31m-[m
[31m-        json.put("players", playersArray);[m
[31m-[m
[31m-        // Serialise the current player's name as a simple way to identify them[m
[31m-        if (currentPlayer != null) {[m
[31m-            json.put("currentPlayer", currentPlayer.getPlayerName());[m
[31m-        } else {[m
[31m-            json.put("currentPlayer", JSONObject.NULL);[m
[31m-        }[m
[31m-[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Deserializes a JSONObject to a PlayerManager object.[m
[31m-     * @param json The JSONObject representing the PlayerManager.[m
[31m-     */[m
[31m-    public static void fromJSON(JSONObject json) {[m
[31m-        JSONArray playersArray = json.getJSONArray("players");[m
[31m-        LinkedList<Player> loadedPlayers = new LinkedList<>();[m
[31m-[m
[31m-        for (int i = 0; i < playersArray.length(); i++) {[m
[31m-            JSONObject playerJson = playersArray.getJSONObject(i);[m
[31m-            String name = playerJson.getString("name");[m
[31m-            LocalDate dob = LocalDate.parse(playerJson.getString("dob")); // Convert string back to LocalDate[m
[31m-            DragonType dragonToken = DragonTypeFactory.getDragonType(playerJson.getString("dragonType"));[m
[31m-            ImageView tokenImageView = new ImageView(dragonToken.getDragonImage());[m
[31m-            Cave startingCave = Cave.fromJSON(playerJson.getJSONObject("startingCave"));[m
[31m-            Cave currentCave = Cave.fromJSON(playerJson.getJSONObject("currentCave"));[m
[31m-            int currentSquareIndex = playerJson.getInt("currentSquareIndex");[m
[31m-            boolean hasShield = playerJson.getBoolean("hasShield");[m
[31m-[m
[31m-            Player player = new Player(name, dob);[m
[31m-            player.setDragonToken(dragonToken);[m
[31m-            player.setTokenImageView(tokenImageView);[m
[31m-            player.setStartingCave(startingCave);[m
[31m-            player.setCurrentCave(currentCave);[m
[31m-[m
[31m-            Square square = SquareManager.getInstance().getBoardSquares().get(currentSquareIndex);[m
[31m-            if (square.getCave() != null) {[m
[31m-                if (square.getCave() == currentCave) {[m
[31m-                    currentCave.setPlayerOccupiedBy(player);[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            Square currentSquare = SquareManager.getInstance().getBoardSquares().get(currentSquareIndex);[m
[31m-            player.setCurrentSquare(currentSquare);[m
[31m-            currentSquare.setCurrentPlayer(player);[m
[31m-[m
[31m-            if (playerJson.has("availablePowerUp") && !playerJson.isNull("availablePowerUp")) {[m
[31m-                JSONObject availablePowerUpJson = playerJson.getJSONObject("availablePowerUp");[m
[31m-                PowerUp availablePowerUp = PowerUp.fromJSON(availablePowerUpJson);[m
[31m-                player.setAvailablePowerUp(availablePowerUp);[m
[31m-            }[m
[31m-[m
[31m-            player.setHasShield(hasShield);[m
[31m-[m
[31m-            if (!playerJson.isNull("stepsTaken")) {[m
[31m-                player.setStepsTaken(playerJson.getInt("stepsTaken"));[m
[31m-            }[m
[31m-[m
[31m-            loadedPlayers.add(player);[m
[31m-        }[m
[31m-[m
[31m-        // Reset the singleton instance with loaded players[m
[31m-        instance = getInstance();[m
[31m-        instance.setPlayers(loadedPlayers);[m
[31m-[m
[31m-        // Set the current player based on the saved name[m
[31m-        String currentName = json.getString("currentPlayer");[m
[31m-        for (Player player : loadedPlayers) {[m
[31m-            if (player.getPlayerName().equals(currentName)) {[m
[31m-                instance.setCurrentPlayer(player);[m
[31m-                break;[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Creates a new player with a name and date of birth, and assigns a dragon type.[m
[31m-     * @param playerName The name of the player.[m
[31m-     * @param dateOfBirth The date of birth of the player.[m
[31m-     */[m
[31m-    public void createPlayer(String playerName, LocalDate dateOfBirth) {[m
[31m-        Player player = new Player(playerName, dateOfBirth);[m
[31m-        addPlayer(player);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Adds a player to the player list.[m
[31m-     * @param playerToAdd The player to add.[m
[31m-     */[m
[31m-    public void addPlayer(Player playerToAdd) {[m
[31m-        this.players.add(playerToAdd);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the turn order of players based on their date of birth.[m
[31m-     */[m
[31m-    public void createPlayerTurnOrder() {[m
[31m-        // Compares the Date of Birth of each Player from players, earliest Date is considered "lower"[m
[31m-        players.sort(Comparator.comparing(Player::getPlayerDob));[m
[31m-        setCurrentPlayer(players.getFirst());[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Skips the next player's turn.[m
[31m-     */[m
[31m-    public void skipNextPlayer() {[m
[31m-        if (players.size() > 2) { // Check if it's possible to skip[m
[31m-            // Remove the next player and move them behind the current player[m
[31m-            Player nextPlayer = players.get(1);[m
[31m-            players.remove(1);[m
[31m-            players.addLast(nextPlayer);[m
[31m-        } else {[m
[31m-            GameManager.getInstance().endTurn();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Retrieves and updates the next player in the turn order.[m
[31m-     */[m
[31m-    public void getNextPlayer() {[m
[31m-        Player currentPlayer = players.poll(); // Retrieves and removes the first player[m
[31m-        players.addLast(currentPlayer); // Adds the player to the end of the list[m
[31m-        setCurrentPlayer(players.getFirst());[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Updates the number of steps taken by a player.[m
[31m-     * @param player The player whose steps are to be updated.[m
[31m-     * @param stepsCount The number of steps to update.[m
[31m-     */[m
[31m-    public void updateStepsCount(Player player, int stepsCount) {[m
[31m-        player.setStepsTaken(player.getStepsTaken() + stepsCount);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Checks if the player goes over their cave.[m
[31m-     * @param newPosition The new position of the player.[m
[31m-     * @return True if the player goes over, false otherwise.[m
[31m-     */[m
[31m-    public boolean goesOver(int newPosition) {[m
[31m-        return newPosition > SquareManager.getInstance().getTotalSquares() + 1;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Moves the player on the game board.[m
[31m-     * @param steps The number of steps to move.[m
[31m-     */[m
[31m-    public void movePlayer(int steps) {[m
[31m-        Player currentPlayer = PlayerManager.getInstance().getCurrentPlayer();[m
[31m-        int currentPlayerPosition = SquareManager.getInstance().findPlayerPosition(currentPlayer);[m
[31m-        int newPlayerPosition = Math.floorMod(currentPlayerPosition + steps, SquareManager.getInstance().getTotalSquares());   // ensure that stay within boundaries of board[m
[31m-[m
[31m-        List<Square> boardSquares = SquareManager.getInstance().getBoardSquares();[m
[31m-        Square currentPlayerSquare = boardSquares.get(currentPlayerPosition);[m
[31m-        Square newPlayerSquare = boardSquares.get(Math.floorMod(newPlayerPosition, boardSquares.size()));[m
[31m-[m
[31m-        int stepsToTake = currentPlayer.getStepsTaken() + steps;[m
[31m-[m
[31m-        boolean isWin = GameManager.getInstance().checkWin(stepsToTake);[m
[31m-        boolean goesOver = goesOver(stepsToTake); // player goes over their cave[m
[31m-        boolean isEmptySquare = SquareManager.getInstance().emptySquare(newPlayerPosition, currentPlayer, isWin);[m
[31m-[m
[31m-        // end their turn[m
[31m-        if (goesOver) {[m
[31m-            GameManager.getInstance().endTurn();[m
[31m-            return;[m
[31m-        }[m
[31m-[m
[31m-        if (isEmptySquare) {[m
[31m-            SquareManager.getInstance().updatePlayerPosition(currentPlayer, currentPlayerSquare, newPlayerSquare);[m
[31m-        } else {[m
[31m-            GameManager.getInstance().displayCollisionPopUp();[m
[31m-            return;[m
[31m-        }[m
[31m-[m
[31m-        // if the Player would win after moving[m
[31m-        if (isWin) {[m
[31m-            // rotate the Player to their cave[m
[31m-            rotatePlayerToken(steps > 1 ? steps - 1 : 0, isEmptySquare, currentPlayer);[m
[31m-[m
[31m-            // move the Player into their cave after a delay[m
[31m-            Timeline timeline = new Timeline(new KeyFrame([m
[31m-                    Duration.millis(222 * steps),[m
[31m-                    ae -> {[m
[31m-                        moveTokenInCave(currentPlayer);[m
[31m-                        GameManager.getInstance().winGame();[m
[31m-                    }[m
[31m-            ));[m
[31m-            timeline.play();[m
[31m-            return;[m
[31m-        }[m
[31m-[m
[31m-        // move Player out of their cave[m
[31m-        if (currentPlayer == currentPlayer.getCurrentCave().getPlayerOccupiedBy() && isEmptySquare) {[m
[31m-            movePlayerOutOfCave(currentPlayer);[m
[31m-        }[m
[31m-[m
[31m-        // updatePlayerPosition returns false if there is another player in the new square, thus preventing rotations[m
[31m-        rotatePlayerToken(steps, isEmptySquare, currentPlayer);[m
[31m-        // update Player steps after moving[m
[31m-        updateStepsCount(currentPlayer, steps);[m
[31m-[m
[31m-        // Activate the power up just stepped on[m
[31m-        Square playerNewSquare = currentPlayer.getCurrentSquare();[m
[31m-        PowerUp squarePowerUp = playerNewSquare.getPowerUp();[m
[31m-[m
[31m-        if (squarePowerUp != null) {[m
[31m-            GameManager.getInstance().notifyPowerUpActive();[m
[31m-            Timeline timeline = new Timeline(new KeyFrame([m
[31m-                    Duration.millis(2000), // 2000 milliseconds delay[m
[31m-                    ae -> {[m
[31m-                        squarePowerUp.activatePowerUp(); // Activate the power up after the delay[m
[31m-                        squarePowerUp.deactivatePowerUp();[m
[31m-                        currentPlayer.setAvailablePowerUp(null); // Reset available power up[m
[31m-                        GameManager.getInstance().notifyPowerUpActive();[m
[31m-                    }));[m
[31m-            timeline.play(); // Start the timeline to initiate the delay[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Moves the current player outside of cave.[m
[31m-     * @param currentPlayer The current player to move.[m
[31m-     */[m
[31m-    public void movePlayerOutOfCave(Player currentPlayer) {[m
[31m-        currentPlayer.getCurrentCave().setPlayerOccupiedBy(null);[m
[31m-        ImageView token = currentPlayer.getTokenImageView();[m
[31m-[m
[31m-        // Get current token position[m
[31m-        double currentX = token.getX();[m
[31m-        double currentY = token.getY();[m
[31m-[m
[31m-        // Center coordinates of the board[m
[31m-        double centerX = GameBoardSetup.getCenterX();[m
[31m-        double centerY = GameBoardSetup.getCenterY();[m
[31m-[m
[31m-        // Calculate the direction towards the center[m
[31m-        double directionX = centerX - currentX;[m
[31m-        double directionY = centerY - currentY;[m
[31m-[m
[31m-        // Normalise the direction[m
[31m-        double length = Math.sqrt(directionX * directionX + directionY * directionY);[m
[31m-        directionX /= length;[m
[31m-        directionY /= length;[m
[31m-[m
[31m-        // Set a small step size to move towards the center[m
[31m-        double stepSize = 80;  // Adjust this value based on desired movement speed[m
[31m-[m
[31m-        // Update token position to move it closer to the center[m
[31m-        token.setX(currentX + directionX * stepSize);[m
[31m-        token.setY(currentY + directionY * stepSize);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Moves the player's token away from the center of the board when they win.[m
[31m-     * @param currentPlayer The current player to move.[m
[31m-     */[m
[31m-    public void moveTokenInCave(Player currentPlayer) {[m
[31m-        ImageView token = currentPlayer.getTokenImageView();[m
[31m-        // Get current token position[m
[31m-        double currentX = token.getX();[m
[31m-        double currentY = token.getY();[m
[31m-[m
[31m-        // Center coordinates of the board[m
[31m-        double centerX = GameBoardSetup.getCenterX();[m
[31m-        double centerY = GameBoardSetup.getCenterY();[m
[31m-[m
[31m-        // Calculate the direction away from the center[m
[31m-        double directionX = currentX - centerX;[m
[31m-        double directionY = currentY - centerY;[m
[31m-[m
[31m-        // Normalise the direction[m
[31m-        double length = Math.sqrt(directionX * directionX + directionY * directionY);[m
[31m-        directionX /= length;[m
[31m-        directionY /= length;[m
[31m-[m
[31m-        // Set a small step size to move away from the center[m
[31m-        double stepSize = 80;  // Adjust this value based on desired movement speed[m
[31m-[m
[31m-        // Update token position to move it away from the center[m
[31m-        token.setX(currentX + directionX * stepSize);[m
[31m-        token.setY(currentY + directionY * stepSize);[m
[31m-[m
[31m-        token.toFront();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Rotates the player's token based on the number of steps taken.[m
[31m-     * @param steps The number of steps taken by the player.[m
[31m-     * @param emptySquare Indicates if the target square is empty.[m
[31m-     * @param currentPlayer The current player to rotate.[m
[31m-     */[m
[31m-    private void rotatePlayerToken(int steps, boolean emptySquare, Player currentPlayer) {[m
[31m-        ImageView token = currentPlayer.getTokenImageView();[m
[31m-[m
[31m-        // rotate the Player's token[m
[31m-        if (Math.abs(steps) > 0 && emptySquare) {[m
[31m-            Rotate rotate = getRotation(token);[m
[31m-[m
[31m-            // calculate rotate angle for the token[m
[31m-            double rotateAngle = (steps > 0) ? (360 / GameBoardSetup.getNumberOfSections()) : -(360 / GameBoardSetup.getNumberOfSections());   // set rotation angle depending on steps (forward or backwards)[m
[31m-[m
[31m-            // Using Timeline to animate the rotation[m
[31m-            Timeline timeline = new Timeline();[m
[31m-            timeline.getKeyFrames().add([m
[31m-                    new KeyFrame(Duration.millis(222), event -> {[m
[31m-                        rotate.setAngle(rotate.getAngle() + rotateAngle); // increment angle by 15 degrees every 222ms[m
[31m-                    })[m
[31m-            );[m
[31m-            timeline.setCycleCount(Math.abs(steps)); // cycle through for how many steps[m
[31m-            timeline.play();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Method to extract the Rotate placed within an ImageView. Puts in a new rotate if no transformations are placed.[m
[31m-     * @param imageView The ImageView we want to place a Rotate within.[m
[31m-     * @return The Rotate object placed within the ImageView.[m
[31m-     */[m
[31m-    private Rotate getRotation(ImageView imageView) {[m
[31m-        if (imageView.getTransforms().isEmpty()) {[m
[31m-            Rotate rotate = new Rotate();[m
[31m-            rotate.setPivotX(GameBoardSetup.getCenterX());[m
[31m-            rotate.setPivotY(GameBoardSetup.getCenterY());[m
[31m-            imageView.getTransforms().add(rotate);[m
[31m-        }[m
[31m-        return (Rotate) imageView.getTransforms().get(0);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Swaps the positions of two player tokens.[m
[31m-     * @param player1 The first player to swap.[m
[31m-     * @param player2 The second player to swap.[m
[31m-     */[m
[31m-    public void swapTokenPositions(Player player1, Player player2) {[m
[31m-        ImageView token1 = player1.getTokenImageView();[m
[31m-        ImageView token2 = player2.getTokenImageView();[m
[31m-[m
[31m-        Timeline delayTimeline = new Timeline(new KeyFrame(Duration.millis(888), event -> {[m
[31m-            // Store the original positions of the tokens[m
[31m-            double token1X = token1.getX();[m
[31m-            double token1Y = token1.getY();[m
[31m-            Rotate token1Rotate = getRotation(token1);[m
[31m-            double token1Angle = token1Rotate.getAngle();[m
[31m-[m
[31m-            double token2X = token2.getX();[m
[31m-            double token2Y = token2.getY();[m
[31m-            Rotate token2Rotate = getRotation(token2);[m
[31m-            double token2Angle = token2Rotate.getAngle();[m
[31m-[m
[31m-            // Swap positions[m
[31m-            token1.setX(token2X);[m
[31m-            token1.setY(token2Y);[m
[31m-            token1Rotate.setAngle(token2Angle);[m
[31m-[m
[31m-            token2.setX(token1X);[m
[31m-            token2.setY(token1Y);[m
[31m-            token2Rotate.setAngle(token1Angle);[m
[31m-[m
[31m-            // Ensure tokens are properly displayed in the front[m
[31m-            token1.toFront();[m
[31m-            token2.toFront();[m
[31m-        }));[m
[31m-        delayTimeline.play();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Finds a player by their name.[m
[31m-     * @param playerName The name of the player to find.[m
[31m-     * @return The player if found, otherwise null.[m
[31m-     */[m
[31m-    public Player findPlayerByName(String playerName) {[m
[31m-        for (Player player : players) {[m
[31m-            if (player.getPlayerName().equals(playerName)) {[m
[31m-                return player;[m
[31m-            }[m
[31m-        }[m
[31m-        return null; // Return null if no player is found with the given name[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Resets the list of players.[m
[31m-     */[m
[31m-    public void reset() {[m
[31m-        players.clear();[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the list of players.[m
[31m-     * @param playerOrder The list of players to set.[m
[31m-     */[m
[31m-    public void setPlayers(LinkedList<Player> playerOrder) {[m
[31m-        players = playerOrder;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Retrieves the list of players.[m
[31m-     * @return The list of players.[m
[31m-     */[m
[31m-    public LinkedList<Player> getPlayers() {[m
[31m-        return players;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Retrieves the current player.[m
[31m-     * @return The current player.[m
[31m-     */[m
[31m-    public Player getCurrentPlayer() {[m
[31m-        return currentPlayer;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the current player.[m
[31m-     * @param currentPlayer The current player to set.[m
[31m-     */[m
[31m-    public void setCurrentPlayer(Player currentPlayer) {[m
[31m-        this.currentPlayer = currentPlayer;[m
[31m-    }[m
[31m-}[m
[31m-[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/SquareManager.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/SquareManager.java[m
[1mdeleted file mode 100644[m
[1mindex fddc67c..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/services/SquareManager.java[m	
[1m+++ /dev/null[m
[36m@@ -1,211 +0,0 @@[m
[31m-package com.example.fierydragons.services;[m
[31m-[m
[31m-import com.example.fierydragons.factories.PowerUpFactory;[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.power_ups.PowerUp;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import org.json.JSONObject;[m
[31m-[m
[31m-import java.security.SecureRandom;[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Collections;[m
[31m-import java.util.LinkedList;[m
[31m-import java.util.List;[m
[31m-[m
[31m-/**[m
[31m- * SquareManager class manages the board squares and player positions.[m
[31m- * @author @jaden, @glenn and @kevin worked on updating player movements using the square manager[m
[31m- */[m
[31m-public class SquareManager {[m
[31m-    // Private instance of the SquareManager class[m
[31m-    private static SquareManager instance;[m
[31m-    // List of Squares for the current board[m
[31m-    private LinkedList<Square> boardSquares = new LinkedList<>();[m
[31m-    // Number of Squares on the current board[m
[31m-    private int totalSquares;[m
[31m-    private int squaresPerCard;[m
[31m-[m
[31m-    /**[m
[31m-     * Private constructor to prevent instantiation.[m
[31m-     */[m
[31m-    private SquareManager() {}[m
[31m-[m
[31m-    /**[m
[31m-     * Singleton method to get the instance of SquareManager.[m
[31m-     * @return The singleton instance of SquareManager.[m
[31m-     */[m
[31m-    public static SquareManager getInstance() {[m
[31m-        if (instance == null) {[m
[31m-            instance = new SquareManager();[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Serializes the SquareManager object to a JSONObject.[m
[31m-     * @return A JSONObject representing the SquareManager.[m
[31m-     */[m
[31m-    public JSONObject toJSON() {[m
[31m-        JSONObject json = new JSONObject();[m
[31m-[m
[31m-        json.put("totalSquares", this.totalSquares);[m
[31m-        json.put("squaresPerCard", this.squaresPerCard);[m
[31m-[m
[31m-        return json;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Deserializes a JSONObject to a SquareManager object.[m
[31m-     * @param json The JSONObject representing the SquareManager.[m
[31m-     */[m
[31m-    public static void fromJSON(JSONObject json) {[m
[31m-        instance = getInstance();[m
[31m-[m
[31m-        instance.totalSquares = json.getInt("totalSquares");[m
[31m-        instance.squaresPerCard = json.getInt("squaresPerCard");[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Finds the position of a player on the board.[m
[31m-     * @param player The player whose position is to be found.[m
[31m-     * @return The position of the player on the board.[m
[31m-     */[m
[31m-    public int findPlayerPosition(Player player) {[m
[31m-        return boardSquares.indexOf(player.getCurrentSquare());[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Updates the position of a player on the board.[m
[31m-     * @param player The player whose position is to be updated.[m
[31m-     * @param currentPlayerSquare The current square of the player.[m
[31m-     * @param newPlayerSquare The new square of the player.[m
[31m-     */[m
[31m-    public void updatePlayerPosition(Player player, Square currentPlayerSquare, Square newPlayerSquare) {[m
[31m-        PowerUp newSquarePowerUp = newPlayerSquare.getPowerUp();[m
[31m-[m
[31m-        // Set the current Square of the Player to empty[m
[31m-        currentPlayerSquare.setCurrentPlayer(null);[m
[31m-[m
[31m-        // Update the player's current square[m
[31m-        player.setCurrentSquare(newPlayerSquare);[m
[31m-[m
[31m-        // Move current Player to the new square[m
[31m-        newPlayerSquare.setCurrentPlayer(player);[m
[31m-[m
[31m-        // Sets the power up on the square to the player.[m
[31m-        if (newSquarePowerUp != null) {[m
[31m-            player.setAvailablePowerUp(newSquarePowerUp);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Checks if a square is empty or can be moved to by the player.[m
[31m-     * @param newPlayerPosition The new position of the player.[m
[31m-     * @param player The player moving to the new position.[m
[31m-     * @param isWin Indicates if the move is a winning move.[m
[31m-     * @return True if the square is empty or can be moved to, false otherwise.[m
[31m-     */[m
[31m-    public boolean emptySquare(int newPlayerPosition, Player player, boolean isWin) {[m
[31m-        Square targetSquare = isWin ? boardSquares.get(Math.floorMod(newPlayerPosition - 1, boardSquares.size()))[m
[31m-                : boardSquares.get(Math.floorMod(newPlayerPosition, boardSquares.size()));[m
[31m-        Player playerOnTargetSquare = targetSquare.getCurrentPlayer();[m
[31m-        Cave targetSquareCave = targetSquare.getCave();[m
[31m-[m
[31m-        // If checking win condition and previous square's cave is occupied, block the move[m
[31m-        if (isWin) {[m
[31m-            Cave winConditionCave = targetSquare.getCave();[m
[31m-            if (winConditionCave != null && winConditionCave.getPlayerOccupiedBy() != null) {[m
[31m-                return false;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        // Check for the regular non-win condition[m
[31m-        if (targetSquareCave != null) {[m
[31m-            // If the cave is occupied but the square itself isn't, it's still considered empty[m
[31m-            if (targetSquareCave.getPlayerOccupiedBy() != null && playerOnTargetSquare == null) {[m
[31m-                return true;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        // Return true if the target square is unoccupied or occupied by the same player moving[m
[31m-        return playerOnTargetSquare == null || playerOnTargetSquare == player;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets power-ups on random squares of the board.[m
[31m-     */[m
[31m-    public void setPowerUps() {[m
[31m-        int numOfSquares = totalSquares / 4;  // Adjust this to set the proportion of squares receiving power-ups[m
[31m-        SecureRandom random = new SecureRandom();[m
[31m-        long seed = System.nanoTime(); // Use nanoTime() as seed for randomness[m
[31m-        random.setSeed(seed);[m
[31m-[m
[31m-        List<Integer> indices = new ArrayList<>();[m
[31m-        for (int i = 0; i < boardSquares.size(); i++) {[m
[31m-            if (boardSquares.get(i).getCave() == null) {  // Only add index if square has no cave[m
[31m-                indices.add(i);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        Collections.shuffle(indices, random);  // Shuffle the list of indices[m
[31m-[m
[31m-        // Adjust the number of power-ups to the actual number of eligible squares if necessary[m
[31m-        int powerUpCount = Math.min(numOfSquares, indices.size());[m
[31m-        for (int i = 0; i < powerUpCount; i++) {[m
[31m-            PowerUp randomPowerUp = PowerUpFactory.createPowerUp();  // Get a random PowerUp[m
[31m-            int squareIndex = indices.get(i);  // Get a unique shuffled index[m
[31m-            Square squareToSet = boardSquares.get(squareIndex);  // Retrieve the square at the unique index[m
[31m-[m
[31m-            squareToSet.setPowerUp(randomPowerUp);  // Set the PowerUp to the square[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Adds a square to the list of board squares.[m
[31m-     * @param square The square to add.[m
[31m-     */[m
[31m-    public void addSquare(Square square) {[m
[31m-        boardSquares.add(square);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the list of board squares.[m
[31m-     * @return The list of board squares.[m
[31m-     */[m
[31m-    public List<Square> getBoardSquares() {[m
[31m-        return boardSquares;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the total number of squares on the board.[m
[31m-     * @return The total number of squares on the board.[m
[31m-     */[m
[31m-    public int getTotalSquares() {[m
[31m-        return totalSquares;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the total number of squares on the board.[m
[31m-     * @param totalSquares The total number of squares to set.[m
[31m-     */[m
[31m-    public void setTotalSquares(int totalSquares) {[m
[31m-        this.totalSquares = totalSquares;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the number of squares per card.[m
[31m-     * @return The number of squares per card.[m
[31m-     */[m
[31m-    public int getSquaresPerCard() {[m
[31m-        return squaresPerCard;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Sets the number of squares per card.[m
[31m-     * @param squaresPerCard The number of squares per card to set.[m
[31m-     */[m
[31m-    public void setSquaresPerCard(int squaresPerCard) {[m
[31m-        this.squaresPerCard = squaresPerCard;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/CardConfiguration.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/CardConfiguration.java[m
[1mdeleted file mode 100644[m
[1mindex d095f28..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/CardConfiguration.java[m	
[1m+++ /dev/null[m
[36m@@ -1,107 +0,0 @@[m
[31m-package com.example.fierydragons.utils;[m
[31m-[m
[31m-import com.example.fierydragons.models.animal_types.*;[m
[31m-[m
[31m-import java.util.Arrays;[m
[31m-import java.util.Random;[m
[31m-[m
[31m-/**[m
[31m- * The CardConfiguration class provides configurations for Volcano cards.[m
[31m- * @author: @william created the initial generation of cards[m
[31m- */[m
[31m-public class CardConfiguration {[m
[31m-    /** An array indicating whether each card is a cut card or not. */[m
[31m-    public static final boolean[] CUT_CARD_INDICATORS = {true, false, true, false, true, false, true, false};[m
[31m-[m
[31m-    /** The configurations of cards, where each element represents an animal within a VolcanoCard. */[m
[31m-    public static final Animal[][] CARD_CONFIGURATIONS = {[m
[31m-            {new BabyDragon(), new Bat(), new Spider()},[m
[31m-            {new Spider(), new Bat(), new Salamander()},[m
[31m-            {new Salamander(), new Spider(), new Bat()},[m
[31m-            {new BabyDragon(), new Salamander(), new Bat()},[m
[31m-            {new Spider(), new Salamander(), new BabyDragon()},[m
[31m-            {new Bat(), new BabyDragon(), new Salamander()},[m
[31m-            {new Bat(), new Spider(), new BabyDragon()},[m
[31m-            {new Salamander(), new BabyDragon(), new Spider()}[m
[31m-    };[m
[31m-[m
[31m-    /**[m
[31m-     * Generates an array indicating whether each card is a cut card or not.[m
[31m-     *[m
[31m-     * @param numPlayers The number of players in the game.[m
[31m-     * @param totalCards The total number of cards in the game.[m
[31m-     * @return An array indicating whether each card is a cut card or not.[m
[31m-     * @throws IllegalArgumentException if the number of players is less than 2 or greater than the total number of cards.[m
[31m-     */[m
[31m-    public static boolean[] generateCutCardIndicators(int numPlayers, int totalCards) {[m
[31m-        boolean[] cutCardIndicators = new boolean[totalCards];[m
[31m-[m
[31m-        if (numPlayers < 2 || numPlayers > totalCards) {[m
[31m-            throw new IllegalArgumentException("Invalid number of players or total cards.");[m
[31m-        }[m
[31m-[m
[31m-        int numCutCards = numPlayers;[m
[31m-[m
[31m-        // Randomly select positions for cut cards[m
[31m-        Random random = new Random();[m
[31m-        for (int i = 0; i < numCutCards; i++) {[m
[31m-            int position = random.nextInt(totalCards);[m
[31m-            while (cutCardIndicators[position]) {[m
[31m-                position = random.nextInt(totalCards);[m
[31m-            }[m
[31m-            cutCardIndicators[position] = true;[m
[31m-        }[m
[31m-[m
[31m-        return cutCardIndicators;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Shuffles the card configurations and returns a new array.[m
[31m-     *[m
[31m-     * @return A new array of shuffled card configurations.[m
[31m-     */[m
[31m-    public static Animal[][] shuffleCardConfigurations() {[m
[31m-        Animal[][] shuffledConfigurations = new Animal[CARD_CONFIGURATIONS.length][];[m
[31m-[m
[31m-        // Create separate arrays for cut cards and non-cut cards[m
[31m-        Animal[][] cutCards = new Animal[CUT_CARD_INDICATORS.length / 2][];[m
[31m-        Animal[][] nonCutCards = new Animal[CUT_CARD_INDICATORS.length / 2][];[m
[31m-[m
[31m-        int cutCardIndex = 0;[m
[31m-        int nonCutCardIndex = 0;[m
[31m-        for (int i = 0; i < CUT_CARD_INDICATORS.length; i++) {[m
[31m-            if (CUT_CARD_INDICATORS[i]) {[m
[31m-                cutCards[cutCardIndex++] = CARD_CONFIGURATIONS[i];[m
[31m-            } else {[m
[31m-                nonCutCards[nonCutCardIndex++] = CARD_CONFIGURATIONS[i];[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        // Shuffle cut cards and non-cut cards separately[m
[31m-        shuffleArray(cutCards);[m
[31m-        shuffleArray(nonCutCards);[m
[31m-[m
[31m-        // Merge the shuffled cut cards and non-cut cards back into the shuffledConfigurations array[m
[31m-        cutCardIndex = 0;[m
[31m-        nonCutCardIndex = 0;[m
[31m-        for (int i = 0; i < CUT_CARD_INDICATORS.length; i++) {[m
[31m-            if (CUT_CARD_INDICATORS[i]) {[m
[31m-                shuffledConfigurations[i] = cutCards[cutCardIndex++];[m
[31m-            } else {[m
[31m-                shuffledConfigurations[i] = nonCutCards[nonCutCardIndex++];[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        return shuffledConfigurations;[m
[31m-    }[m
[31m-[m
[31m-    private static void shuffleArray(Animal[][] array) {[m
[31m-        Random random = new Random();[m
[31m-        for (int i = array.length - 1; i > 0; i--) {[m
[31m-            int index = random.nextInt(i + 1);[m
[31m-            Animal[] temp = array[index];[m
[31m-            array[index] = array[i];[m
[31m-            array[i] = temp;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/GameBoardSetup.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/GameBoardSetup.java[m
[1mdeleted file mode 100644[m
[1mindex 14556a5..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/GameBoardSetup.java[m	
[1m+++ /dev/null[m
[36m@@ -1,172 +0,0 @@[m
[31m-package com.example.fierydragons.utils;[m
[31m-[m
[31m-import com.example.fierydragons.models.Player;[m
[31m-import com.example.fierydragons.models.caves.Cave;[m
[31m-import com.example.fierydragons.models.squares.Square;[m
[31m-import com.example.fierydragons.services.PlayerManager;[m
[31m-import com.example.fierydragons.services.SquareManager;[m
[31m-import javafx.scene.layout.Pane;[m
[31m-import javafx.scene.shape.Line;[m
[31m-import javafx.scene.paint.Color;[m
[31m-import javafx.scene.image.ImageView;[m
[31m-import javafx.scene.image.Image;[m
[31m-[m
[31m-import java.util.List;[m
[31m-[m
[31m-/**[m
[31m- * The GameBoardSetup class is responsible for setting up the game board layout, including squares, lines, and images.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class GameBoardSetup {[m
[31m-[m
[31m-    // Public static variables used to get the angle to rotate on the board later on[m
[31m-    private static int numberOfSections;[m
[31m-    private static double centerX; // Center X of both circles[m
[31m-    private static double centerY; // Center Y of both circles[m
[31m-    private final Pane boardPane; // The Pane to which you add the ImageView and lines[m
[31m-    private final double outerCircleRadius; // Blue circle radius[m
[31m-    private final double innerCircleRadius; // Green circle radius[m
[31m-[m
[31m-    /**[m
[31m-     * Constructs a GameBoardSetup object with the specified parameters.[m
[31m-     *[m
[31m-     * @param boardPane        The Pane where the board setup will be applied.[m
[31m-     * @param outerCircleRadius The radius of the outer circle.[m
[31m-     * @param innerCircleRadius The radius of the inner circle.[m
[31m-     * @param centerX           The X-coordinate of the center of both circles.[m
[31m-     * @param centerY           The Y-coordinate of the center of both circles.[m
[31m-     */[m
[31m-    public GameBoardSetup(Pane boardPane, double outerCircleRadius, double innerCircleRadius, double centerX, double centerY) {[m
[31m-        this.boardPane = boardPane;[m
[31m-        this.outerCircleRadius = outerCircleRadius;[m
[31m-        this.innerCircleRadius = innerCircleRadius;[m
[31m-        this.centerX = centerX;[m
[31m-        this.centerY = centerY;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Initialises the game board layout with the specified number of sections.[m
[31m-     *[m
[31m-     * @param numberOfSections The number of sections on the game board.[m
[31m-     */[m
[31m-    public void initialiseBoard(int numberOfSections) {[m
[31m-        this.numberOfSections = numberOfSections;[m
[31m-[m
[31m-        List<Square> boardSquares = SquareManager.getInstance().getBoardSquares();[m
[31m-[m
[31m-        double angleStep = 2 * Math.PI / numberOfSections;[m
[31m-        double halfAngleStep = angleStep / 2;  // Half the angle between sections[m
[31m-[m
[31m-        for (int i = 0; i < numberOfSections; i++) {[m
[31m-            Square square = boardSquares.get(i);[m
[31m-            Image animalImage = square.getAnimalType().getAnimalImage();[m
[31m-[m
[31m-            double angleForLine = i * angleStep;[m
[31m-            double angleForImageView = angleForLine + halfAngleStep;  // Offset to place ImageView in the center of the section[m
[31m-[m
[31m-            double bottomPlacement = innerCircleRadius + 20;[m
[31m-            double imageViewX = centerX + bottomPlacement * Math.cos(angleForImageView);[m
[31m-            double imageViewY = centerY + bottomPlacement * Math.sin(angleForImageView);[m
[31m-            ImageView animalImageView = new ImageView(animalImage);[m
[31m-            addImageView(animalImageView, imageViewX, imageViewY, 35, 35);[m
[31m-[m
[31m-            // Position for the cave image[m
[31m-            double caveImageViewX = centerX + (outerCircleRadius + 20) * Math.cos(angleForImageView);[m
[31m-            double caveImageViewY = centerY + (outerCircleRadius + 20) * Math.sin(angleForImageView);[m
[31m-[m
[31m-            // Add the cave ImageView[m
[31m-            Cave currentCave = square.getCave();[m
[31m-            if (currentCave != null) {[m
[31m-                ImageView caveImageView = new ImageView(currentCave.getCaveImage());[m
[31m-                addImageView(caveImageView, caveImageViewX, caveImageViewY, 100, 100);[m
[31m-                // If the current cave is occupied by a player, add a token for this player[m
[31m-                if (currentCave.getPlayerOccupiedBy() != null) {[m
[31m-                    Player playerOnCave = currentCave.getPlayerOccupiedBy();[m
[31m-                    ImageView tokenImageView = new ImageView(playerOnCave.getDragonToken().getDragonImage());[m
[31m-                    playerOnCave.setTokenImageView(tokenImageView);[m
[31m-                    addImageView(tokenImageView, caveImageViewX, caveImageViewY, 50, 50);[m
[31m-                    tokenImageView.toFront();[m
[31m-                }[m
[31m-            } else {[m
[31m-                Player currentPlayer = square.getCurrentPlayer();[m
[31m-                if (currentPlayer != null) {[m
[31m-                    ImageView playerToken = new ImageView(currentPlayer.getDragonToken().getDragonImage());[m
[31m-                    currentPlayer.setTokenImageView(playerToken);[m
[31m-                    addImageView(playerToken, caveImageViewX, caveImageViewY, 50, 50);[m
[31m-                    PlayerManager.getInstance().movePlayerOutOfCave(currentPlayer);[m
[31m-                    playerToken.toFront();[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            // Calculate positions for separator lines[m
[31m-            Line separatorLine = createLine(angleForLine);[m
[31m-            boardPane.getChildren().add(separatorLine);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-    /**[m
[31m-     * Creates a line segment between the outer and inner circles at the specified angle.[m
[31m-     *[m
[31m-     * @param angleForLine The angle at which to create the line segment.[m
[31m-     * @return A Line object representing the line segment.[m
[31m-     */[m
[31m-    private Line createLine(double angleForLine) {[m
[31m-        double outerX = centerX + outerCircleRadius * Math.cos(angleForLine);[m
[31m-        double outerY = centerY + outerCircleRadius * Math.sin(angleForLine);[m
[31m-        double innerX = centerX + innerCircleRadius * Math.cos(angleForLine);[m
[31m-        double innerY = centerY + innerCircleRadius * Math.sin(angleForLine);[m
[31m-[m
[31m-        Line separatorLine = new Line(outerX, outerY, innerX, innerY);[m
[31m-        separatorLine.setStroke(Color.BLACK);[m
[31m-        separatorLine.setStrokeWidth(2); // Adjust the line thickness as needed[m
[31m-        return separatorLine;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Adds an ImageView to the boardPane at the specified position and size.[m
[31m-     *[m
[31m-     * @param imageView    The ImageView to add.[m
[31m-     * @param imageViewX   The X-coordinate of the ImageView's position.[m
[31m-     * @param imageViewY   The Y-coordinate of the ImageView's position.[m
[31m-     * @param imageHeight  The height of the ImageView.[m
[31m-     * @param imageWidth   The width of the ImageView.[m
[31m-     */[m
[31m-    private void addImageView(ImageView imageView, double imageViewX, double imageViewY, int imageHeight, int imageWidth) {[m
[31m-        imageView.setPreserveRatio(true);[m
[31m-        imageView.setFitHeight(imageHeight); // Adjust the size as needed[m
[31m-        imageView.setFitWidth(imageWidth);  // Adjust the size as needed[m
[31m-        imageView.setX(imageViewX - imageView.getFitWidth() / 2); // Adjust for centering[m
[31m-        imageView.setY(imageViewY - imageView.getFitHeight() / 2); // Adjust for centering[m
[31m-        boardPane.getChildren().add(imageView);[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the number of sections in the board.[m
[31m-     *[m
[31m-     * @return the number of sections in the board.[m
[31m-     */[m
[31m-    public static int getNumberOfSections() {[m
[31m-        return numberOfSections;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the X-coordinate of the center of the board.[m
[31m-     *[m
[31m-     * @return the X-coordinate of the center of the board.[m
[31m-     */[m
[31m-    public static double getCenterX() {[m
[31m-        return centerX;[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Returns the Y-coordinate of the center of the board.[m
[31m-     *[m
[31m-     * @return the Y-coordinate of the center of the board.[m
[31m-     */[m
[31m-    public static double getCenterY() {[m
[31m-        return centerY;[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/SwitchScene.java b/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/SwitchScene.java[m
[1mdeleted file mode 100644[m
[1mindex 2da9ee9..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/com/example/fierydragons/utils/SwitchScene.java[m	
[1m+++ /dev/null[m
[36m@@ -1,37 +0,0 @@[m
[31m-package com.example.fierydragons.utils;[m
[31m-[m
[31m-import javafx.event.ActionEvent;[m
[31m-import javafx.fxml.FXMLLoader;[m
[31m-import javafx.scene.Node;[m
[31m-import javafx.scene.Parent;[m
[31m-import javafx.scene.Scene;[m
[31m-import javafx.stage.Stage;[m
[31m-[m
[31m-import java.io.IOException;[m
[31m-[m
[31m-/**[m
[31m- * The SwitchScene class is responsible for handling scene transitions in the JavaFX application.[m
[31m- * @author: Taken from Jaden's Sprint 2[m
[31m- */[m
[31m-public class SwitchScene {[m
[31m-    private static final String BASE_PATH = "/com/example/fierydragons/";[m
[31m-[m
[31m-    /**[m
[31m-     * Switches the scene to the specified FXML file.[m
[31m-     *[m
[31m-     * @param event        The ActionEvent triggering the scene switch.[m
[31m-     * @param classInstance The class instance used to access the resource.[m
[31m-     * @param fxmlFile     The name of the FXML file to switch to.[m
[31m-     * @throws IOException If an error occurs while loading the FXML file.[m
[31m-     */[m
[31m-    public void switchScene(ActionEvent event, Class<?> classInstance, String fxmlFile) throws IOException {[m
[31m-        Parent nextView = FXMLLoader.load(classInstance.getResource(BASE_PATH + fxmlFile));[m
[31m-        Scene nextScene = new Scene(nextView, 1366, 768);[m
[31m-[m
[31m-        // Get the Stage information[m
[31m-        Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();[m
[31m-[m
[31m-        window.setScene(nextScene);[m
[31m-        window.show();[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/java/module-info.java b/Project/Sprint Four/fiery-dragons/src/main/java/module-info.java[m
[1mdeleted file mode 100644[m
[1mindex e7f3ae3..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/java/module-info.java[m	
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-module com.example.fierydragons {[m
[31m-    requires javafx.controls;[m
[31m-    requires javafx.fxml;[m
[31m-    requires javafx.web;[m
[31m-[m
[31m-    requires org.controlsfx.controls;[m
[31m-    requires net.synedra.validatorfx;[m
[31m-    requires org.kordamp.ikonli.javafx;[m
[31m-    requires eu.hansolo.tilesfx;[m
[31m-    requires com.almasb.fxgl.all;[m
[31m-    requires org.json;[m
[31m-[m
[31m-    opens com.example.fierydragons to javafx.fxml;[m
[31m-    exports com.example.fierydragons;[m
[31m-    exports com.example.fierydragons.controllers;[m
[31m-    exports com.example.fierydragons.utils;[m
[31m-    opens com.example.fierydragons.controllers to javafx.fxml;[m
[31m-    exports com.example.fierydragons.models;[m
[31m-    exports com.example.fierydragons.models.caves;[m
[31m-    opens com.example.fierydragons.models to javafx.fxml;[m
[31m-    exports com.example.fierydragons.models.squares;[m
[31m-    opens com.example.fierydragons.models.squares to javafx.fxml;[m
[31m-    exports com.example.fierydragons.models.dragon_types;[m
[31m-    exports com.example.fierydragons.models.animal_types;[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/META-INF/MANIFEST.MF b/Project/Sprint Four/fiery-dragons/src/main/resources/META-INF/MANIFEST.MF[m
[1mdeleted file mode 100644[m
[1mindex d4e055f..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/META-INF/MANIFEST.MF[m	
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-Manifest-Version: 1.0[m
[31m-Main-Class: com.example.fierydragons.FieryDragonsApplication[m
[31m-[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/confirm-players-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/confirm-players-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex 87a48ea..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/confirm-players-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,43 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.ConfirmPlayerController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="443.0" fitWidth="500.0" layoutX="462.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/icons/game_logo.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fx:id="twoPlayers" fitHeight="130.0" fitWidth="547.0" layoutX="409.0" layoutY="447.0" pickOnBounds="true" preserveRatio="true" visible="false">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/2_players.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="151.0" fitWidth="336.0" layoutX="7.0" layoutY="8.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/back_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="111.0" fitWidth="291.0" layoutX="545.0" layoutY="596.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/yes_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="26.0" layoutY="17.0" mnemonicParsing="false" onAction="#onBackButtonClick" opacity="0.0" prefHeight="113.0" prefWidth="281.0" text="back" />[m
[31m-      <ImageView fx:id="threePlayers" fitHeight="130.0" fitWidth="547.0" layoutX="409.0" layoutY="447.0" pickOnBounds="true" preserveRatio="true" visible="false">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/3_players.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fx:id="fourPlayers" fitHeight="130.0" fitWidth="547.0" layoutX="409.0" layoutY="447.0" pickOnBounds="true" preserveRatio="true" visible="false">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/4_players.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="598.0" layoutY="594.0" mnemonicParsing="false" onAction="#onYesButtonClick" opacity="0.0" prefHeight="117.0" prefWidth="171.0" text="yes" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/enter-card-square-info-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/enter-card-square-info-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex eb63a5d..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/enter-card-square-info-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,49 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.control.TextField?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-<?import javafx.scene.text.Font?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.SetCardSquareInfoController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="443.0" fitWidth="604.0" layoutX="462.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/icons/game_logo.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="151.0" fitWidth="336.0" layoutX="7.0" layoutY="8.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/back_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="23.0" layoutY="14.0" mnemonicParsing="false" onAction="#onBackButtonClick" opacity="0.0" prefHeight="120.0" prefWidth="287.0" text="back" />[m
[31m-      <TextField fx:id="cardField" alignment="CENTER" layoutX="165.0" layoutY="505.0" prefHeight="63.0" prefWidth="390.0">[m
[31m-         <font>[m
[31m-            <Font size="18.0" />[m
[31m-         </font></TextField>[m
[31m-      <ImageView fitHeight="120.0" fitWidth="304.0" layoutX="540.0" layoutY="625.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/confirm.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <TextField fx:id="squareField" alignment="CENTER" layoutX="803.0" layoutY="505.0" prefHeight="63.0" prefWidth="390.0">[m
[31m-         <font>[m
[31m-            <Font size="18.0" />[m
[31m-         </font>[m
[31m-      </TextField>[m
[31m-      <ImageView fitHeight="32.0" fitWidth="474.0" layoutX="123.0" layoutY="442.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/card_prompt.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="35.0" fitWidth="629.0" layoutX="683.0" layoutY="442.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/square_prompt.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button fx:id="confirmButton" layoutX="540.0" layoutY="625.0" mnemonicParsing="false" onAction="#onConfirmButtonClick" opacity="0.0" prefHeight="111.0" prefWidth="287.0" text="confirm" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/enter-player-info-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/enter-player-info-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex ffc3dfa..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/enter-player-info-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,41 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.control.DatePicker?>[m
[31m-<?import javafx.scene.control.TextField?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-<?import javafx.scene.text.Font?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.SetPlayerInfoController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="443.0" fitWidth="604.0" layoutX="462.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/icons/game_logo.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="61.0" fitWidth="1031.0" layoutX="168.0" layoutY="443.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/PleaseenteranameandtheDateofBirthforthePlayer.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="151.0" fitWidth="336.0" layoutX="7.0" layoutY="8.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/back_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="23.0" layoutY="14.0" mnemonicParsing="false" onAction="#onBackButtonClick" opacity="0.0" prefHeight="120.0" prefWidth="287.0" text="back" />[m
[31m-      <TextField fx:id="textField" alignment="CENTER" layoutX="301.0" layoutY="505.0" prefHeight="63.0" prefWidth="323.0">[m
[31m-         <font>[m
[31m-            <Font size="24.0" />[m
[31m-         </font></TextField>[m
[31m-      <ImageView fitHeight="120.0" fitWidth="304.0" layoutX="540.0" layoutY="625.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/confirm.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button fx:id="confirmButton" disable="true" layoutX="555.0" layoutY="632.0" mnemonicParsing="false" onAction="#onConfirmButtonClick" opacity="0.0" prefHeight="90.0" prefWidth="256.0" text="confirm" />[m
[31m-      <DatePicker fx:id="dobField" layoutX="744.0" layoutY="505.0" prefHeight="63.0" prefWidth="323.0" style="-fx-font-size: 20px; -fx-alignment: center;" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/home-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/home-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex 1d22638..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/home-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,44 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-<?import javafx.scene.text.Font?>[m
[31m-[m
[31m-<Pane maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.HomeController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="164.0" fitWidth="462.0" layoutX="443.0" layoutY="587.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/start_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-[m
[31m-     <Button layoutX="460.0" layoutY="595.0" onAction="#onStartButtonClick" opacity="0.0" prefHeight="122.0" prefWidth="427.0" text="START GAME">[m
[31m-         <font>[m
[31m-            <Font name="Arial" size="19.0" />[m
[31m-         </font>[m
[31m-      </Button>[m
[31m-      <ImageView fitHeight="622.0" fitWidth="602.0" layoutX="384.0" layoutY="-7.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/icons/game_logo.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="145.0" fitWidth="361.0" layoutX="2.0" layoutY="26.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/rules_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="17.0" layoutY="32.0" onAction="#onRulesButtonClick" opacity="0.0" prefHeight="109.0" prefWidth="327.0" text="RULES">[m
[31m-         <font>[m
[31m-            <Font name="Arial" size="19.0" />[m
[31m-         </font>[m
[31m-      </Button>[m
[31m-      <ImageView fitHeight="171.0" fitWidth="418.0" layoutX="916.0" layoutY="33.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/load_game.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="929.0" layoutY="41.0" mnemonicParsing="false" onAction="#onLoadGameButtonClick" opacity="0.0" prefHeight="109.0" prefWidth="389.0" text="load GAME" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/main-game-board.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/main-game-board.fxml[m
[1mdeleted file mode 100644[m
[1mindex 45693b5..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/main-game-board.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,63 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-<?import javafx.scene.shape.Circle?>[m
[31m-<?import javafx.scene.text.Text?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.GameBoardController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="192.0" fitWidth="521.0" layoutX="801.0" layoutY="176.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/background%20grey.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="656.0" fitWidth="765.0" layoutX="86.0" layoutY="62.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/interfaces/board.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="43.0" fitWidth="123.0" layoutX="894.0" layoutY="328.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/Cave.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="120.0" fitWidth="285.0" layoutX="1049.0" layoutY="30.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/endgame.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="1060.0" layoutY="37.0" mnemonicParsing="false" onAction="#endTurn" opacity="0.0" prefHeight="92.0" prefWidth="260.0" text="end game" />[m
[31m-      <Pane fx:id="circlePane" layoutX="87.0" layoutY="62.0">[m
[31m-         <children>[m
[31m-            <Circle fill="DODGERBLUE" layoutX="328.0" layoutY="328.0" opacity="0.0" radius="328.0" stroke="BLACK" strokeType="INSIDE" />[m
[31m-            <Circle fill="#23ff1f" layoutX="325.0" layoutY="325.0" opacity="0.0" radius="207.0" stroke="BLACK" strokeType="INSIDE" />[m
[31m-         </children>[m
[31m-      </Pane>[m
[31m-      <ImageView fx:id="animalNeeded" fitHeight="175.0" fitWidth="180.0" layoutX="1124.0" layoutY="381.0" pickOnBounds="true" preserveRatio="true" />[m
[31m-      <ImageView fx:id="playerCave" fitHeight="165.0" fitWidth="185.0" layoutX="873.0" layoutY="386.0" pickOnBounds="true" preserveRatio="true" />[m
[31m-      <ImageView fitHeight="69.0" fitWidth="180.0" layoutX="1102.0" layoutY="328.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/Animal.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fx:id="currentPlayerToken" fitHeight="104.0" fitWidth="133.0" layoutX="1171.0" layoutY="176.0" pickOnBounds="true" preserveRatio="true" />[m
[31m-      <Text strokeType="OUTSIDE" strokeWidth="0.0" text="Text" />[m
[31m-      <Text fx:id="currentPlayerArea" layoutX="814.0" layoutY="241.0" strokeType="OUTSIDE" strokeWidth="0.0" wrappingWidth="340.0" />[m
[31m-      <ImageView fx:id="powerUpImage" fitHeight="165.0" fitWidth="185.0" layoutX="1122.0" layoutY="566.0" pickOnBounds="true" preserveRatio="true" />[m
[31m-      <ImageView fitHeight="150.0" fitWidth="200.0" layoutX="848.0" layoutY="628.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/PowerUp.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="104.0" fitWidth="285.0" layoutX="764.0" layoutY="40.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/save_game.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="762.0" layoutY="26.0" mnemonicParsing="false" onAction="#onSaveGameButtonClick" opacity="0.0" prefHeight="115.0" prefWidth="285.0" text="save game" />[m
[31m-      <ImageView fx:id="shieldImage" fitHeight="43.0" fitWidth="50.0" layoutX="1192.0" layoutY="135.0" pickOnBounds="true" preserveRatio="true" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/menu-popup-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/menu-popup-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex 661a028..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/menu-popup-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="250.0" style="-fx-background-color: #C4A484;" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.MenuPopupController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="150.0" fitWidth="200.0" layoutX="25.0" layoutY="100.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/resume.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="150.0" fitWidth="200.0" layoutX="25.0" layoutY="250.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/quit.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="34.0" layoutY="100.0" mnemonicParsing="false" onAction="#onResumeButtonClick" opacity="0.0" prefHeight="71.0" prefWidth="180.0" text="resume" />[m
[31m-      <Button layoutX="35.0" layoutY="237.0" mnemonicParsing="false" onAction="#onQuitButtonClick" opacity="0.0" prefHeight="65.0" prefWidth="180.0" text="quit" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/rules-page-2-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/rules-page-2-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex 62edce1..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/rules-page-2-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,43 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.RulesController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="755.0" fitWidth="1447.0" layoutX="-14.0" layoutY="12.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/interfaces/DALL·E2024-03-2521.211.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="91.0" fitWidth="157.0" layoutX="367.0" layoutY="144.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/back_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="93.0" fitWidth="474.0" layoutX="452.0" layoutY="217.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/Preparationofthegame.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="233.0" fitWidth="629.0" layoutX="391.0" layoutY="305.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/page_2_rules.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="35.0" fitWidth="27.0" layoutX="658.0" layoutY="551.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/page_2.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="126.0" fitWidth="96.0" layoutX="328.0" layoutY="337.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/polygon_left.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="376.0" layoutY="147.0" mnemonicParsing="false" onAction="#onBackButtonClick" opacity="0.0" prefHeight="59.0" prefWidth="138.0" text="back" />[m
[31m-      <Button layoutX="341.0" layoutY="339.0" mnemonicParsing="false" onAction="#onPageTwoPrevPageClick" opacity="0.0" prefHeight="84.0" prefWidth="65.0" text="prev_page" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/rules-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/rules-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex 2b3797f..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/rules-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,43 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.RulesController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="755.0" fitWidth="1447.0" layoutX="-14.0" layoutY="12.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/interfaces/DALL·E2024-03-2521.211.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="91.0" fitWidth="157.0" layoutX="367.0" layoutY="144.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/back_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="168.0" fitWidth="388.0" layoutX="493.0" layoutY="224.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/Aimofthegame.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="175.0" fitWidth="529.0" layoutX="410.0" layoutY="313.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/page_1_rules.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="35.0" fitWidth="27.0" layoutX="674.0" layoutY="548.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/page_1.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="126.0" fitWidth="96.0" layoutX="948.0" layoutY="337.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/polygon_right.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="376.0" layoutY="147.0" mnemonicParsing="false" onAction="#onBackButtonClick" opacity="0.0" prefHeight="59.0" prefWidth="138.0" text="back" />[m
[31m-      <Button layoutX="963.0" layoutY="344.0" mnemonicParsing="false" onAction="#onNextPageClick" opacity="0.0" prefHeight="73.0" prefWidth="60.0" text="next_page" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/select-players-view.fxml b/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/select-players-view.fxml[m
[1mdeleted file mode 100644[m
[1mindex 0e7c564..0000000[m
[1m--- a/Project/Sprint Four/fiery-dragons/src/main/resources/com/example/fierydragons/select-players-view.fxml[m	
[1m+++ /dev/null[m
[36m@@ -1,45 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-[m
[31m-<?import javafx.scene.control.Button?>[m
[31m-<?import javafx.scene.image.Image?>[m
[31m-<?import javafx.scene.image.ImageView?>[m
[31m-<?import javafx.scene.layout.Pane?>[m
[31m-[m
[31m-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="768.0" prefWidth="1366.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.fierydragons.controllers.PlayerSelectionController">[m
[31m-   <children>[m
[31m-      <ImageView fitHeight="443.0" fitWidth="604.0" layoutX="462.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/icons/game_logo.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="132.0" fitWidth="371.0" layoutX="498.0" layoutY="433.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/words/how_many_players.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="151.0" fitWidth="336.0" layoutX="7.0" layoutY="8.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/back_button.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="132.0" fitWidth="151.0" layoutX="432.0" layoutY="585.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/2.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <ImageView fitHeight="132.0" fitWidth="151.0" layoutX="616.0" layoutY="585.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/3.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="430.0" layoutY="584.0" mnemonicParsing="false" onAction="#onSelectTwoPlayers" opacity="0.0" prefHeight="135.0" prefWidth="145.0" text="2" />[m
[31m-      <ImageView fitHeight="132.0" fitWidth="151.0" layoutX="800.0" layoutY="585.0" pickOnBounds="true" preserveRatio="true">[m
[31m-         <image>[m
[31m-            <Image url="@../../../images/buttons/4.png" />[m
[31m-         </image>[m
[31m-      </ImageView>[m
[31m-      <Button layoutX="798.0" layoutY="582.0" mnemonicParsing="false" onAction="#onSelectFourPlayers" opacity="0.0" prefHeight="136.0" prefWidth="148.0" text="4" />[m
[31m-      <Button layoutX="615.0" layoutY="584.0" mnemonicParsing="false" onAction="#onSelectThreePlayers" opacity="0.0" prefHeight="135.0" prefWidth="144.0" text="3" />[m
[31m-      <Button layoutX="23.0" layoutY="14.0" mnemonicParsing="false" onAction="#onBackButtonClick" opacity="0.0" prefHeight="120.0" prefWidth="287.0" text="back" />[m
[31m-   </children>[m
[31m-</Pane>[m
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/2.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/2.png[m
[1mdeleted file mode 100644[m
[1mindex a8a537d..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/2.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/3.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/3.png[m
[1mdeleted file mode 100644[m
[1mindex 0443e2e..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/3.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/4.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/4.png[m
[1mdeleted file mode 100644[m
[1mindex 91a1ecd..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/4.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/Group133.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/Group133.png[m
[1mdeleted file mode 100644[m
[1mindex dce5622..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/Group133.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/back_button.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/back_button.png[m
[1mdeleted file mode 100644[m
[1mindex f04b181..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/back_button.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/confirm.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/confirm.png[m
[1mdeleted file mode 100644[m
[1mindex 0a5a0f0..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/confirm.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/endgame.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/endgame.png[m
[1mdeleted file mode 100644[m
[1mindex 94dd992..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/endgame.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/home.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/home.png[m
[1mdeleted file mode 100644[m
[1mindex ff51524..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/home.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/load_game.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/load_game.png[m
[1mdeleted file mode 100644[m
[1mindex 9b7ea9c..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/load_game.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/polygon_left.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/polygon_left.png[m
[1mdeleted file mode 100644[m
[1mindex ff041c0..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/polygon_left.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/polygon_right.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/polygon_right.png[m
[1mdeleted file mode 100644[m
[1mindex d19ac26..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/polygon_right.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/quit.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/quit.png[m
[1mdeleted file mode 100644[m
[1mindex ceed7d3..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/quit.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/resume.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/resume.png[m
[1mdeleted file mode 100644[m
[1mindex 34baf3e..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/resume.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/rules_button.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/rules_button.png[m
[1mdeleted file mode 100644[m
[1mindex ce5acf1..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/rules_button.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/save_game.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/save_game.png[m
[1mdeleted file mode 100644[m
[1mindex 9b0b04f..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/save_game.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/start_button.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/start_button.png[m
[1mdeleted file mode 100644[m
[1mindex fa5f8f4..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/start_button.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/yes_button.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/yes_button.png[m
[1mdeleted file mode 100644[m
[1mindex 93401af..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/buttons/yes_button.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/babydragoncave.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/babydragoncave.png[m
[1mdeleted file mode 100644[m
[1mindex 87f5a81..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/babydragoncave.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/batcave.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/batcave.png[m
[1mdeleted file mode 100644[m
[1mindex e47a29e..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/batcave.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/salamandercave.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/salamandercave.png[m
[1mdeleted file mode 100644[m
[1mindex d5689b8..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/salamandercave.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/spidercave.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/spidercave.png[m
[1mdeleted file mode 100644[m
[1mindex 230490a..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/caves/spidercave.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xBabyDragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xBabyDragon.png[m
[1mdeleted file mode 100644[m
[1mindex 1311e06..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xBabyDragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xBat.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xBat.png[m
[1mdeleted file mode 100644[m
[1mindex 9077469..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xBat.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xPirate.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xPirate.png[m
[1mdeleted file mode 100644[m
[1mindex af42ed3..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xPirate.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xSalamander.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xSalamander.png[m
[1mdeleted file mode 100644[m
[1mindex 2d610a4..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xSalamander.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xSpider.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xSpider.png[m
[1mdeleted file mode 100644[m
[1mindex dd7d8c9..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/1xSpider.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xBabyDragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xBabyDragon.png[m
[1mdeleted file mode 100644[m
[1mindex 7a8cb1e..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xBabyDragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xBat.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xBat.png[m
[1mdeleted file mode 100644[m
[1mindex 725c200..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xBat.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xPirate.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xPirate.png[m
[1mdeleted file mode 100644[m
[1mindex f6d3895..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xPirate.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xSalamander.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xSalamander.png[m
[1mdeleted file mode 100644[m
[1mindex d936087..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xSalamander.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xSpider.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xSpider.png[m
[1mdeleted file mode 100644[m
[1mindex d37bfba..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/2xSpider.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xBabyDragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xBabyDragon.png[m
[1mdeleted file mode 100644[m
[1mindex 7abd041..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xBabyDragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xBat.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xBat.png[m
[1mdeleted file mode 100644[m
[1mindex 6b0ef0a..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xBat.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xSalamander.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xSalamander.png[m
[1mdeleted file mode 100644[m
[1mindex b981031..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xSalamander.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xSpider.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xSpider.png[m
[1mdeleted file mode 100644[m
[1mindex 1d3b376..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/3xSpider.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/backward.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/backward.png[m
[1mdeleted file mode 100644[m
[1mindex 918eb9d..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/backward.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/chit.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/chit.png[m
[1mdeleted file mode 100644[m
[1mindex 4944223..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/chit/chit.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/baby_dragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/baby_dragon.png[m
[1mdeleted file mode 100644[m
[1mindex fc4100f..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/baby_dragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/bat.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/bat.png[m
[1mdeleted file mode 100644[m
[1mindex e1064eb..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/bat.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/chit_back.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/chit_back.png[m
[1mdeleted file mode 100644[m
[1mindex bdf6a3d..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/chit_back.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/chitback.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/chitback.png[m
[1mdeleted file mode 100644[m
[1mindex 88e936a..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/chitback.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/game_logo.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/game_logo.png[m
[1mdeleted file mode 100644[m
[1mindex 511b934..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/game_logo.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/pirate_dragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/pirate_dragon.png[m
[1mdeleted file mode 100644[m
[1mindex 1d265df..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/pirate_dragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/salamander.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/salamander.png[m
[1mdeleted file mode 100644[m
[1mindex c151db8..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/salamander.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/shield.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/shield.png[m
[1mdeleted file mode 100644[m
[1mindex fbfd976..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/shield.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/skip_turn.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/skip_turn.png[m
[1mdeleted file mode 100644[m
[1mindex 7ecdffe..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/skip_turn.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/spider.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/spider.png[m
[1mdeleted file mode 100644[m
[1mindex 83b215b..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/spider.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/swap_player.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/swap_player.png[m
[1mdeleted file mode 100644[m
[1mindex 5eb78ed..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/icons/swap_player.png and /dev/null differ
[1mdiff --git "a/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/DALL\302\267E2024-03-2521.211.png" "b/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/DALL\302\267E2024-03-2521.211.png"[m
[1mdeleted file mode 100644[m
[1mindex b1223fe..0000000[m
Binary files "a/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/DALL\302\267E2024-03-2521.211.png" and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/board.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/board.png[m
[1mdeleted file mode 100644[m
[1mindex 905151c..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/board.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/game_board.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/game_board.png[m
[1mdeleted file mode 100644[m
[1mindex 3a3ae4f..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/interfaces/game_board.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/earth_dragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/earth_dragon.png[m
[1mdeleted file mode 100644[m
[1mindex e061915..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/earth_dragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/fire_dragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/fire_dragon.png[m
[1mdeleted file mode 100644[m
[1mindex d595b14..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/fire_dragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/ice_dragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/ice_dragon.png[m
[1mdeleted file mode 100644[m
[1mindex cff2fda..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/ice_dragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/storm_dragon.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/storm_dragon.png[m
[1mdeleted file mode 100644[m
[1mindex 7d8c571..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/tokens/storm_dragon.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/2_players.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/2_players.png[m
[1mdeleted file mode 100644[m
[1mindex 9f40e95..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/2_players.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/3_players.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/3_players.png[m
[1mdeleted file mode 100644[m
[1mindex 8db7875..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/3_players.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/4_players.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/4_players.png[m
[1mdeleted file mode 100644[m
[1mindex efecbf8..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/4_players.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Aimofthegame.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Aimofthegame.png[m
[1mdeleted file mode 100644[m
[1mindex 03cf701..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Aimofthegame.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Animal.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Animal.png[m
[1mdeleted file mode 100644[m
[1mindex 2fa032f..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Animal.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/AnimalNeeded.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/AnimalNeeded.png[m
[1mdeleted file mode 100644[m
[1mindex d905d00..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/AnimalNeeded.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Cave.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Cave.png[m
[1mdeleted file mode 100644[m
[1mindex f3de4aa..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Cave.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Group134.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Group134.png[m
[1mdeleted file mode 100644[m
[1mindex c447cc6..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Group134.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/LoadGame.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/LoadGame.png[m
[1mdeleted file mode 100644[m
[1mindex 749f96d..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/LoadGame.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PleaseenteranameandtheDateofBirthforthePlayer.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PleaseenteranameandtheDateofBirthforthePlayer.png[m
[1mdeleted file mode 100644[m
[1mindex 2257e80..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PleaseenteranameandtheDateofBirthforthePlayer.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PleaseentertheDateofBirthofthePlayer.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PleaseentertheDateofBirthofthePlayer.png[m
[1mdeleted file mode 100644[m
[1mindex 084aed0..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PleaseentertheDateofBirthofthePlayer.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PowerUp.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PowerUp.png[m
[1mdeleted file mode 100644[m
[1mindex 3da4142..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/PowerUp.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Preparationofthegame.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Preparationofthegame.png[m
[1mdeleted file mode 100644[m
[1mindex 1278910..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Preparationofthegame.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/SaveGame.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/SaveGame.png[m
[1mdeleted file mode 100644[m
[1mindex 6880730..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/SaveGame.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/You_.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/You_.png[m
[1mdeleted file mode 100644[m
[1mindex 6945a57..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/You_.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Youneed_.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Youneed_.png[m
[1mdeleted file mode 100644[m
[1mindex d82fe17..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/Youneed_.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/background grey.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/background grey.png[m
[1mdeleted file mode 100644[m
[1mindex a558369..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/background grey.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/card_prompt.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/card_prompt.png[m
[1mdeleted file mode 100644[m
[1mindex 535fb94..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/card_prompt.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/currentplayer.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/currentplayer.png[m
[1mdeleted file mode 100644[m
[1mindex 27ee5fa..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/currentplayer.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/enter_name.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/enter_name.png[m
[1mdeleted file mode 100644[m
[1mindex 4c0f1bd..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/enter_name.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/how_many_players.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/how_many_players.png[m
[1mdeleted file mode 100644[m
[1mindex bf0a1c9..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/how_many_players.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_1.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_1.png[m
[1mdeleted file mode 100644[m
[1mindex 013ed23..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_1.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_2.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_2.png[m
[1mdeleted file mode 100644[m
[1mindex f49450d..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_2.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_3.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_3.png[m
[1mdeleted file mode 100644[m
[1mindex 6313a26..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_3.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_4.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_4.png[m
[1mdeleted file mode 100644[m
[1mindex f7d734b..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/name_4.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/next_player.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/next_player.png[m
[1mdeleted file mode 100644[m
[1mindex 457fc8e..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/next_player.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_1.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_1.png[m
[1mdeleted file mode 100644[m
[1mindex c96c478..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_1.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_1_rules.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_1_rules.png[m
[1mdeleted file mode 100644[m
[1mindex cc18922..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_1_rules.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_2.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_2.png[m
[1mdeleted file mode 100644[m
[1mindex e9de27a..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_2.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_2_rules.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_2_rules.png[m
[1mdeleted file mode 100644[m
[1mindex 80f3079..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/page_2_rules.png and /dev/null differ
[1mdiff --git a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/square_prompt.png b/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/square_prompt.png[m
[1mdeleted file mode 100644[m
[1mindex 6bb2f03..0000000[m
Binary files a/Project/Sprint Four/fiery-dragons/src/main/resources/images/words/square_prompt.png and /dev/null differ
[1mdiff --git a/Project/Sprint One/.gitkeep b/Project/Sprint One/.gitkeep[m
[1mdeleted file mode 100644[m
[1mindex e69de29..0000000[m
[1mdiff --git a/Project/Sprint One/Domain_Model.pdf b/Project/Sprint One/Domain_Model.pdf[m
[1mdeleted file mode 100644[m
[1mindex 36f2e93..0000000[m
[1m--- a/Project/Sprint One/Domain_Model.pdf[m	
[1m+++ /dev/null[m
[36m@@ -1,69 +0,0 @@[m
[31m-FIT3077 Sprint 1 Domain Model Diagram[m
[31m-Domain Entities and Relationships Justification:[m
[31m-[m
[31m-1. Dragon Token & Player:[m
[31m-Justification: Each player will choose a dragon (represented by the Dragon Token), which[m
[31m-covers the direct relation ("Player selects Dragon Token") summarising the essence of the[m
[31m-player’s role where they will influence the dragon token’s movement throughout the board.[m
[31m-[m
[31m-Relationship: 1:1 between Player and Dragon Token, highlighting that each player controls[m
[31m-exactly one dragon.[m
[31m-[m
[31m-2. Cave & Volcano Cut Card:[m
[31m-Caves are placed in the cuts of the Volcano Cut Cards, initialising the starting and ending[m
[31m-points for each dragon's trip around the volcano. This introduces the spatial relationship and[m
[31m-importance of game setup and movement through steps.[m
[31m-Relationship: 1:1 between the cave and cut card volcano, as each cave is placed in the[m
[31m-designated cut, resulting in a unique starting/ending point for the players.[m
[31m-[m
[31m-3. Volcano Card & Square:[m
[31m-Justification: The game board consists of Volcano Cards. Each of the cards has Squares[m
[31m-on them, and through these Squares, the dragons are moving. This relation represents the[m
[31m-physical layout of movement and game dynamics in the game.[m
[31m-Relationship: 1:3 between Volcano Card and Square, as each Volcano Card contains three[m
[31m-Squares.[m
[31m-[m
[31m-4. Chit & Player:[m
[31m-Justification: Unveiling of Chits (Dragon Cards) during the play of the game is one of the[m
[31m-ways to determine a dragon token's movement. It is a core relationship between the chit and[m
[31m-the player game mechanics, where players' action (card flipping) allows the dragon tokens to[m
[31m-move around the map, depending on whether the square’s animal the player is currently on[m
[31m-matches with the chit’s animal.[m
[31m-Relationship: 1:1 between Chit and Dragon Token, with each Chit representing a potential[m
[31m-certain number of moves for a given Dragon Token.[m
[31m-[m
[31m-5. Game, Player, Turn, Move, and Action (Flip):[m
[31m-The entities and relationships define the flow and mechanics of the game. The Game entity[m
[31m-will control the general flow of playing in the game, whereas Players make ‘Actions (Flips)’[m
[31m-each time they take Turns, which will determine where their respective dragon token moves[m
[31m-on the map. This structure models the sequential nature of play and the decision-making[m
[31m-process involved in each turn.[m
[31m-[m
[31m-Relationship: Sequential and hierarchical, reflecting the flow from Game to Player to Turn to[m
[31m-Move/Action, organising the game's dynamics in a coherent model.[m
[31m-[m
[31m-Specific Choices and Assumptions:[m
[31m-[m
[31m-Simplicity of Relationships Assumption: The simplicity of relationships assumption[m
[31m-implies it is basic and looks at the most fundamental relationships without overcomplicating[m
[31m-how entities or the relationships between them are intertwined. This was chosen for clarity[m
[31m-and ease of understanding, aligned with the target market of players.[m
[31m-[m
[31m-Direct Control: This is to say the model in question is between the Dragon Token and the[m
[31m-Player. Further reducing the relationship to clarify that the gameplay is direct from point A to[m
[31m-B, whereby the influence of players' decisions on the dragon's advancement is immediate.[m
[31m-[m
[31m-Other Notable Aspects:[m
[31m-[m
[31m-Pirate Dragon and Animal representation: The inclusion of entities like the Pirate Dragon[m
[31m-and animals (Salamander, Spider, Baby Dragon, Bat) on cards is not explicitly detailed but is[m
[31m-implied through the relationships with Chits and Dragon Cards. This inclusion assists in the[m
[31m-game logic[m
[31m-[m
[31m-Conclusion[m
[31m-In summary, the domain model created is intended to capture the game’s essential features[m
[31m-and game logic where simplicity and clarity are accentuated, for a coherent and readable[m
[31m-view of the game’s logical interaction. Certain assumptions were made to align with the[m
[31m-game’s nature, where emphasis was placed on player interaction and the sequential flow of[m
[31m-the game.[m
[31m-[m
[1mdiff --git a/Project/Sprint One/Google_Doc_Contribution_Log.pdf b/Project/Sprint One/Google_Doc_Contribution_Log.pdf[m
[1mdeleted file mode 100644[m
[1mindex 945d8b6..0000000[m
[1m--- a/Project/Sprint One/Google_Doc_Contribution_Log.pdf[m	
[1m+++ /dev/null[m
[36m@@ -1,38 +0,0 @@[m
[31m-       Sprint Contribution Log[m
[31m-[m
[31m-Glenn                                       Jaden                                       Kevin                                       William[m
[31m-[m
[31m-Team Information                            Team Information                            Team Information                            Team Information[m
[31m-     ● Individual tasks 20/03/2024               ● Individual tasks 19/03/2024               ● Individual tasks                          ● Individual tasks[m
[31m-     ● Discussion of regular meeting and         ● Documented and discussion                 ● Documented and discussed                  ● Documented and discussed[m
[31m-          work schedule 20/03/2024                    regular meeting and work                    Technology Stack 20/03/2024                 Technology Stack 20/03/2024[m
[31m-     ● Documented and discussed                       schedule 20/03/2024                    ● Discussion of Workload                    ● Discussion of Workload Distribution[m
[31m-          Technology Stack 20/03/2024            ● Documented and discussed                       Distribution 21/03/2024                     21/03/2024[m
[31m-     ● Discussion of Workload                         Technology Stack 20/03/2024            ● Documented and discussion                 ● Documented and discussion regular[m
[31m-          Distribution 21/03/2024                ● Discussion of Workload                         regular meeting and work                    meeting and work schedule[m
[31m-                                                      Distribution 21/03/2024                     schedule 20/03/2024                         20/03/2024[m
[31m-[m
[31m-User Stories                                User Stories                                User Stories                                User Stories[m
[31m-     ● Discussion and creation of all[m
[31m-          allocated user stories            ● Discussion and creation of all            ● Discussion and creation of all            ● Discussion and creation of all[m
[31m-          25/03/2024[m
[31m-                                                   allocated user stories 22/03/2024           allocated user stories 23/03/2024             allocated user stories 21/03/2024[m
[31m-[m
[31m-Domain Model                                Domain Model                                Domain Model                                Domain Model[m
[31m-     ● Created initial entities 23/03/2024       ● Created initial entities 23/03/2024       ● Added additional entities,                ● Added additional entities,[m
[31m-     ● Assisted in creating domain               ● Assisted in justifications and                 relationships and multiplicities            relationships and multiplicities[m
[31m-          model, adding entities and                  double-check relationships in               24/03/2024                                  24/03/2024[m
[31m-          relationships 25/03/2024                    domain model 26/03/2024                ● Completed justification and               ● Completed justification and design[m
[31m-                                                                                                  design choices for domain model             choices for domain model 25/03/2024[m
[31m-                                                                                                  25/03/2024[m
[31m-[m
[31m-Basic UI Design                             Basic UI Design                             Basic UI Design                             Basic UI Design[m
[31m-     ● Generated and designed game               ● Generated and designed game               ● Assisted in design choices and            ● Assisted in generating images for[m
[31m-          board and game elements                     board and game elements                     structure 23/03/2024                        design 23/03/2024[m
[31m-          23/03/2024                                  23/03/2024                             ● Assisted UI in Figma (shapes)             ● Assisted UI in Figma, (game[m
[31m-     ● Assisted in design choices                ● Assisted in design choices                ● Helped in design choices and                   structure) 24/03/2024[m
[31m-     ● Lead team in planning UI and              ● Lead team in planning UI and                   correct AI generated images            ● Helped in design choices and correct[m
[31m-          mapping out the structure                   mapping out the structure                                                               images[m
[31m-                                                 ● Assist in storyboarding different[m
[31m-                                                      game paths.[m
[31m-[m
[1mdiff --git a/Project/Sprint One/Team_Information_Document.pdf b/Project/Sprint One/Team_Information_Document.pdf[m
[1mdeleted file mode 100644[m
[1mindex bfccfaa..0000000[m
